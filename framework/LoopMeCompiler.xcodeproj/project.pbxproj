// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		4730AD0F21CA817500D0E382 /* Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = D003B26B1AFB9C2D007C7E0F /* Info.plist */; };
		4730AD1721CA822000D0E382 /* libxml2.tbd in Frameworks */ = {isa = PBXBuildFile; fileRef = 4730AD1621CA822000D0E382 /* libxml2.tbd */; };
		4730AD1921CA83B100D0E382 /* Info-Unity.plist in Resources */ = {isa = PBXBuildFile; fileRef = D003B26D1AFB9C3D007C7E0F /* Info-Unity.plist */; };
		473CB0AC1F7E8B7B003431CD /* LoopMeCompiler-Prefix.pch in Headers */ = {isa = PBXBuildFile; fileRef = D003B26E1AFB9C3D007C7E0F /* LoopMeCompiler-Prefix.pch */; };
		47A99B3D20FCCB4D002AF262 /* libxml2.tbd in Frameworks */ = {isa = PBXBuildFile; fileRef = 47A99B3C20FCCB4D002AF262 /* libxml2.tbd */; };
		47B01CA922E094AB00F8B6DC /* LoopMeTargeting.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BDE22E094AB00F8B6DC /* LoopMeTargeting.h */; };
		47B01CAA22E094AB00F8B6DC /* LoopMe_AbstractAvidAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE122E094AB00F8B6DC /* LoopMe_AbstractAvidAdSession.h */; };
		47B01CAB22E094AB00F8B6DC /* LoopMe_AvidDeferredAdSessionListener.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE222E094AB00F8B6DC /* LoopMe_AvidDeferredAdSessionListener.h */; };
		47B01CAC22E094AB00F8B6DC /* LoopMe_AvidAdSessionManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE322E094AB00F8B6DC /* LoopMe_AvidAdSessionManager.h */; };
		47B01CAD22E094AB00F8B6DC /* LoopMe_Avid.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE422E094AB00F8B6DC /* LoopMe_Avid.h */; };
		47B01CAE22E094AB00F8B6DC /* LoopMe_AvidDisplayAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE522E094AB00F8B6DC /* LoopMe_AvidDisplayAdSession.h */; };
		47B01CAF22E094AB00F8B6DC /* LoopMe_AvidVideoAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE622E094AB00F8B6DC /* LoopMe_AvidVideoAdSession.h */; };
		47B01CB022E094AB00F8B6DC /* LoopMe_AvidVideoPlaybackListener.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE722E094AB00F8B6DC /* LoopMe_AvidVideoPlaybackListener.h */; };
		47B01CB122E094AB00F8B6DC /* LoopMe_AvidManagedVideoAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE822E094AB00F8B6DC /* LoopMe_AvidManagedVideoAdSession.h */; };
		47B01CB222E094AB00F8B6DC /* LoopMe_ExternalAvidAdSessionContext.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE922E094AB00F8B6DC /* LoopMe_ExternalAvidAdSessionContext.h */; };
		47B01CB322E094AB00F8B6DC /* LoopMe_AbstractAvidManagedAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BEA22E094AB00F8B6DC /* LoopMe_AbstractAvidManagedAdSession.h */; };
		47B01CB422E094AB00F8B6DC /* LoopMe_AvidManagedDisplayAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BEB22E094AB00F8B6DC /* LoopMe_AvidManagedDisplayAdSession.h */; };
		47B01CB522E094AB00F8B6DC /* libAvid-loopme-3.6.8.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 47B01BEC22E094AB00F8B6DC /* libAvid-loopme-3.6.8.a */; };
		47B01CB622E094AB00F8B6DC /* LoopMeIASWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BED22E094AB00F8B6DC /* LoopMeIASWrapper.h */; };
		47B01CB722E094AB00F8B6DC /* OMSDK_Loopme.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 47B01BEF22E094AB00F8B6DC /* OMSDK_Loopme.framework */; };
		47B01CB822E094AB00F8B6DC /* LoopMeOMIDWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BF022E094AB00F8B6DC /* LoopMeOMIDWrapper.m */; };
		47B01CB922E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BF122E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.m */; };
		47B01CBA22E094AB00F8B6DC /* LoopMeOMIDWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BF222E094AB00F8B6DC /* LoopMeOMIDWrapper.h */; };
		47B01CBB22E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BF322E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.h */; };
		47B01CBC22E094AB00F8B6DC /* LoopMeViewabilityManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BF422E094AB00F8B6DC /* LoopMeViewabilityManager.m */; };
		47B01CBD22E094AB00F8B6DC /* LOOMoatMobileAppKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 47B01BF522E094AB00F8B6DC /* LOOMoatMobileAppKit.framework */; };
		47B01CBE22E094AB00F8B6DC /* LoopMeIASWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BF622E094AB00F8B6DC /* LoopMeIASWrapper.m */; };
		47B01CBF22E094AB00F8B6DC /* LoopMeViewabilityManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BF722E094AB00F8B6DC /* LoopMeViewabilityManager.h */; };
		47B01CC022E094AB00F8B6DC /* LoopMeAdView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BF822E094AB00F8B6DC /* LoopMeAdView.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01CC122E094AB00F8B6DC /* LoopMeSDKConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BFA22E094AB00F8B6DC /* LoopMeSDKConfiguration.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01CC222E094AB00F8B6DC /* LoopMeVPAIDClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BFC22E094AB00F8B6DC /* LoopMeVPAIDClient.m */; };
		47B01CC322E094AB00F8B6DC /* LoopMeJSClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BFD22E094AB00F8B6DC /* LoopMeJSClient.m */; };
		47B01CC422E094AB00F8B6DC /* LoopMeVideoClientNormal.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BFE22E094AB00F8B6DC /* LoopMeVideoClientNormal.m */; };
		47B01CC522E094AB00F8B6DC /* LoopMeVPAIDVideoClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BFF22E094AB00F8B6DC /* LoopMeVPAIDVideoClient.h */; };
		47B01CC622E094AB00F8B6DC /* LoopMeMRAIDClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0022E094AB00F8B6DC /* LoopMeMRAIDClient.h */; };
		47B01CC722E094AB00F8B6DC /* LoopMeJSClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0122E094AB00F8B6DC /* LoopMeJSClient.h */; };
		47B01CC822E094AB00F8B6DC /* LoopMeVPAIDClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0222E094AB00F8B6DC /* LoopMeVPAIDClient.h */; };
		47B01CC922E094AB00F8B6DC /* LoopMeMRAIDClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0322E094AB00F8B6DC /* LoopMeMRAIDClient.m */; };
		47B01CCA22E094AB00F8B6DC /* LoopMeVPAIDVideoClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0422E094AB00F8B6DC /* LoopMeVPAIDVideoClient.m */; };
		47B01CCB22E094AB00F8B6DC /* LoopMeVideoClientNormal.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0522E094AB00F8B6DC /* LoopMeVideoClientNormal.h */; };
		47B01CCC22E094AB00F8B6DC /* LoopMeVideoCommunicatorProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0722E094AB00F8B6DC /* LoopMeVideoCommunicatorProtocol.h */; };
		47B01CCD22E094AB00F8B6DC /* LoopMeJSCommunicatorProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0822E094AB00F8B6DC /* LoopMeJSCommunicatorProtocol.h */; };
		47B01CCE22E094AB00F8B6DC /* LoopMeViewabilityProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0922E094AB00F8B6DC /* LoopMeViewabilityProtocol.h */; };
		47B01CCF22E094AB00F8B6DC /* LoopMeInterstitialGeneral.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0B22E094AB00F8B6DC /* LoopMeInterstitialGeneral.h */; };
		47B01CD022E094AB00F8B6DC /* LoopMeInterstitial.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0C22E094AB00F8B6DC /* LoopMeInterstitial.m */; };
		47B01CD122E094AB00F8B6DC /* LoopMeInterstitialGeneral.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0D22E094AB00F8B6DC /* LoopMeInterstitialGeneral.m */; };
		47B01CD222E094AB00F8B6DC /* LoopMeDiscURLCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0F22E094AB00F8B6DC /* LoopMeDiscURLCache.m */; };
		47B01CD322E094AB00F8B6DC /* LoopMeDiscURLCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C1022E094AB00F8B6DC /* LoopMeDiscURLCache.h */; };
		47B01CD422E094AB00F8B6DC /* LoopMeTargeting.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1222E094AB00F8B6DC /* LoopMeTargeting.m */; };
		47B01CD522E094AB00F8B6DC /* LoopMeResources.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 47B01C1422E094AB00F8B6DC /* LoopMeResources.bundle */; };
		47B01CD622E094AB00F8B6DC /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 47B01C1522E094AB00F8B6DC /* Assets.xcassets */; };
		47B01CD722E094AB00F8B6DC /* LoopMeServerCommunicator.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C1722E094AB00F8B6DC /* LoopMeServerCommunicator.h */; };
		47B01CD822E094AB00F8B6DC /* LoopMeAdConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C1822E094AB00F8B6DC /* LoopMeAdConfiguration.h */; };
		47B01CD922E094AB00F8B6DC /* LoopMeVideoManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1922E094AB00F8B6DC /* LoopMeVideoManager.m */; };
		47B01CDA22E094AB00F8B6DC /* LoopMeReachability.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1A22E094AB00F8B6DC /* LoopMeReachability.m */; };
		47B01CDB22E094AB00F8B6DC /* LoopMeVASTImageDownloader.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1B22E094AB00F8B6DC /* LoopMeVASTImageDownloader.m */; };
		47B01CDC22E094AB00F8B6DC /* LoopMeAdManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1C22E094AB00F8B6DC /* LoopMeAdManager.m */; };
		47B01CDD22E094AB00F8B6DC /* LoopMeURLResolver.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C1D22E094AB00F8B6DC /* LoopMeURLResolver.h */; };
		47B01CDE22E094AB00F8B6DC /* LoopMeAdConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1E22E094AB00F8B6DC /* LoopMeAdConfiguration.m */; };
		47B01CDF22E094AB00F8B6DC /* LoopMeServerCommunicator.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1F22E094AB00F8B6DC /* LoopMeServerCommunicator.m */; };
		47B01CE022E094AB00F8B6DC /* LoopMeURLResolver.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C2022E094AB00F8B6DC /* LoopMeURLResolver.m */; };
		47B01CE122E094AB00F8B6DC /* LoopMeVASTImageDownloader.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2122E094AB00F8B6DC /* LoopMeVASTImageDownloader.h */; };
		47B01CE222E094AB00F8B6DC /* LoopMeAdManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2222E094AB00F8B6DC /* LoopMeAdManager.h */; };
		47B01CE322E094AB00F8B6DC /* LoopMeReachability.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2322E094AB00F8B6DC /* LoopMeReachability.h */; };
		47B01CE422E094AB00F8B6DC /* LoopMeVideoManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2422E094AB00F8B6DC /* LoopMeVideoManager.h */; };
		47B01CE522E094AB00F8B6DC /* LoopMeVASTEventTracker.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2622E094AB00F8B6DC /* LoopMeVASTEventTracker.h */; };
		47B01CE622E094AB00F8B6DC /* LoopMeErrorEventSender.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C2722E094AB00F8B6DC /* LoopMeErrorEventSender.m */; };
		47B01CE722E094AB00F8B6DC /* LoopMeVASTEventTracker.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C2822E094AB00F8B6DC /* LoopMeVASTEventTracker.m */; };
		47B01CE822E094AB00F8B6DC /* LoopMeErrorEventSender.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2922E094AB00F8B6DC /* LoopMeErrorEventSender.h */; };
		47B01CE922E094AB00F8B6DC /* LoopMeInterstitialViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2C22E094AB00F8B6DC /* LoopMeInterstitialViewController.h */; };
		47B01CEA22E094AB00F8B6DC /* LoopMeInterstitialViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C2D22E094AB00F8B6DC /* LoopMeInterstitialViewController.m */; };
		47B01CEB22E094AB00F8B6DC /* LoopMeBrowserViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2F22E094AB00F8B6DC /* LoopMeBrowserViewController.h */; };
		47B01CEC22E094AB00F8B6DC /* LoopMeBrowserViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3022E094AB00F8B6DC /* LoopMeBrowserViewController.m */; };
		47B01CED22E094AB00F8B6DC /* LoopMe360ViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3222E094AB00F8B6DC /* LoopMe360ViewController.h */; };
		47B01CEE22E094AB00F8B6DC /* LoopMeGLProgram.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3422E094AB00F8B6DC /* LoopMeGLProgram.m */; };
		47B01CEF22E094AB00F8B6DC /* LoopMeGLProgram.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3522E094AB00F8B6DC /* LoopMeGLProgram.h */; };
		47B01CF022E094AB00F8B6DC /* LoopMe360ViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3622E094AB00F8B6DC /* LoopMe360ViewController.m */; };
		47B01CF122E094AB00F8B6DC /* LoopMeOrientationViewControllerProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3722E094AB00F8B6DC /* LoopMeOrientationViewControllerProtocol.h */; };
		47B01CF222E094AB00F8B6DC /* LoopMeSDKConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3822E094AB00F8B6DC /* LoopMeSDKConfiguration.m */; };
		47B01CF322E094AB00F8B6DC /* LoopMeDestinationDisplayController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3A22E094AB00F8B6DC /* LoopMeDestinationDisplayController.h */; };
		47B01CF422E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3B22E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.h */; };
		47B01CF522E094AB00F8B6DC /* LoopMeAdDisplayController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3C22E094AB00F8B6DC /* LoopMeAdDisplayController.h */; };
		47B01CF622E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3D22E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.m */; };
		47B01CF722E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3E22E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.m */; };
		47B01CF822E094AB00F8B6DC /* LoopMeDestinationDisplayController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3F22E094AB00F8B6DC /* LoopMeDestinationDisplayController.m */; };
		47B01CF922E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4022E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.h */; };
		47B01CFA22E094AB00F8B6DC /* LoopMeAdDisplayController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4122E094AB00F8B6DC /* LoopMeAdDisplayController.m */; };
		47B01CFB22E094AB00F8B6DC /* LoopMeORTBTools.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4322E094AB00F8B6DC /* LoopMeORTBTools.m */; };
		47B01CFC22E094AB00F8B6DC /* LoopMeServerURLBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4422E094AB00F8B6DC /* LoopMeServerURLBuilder.m */; };
		47B01CFD22E094AB00F8B6DC /* LoopMeORTBTools.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4522E094AB00F8B6DC /* LoopMeORTBTools.h */; };
		47B01CFE22E094AB00F8B6DC /* LoopMeServerURLBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4622E094AB00F8B6DC /* LoopMeServerURLBuilder.h */; };
		47B01CFF22E094AB00F8B6DC /* LoopMeCloseButton.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4822E094AB00F8B6DC /* LoopMeCloseButton.h */; };
		47B01D0022E094AB00F8B6DC /* LoopMeActivityIndicatorView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4A22E094AB00F8B6DC /* LoopMeActivityIndicatorView.m */; };
		47B01D0122E094AB00F8B6DC /* LoopMeProgressOverlayView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4B22E094AB00F8B6DC /* LoopMeProgressOverlayView.h */; };
		47B01D0222E094AB00F8B6DC /* LoopMeActivityIndicatorView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4C22E094AB00F8B6DC /* LoopMeActivityIndicatorView.h */; };
		47B01D0322E094AB00F8B6DC /* LoopMeProgressOverlayView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4D22E094AB00F8B6DC /* LoopMeProgressOverlayView.m */; };
		47B01D0422E094AB00F8B6DC /* LoopMeBackView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4E22E094AB00F8B6DC /* LoopMeBackView.h */; };
		47B01D0522E094AB00F8B6DC /* LoopMeAdWebView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5022E094AB00F8B6DC /* LoopMeAdWebView.h */; };
		47B01D0622E094AB00F8B6DC /* LoopMeAdWebView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5122E094AB00F8B6DC /* LoopMeAdWebView.m */; };
		47B01D0722E094AB00F8B6DC /* LoopMeVASTPlayerUIView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5222E094AB00F8B6DC /* LoopMeVASTPlayerUIView.m */; };
		47B01D0822E094AB00F8B6DC /* LoopMeCancelView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5322E094AB00F8B6DC /* LoopMeCancelView.m */; };
		47B01D0922E094AB00F8B6DC /* LoopMeCloseButton.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5422E094AB00F8B6DC /* LoopMeCloseButton.m */; };
		47B01D0A22E094AB00F8B6DC /* LoopMeBackView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5522E094AB00F8B6DC /* LoopMeBackView.m */; };
		47B01D0B22E094AB00F8B6DC /* LoopMeVASTPlayerUIView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5622E094AB00F8B6DC /* LoopMeVASTPlayerUIView.h */; };
		47B01D0C22E094AB00F8B6DC /* LoopMeCancelView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5722E094AB00F8B6DC /* LoopMeCancelView.h */; };
		47B01D0D22E094AB00F8B6DC /* LoopMeMinimizedAdView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5A22E094AB00F8B6DC /* LoopMeMinimizedAdView.h */; };
		47B01D0E22E094AB00F8B6DC /* LoopMeMinimizedAdView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5B22E094AB00F8B6DC /* LoopMeMinimizedAdView.m */; };
		47B01D0F22E094AB00F8B6DC /* LoopMeAdView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5C22E094AB00F8B6DC /* LoopMeAdView.m */; };
		47B01D1022E094AB00F8B6DC /* LoopMeMaximizedViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5E22E094AB00F8B6DC /* LoopMeMaximizedViewController.m */; };
		47B01D1122E094AB00F8B6DC /* LoopMeMaximizedViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5F22E094AB00F8B6DC /* LoopMeMaximizedViewController.h */; };
		47B01D1222E094AB00F8B6DC /* LoopMeSDK.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C6022E094AB00F8B6DC /* LoopMeSDK.m */; };
		47B01D1322E094AB00F8B6DC /* LoopMeAnalyticsProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C6222E094AB00F8B6DC /* LoopMeAnalyticsProvider.m */; };
		47B01D1422E094AB00F8B6DC /* LoopMeAudioCheck.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6322E094AB00F8B6DC /* LoopMeAudioCheck.h */; };
		47B01D1522E094AB00F8B6DC /* LoopMeError.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C6422E094AB00F8B6DC /* LoopMeError.m */; };
		47B01D1622E094AB00F8B6DC /* LoopMeAdType.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6522E094AB00F8B6DC /* LoopMeAdType.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01D1722E094AB00F8B6DC /* LoopMeVPAIDDefinitions.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6622E094AB00F8B6DC /* LoopMeVPAIDDefinitions.h */; };
		47B01D1822E094AB00F8B6DC /* LoopMeGlobalSettings.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6722E094AB00F8B6DC /* LoopMeGlobalSettings.h */; };
		47B01D1922E094AB00F8B6DC /* LoopMeVPAIDError.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C6822E094AB00F8B6DC /* LoopMeVPAIDError.m */; };
		47B01D1A22E094AB00F8B6DC /* LoopMeVPAIDConverter.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6922E094AB00F8B6DC /* LoopMeVPAIDConverter.h */; };
		47B01D1B22E094AB00F8B6DC /* LoopMeGeoLocationProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6A22E094AB00F8B6DC /* LoopMeGeoLocationProvider.h */; };
		47B01D1C22E094AB00F8B6DC /* LoopMeLogging.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6B22E094AB00F8B6DC /* LoopMeLogging.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01D1D22E094AB00F8B6DC /* LoopMeIdentityProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6C22E094AB00F8B6DC /* LoopMeIdentityProvider.h */; };
		47B01D1E22E094AB00F8B6DC /* LoopMeDefinitions.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6D22E094AB00F8B6DC /* LoopMeDefinitions.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01D1F22E094AB00F8B6DC /* LoopMeAnalyticsProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6E22E094AB00F8B6DC /* LoopMeAnalyticsProvider.h */; };
		47B01D2022E094AB00F8B6DC /* LoopMeError.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6F22E094AB00F8B6DC /* LoopMeError.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01D2122E094AB00F8B6DC /* LoopMeAudioCheck.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7022E094AB00F8B6DC /* LoopMeAudioCheck.m */; };
		47B01D2222E094AB00F8B6DC /* LoopMeGlobalSettings.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7122E094AB00F8B6DC /* LoopMeGlobalSettings.m */; };
		47B01D2322E094AB00F8B6DC /* NSDictionary+JSONPrint.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7322E094AB00F8B6DC /* NSDictionary+JSONPrint.h */; };
		47B01D2422E094AB00F8B6DC /* NSData+LoopMeAES128.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7422E094AB00F8B6DC /* NSData+LoopMeAES128.m */; };
		47B01D2522E094AB00F8B6DC /* NSString+Encryption.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7522E094AB00F8B6DC /* NSString+Encryption.m */; };
		47B01D2622E094AB00F8B6DC /* NSURL+LoopMeAdditions.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7622E094AB00F8B6DC /* NSURL+LoopMeAdditions.m */; };
		47B01D2722E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7722E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.h */; };
		47B01D2822E094AB00F8B6DC /* NSDictionary+JSONPrint.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7822E094AB00F8B6DC /* NSDictionary+JSONPrint.m */; };
		47B01D2922E094AB00F8B6DC /* NSString+Encryption.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7922E094AB00F8B6DC /* NSString+Encryption.h */; };
		47B01D2A22E094AB00F8B6DC /* NSData+LoopMeAES128.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7A22E094AB00F8B6DC /* NSData+LoopMeAES128.h */; };
		47B01D2B22E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7B22E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.m */; };
		47B01D2C22E094AB00F8B6DC /* NSURL+LoopMeAdditions.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7C22E094AB00F8B6DC /* NSURL+LoopMeAdditions.h */; };
		47B01D2D22E094AB00F8B6DC /* LoopMeIdentityProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7D22E094AB00F8B6DC /* LoopMeIdentityProvider.m */; };
		47B01D2E22E094AB00F8B6DC /* LoopMeLogging.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7E22E094AB00F8B6DC /* LoopMeLogging.m */; };
		47B01D2F22E094AB00F8B6DC /* LoopMeGeoLocationProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7F22E094AB00F8B6DC /* LoopMeGeoLocationProvider.m */; };
		47B01D3022E094AB00F8B6DC /* LoopMeVPAIDError.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8022E094AB00F8B6DC /* LoopMeVPAIDError.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01D3122E094AB00F8B6DC /* LoopMeVPAIDConverter.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8122E094AB00F8B6DC /* LoopMeVPAIDConverter.m */; };
		47B01D3222E094AB00F8B6DC /* LoopMeSkipOffset.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8322E094AB00F8B6DC /* LoopMeSkipOffset.h */; };
		47B01D3322E094AB00F8B6DC /* LoopMeVASTTrackingLinks.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8422E094AB00F8B6DC /* LoopMeVASTTrackingLinks.h */; };
		47B01D3422E094AB00F8B6DC /* LoopMeVASTMacroProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8522E094AB00F8B6DC /* LoopMeVASTMacroProcessor.h */; };
		47B01D3522E094AB00F8B6DC /* LoopMeVASTProgressEvent.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8622E094AB00F8B6DC /* LoopMeVASTProgressEvent.h */; };
		47B01D3622E094AB00F8B6DC /* LoopMeVASTXMLParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8722E094AB00F8B6DC /* LoopMeVASTXMLParser.m */; };
		47B01D3722E094AB00F8B6DC /* LoopMeVASTAssetLinks.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8822E094AB00F8B6DC /* LoopMeVASTAssetLinks.m */; };
		47B01D3822E094AB00F8B6DC /* LoopMeVASTProgressEvent.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8922E094AB00F8B6DC /* LoopMeVASTProgressEvent.m */; };
		47B01D3922E094AB00F8B6DC /* LoopMeVASTMacroProcessor.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8A22E094AB00F8B6DC /* LoopMeVASTMacroProcessor.m */; };
		47B01D3A22E094AB00F8B6DC /* LoopMeSkipOffset.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8B22E094AB00F8B6DC /* LoopMeSkipOffset.m */; };
		47B01D3B22E094AB00F8B6DC /* LoopMeVASTTrackingLinks.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8C22E094AB00F8B6DC /* LoopMeVASTTrackingLinks.m */; };
		47B01D3C22E094AB00F8B6DC /* DDXMLDocument.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8E22E094AB00F8B6DC /* DDXMLDocument.h */; };
		47B01D3D22E094AB00F8B6DC /* DDXML.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8F22E094AB00F8B6DC /* DDXML.h */; };
		47B01D3E22E094AB00F8B6DC /* DDXMLElement.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9022E094AB00F8B6DC /* DDXMLElement.m */; };
		47B01D3F22E094AB00F8B6DC /* KissXML.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9122E094AB00F8B6DC /* KissXML.h */; };
		47B01D4022E094AB00F8B6DC /* DDXMLElementAdditions.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9322E094AB00F8B6DC /* DDXMLElementAdditions.h */; };
		47B01D4122E094AB00F8B6DC /* DDXMLElementAdditions.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9422E094AB00F8B6DC /* DDXMLElementAdditions.m */; };
		47B01D4222E094AB00F8B6DC /* DDXMLNode.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9522E094AB00F8B6DC /* DDXMLNode.m */; };
		47B01D4322E094AB00F8B6DC /* DDXMLDocument.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9622E094AB00F8B6DC /* DDXMLDocument.m */; };
		47B01D4422E094AB00F8B6DC /* DDXMLPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9822E094AB00F8B6DC /* DDXMLPrivate.h */; };
		47B01D4522E094AB00F8B6DC /* DDXMLElement.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9922E094AB00F8B6DC /* DDXMLElement.h */; };
		47B01D4622E094AB00F8B6DC /* NSString+DDXML.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9B22E094AB00F8B6DC /* NSString+DDXML.h */; };
		47B01D4722E094AB00F8B6DC /* NSString+DDXML.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9C22E094AB00F8B6DC /* NSString+DDXML.m */; };
		47B01D4822E094AB00F8B6DC /* DDXMLNode.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9D22E094AB00F8B6DC /* DDXMLNode.h */; };
		47B01D4922E094AB00F8B6DC /* LoopMeVASTXMLParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9E22E094AB00F8B6DC /* LoopMeVASTXMLParser.h */; };
		47B01D4A22E094AB00F8B6DC /* LoopMeVASTAssetLinks.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9F22E094AB00F8B6DC /* LoopMeVASTAssetLinks.h */; };
		47B01D4B22E094AB00F8B6DC /* LoopMeSDK.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA022E094AB00F8B6DC /* LoopMeSDK.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01D4C22E094AB00F8B6DC /* LoopMeGDPRViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01CA222E094AB00F8B6DC /* LoopMeGDPRViewController.m */; };
		47B01D4D22E094AB00F8B6DC /* LoopMeGDPRAPIService.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA322E094AB00F8B6DC /* LoopMeGDPRAPIService.h */; };
		47B01D4E22E094AB00F8B6DC /* LoopMeGDPRTools.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA422E094AB00F8B6DC /* LoopMeGDPRTools.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47B01D4F22E094AB00F8B6DC /* LoopMeGDPRAPIService.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01CA522E094AB00F8B6DC /* LoopMeGDPRAPIService.m */; };
		47B01D5022E094AB00F8B6DC /* LoopMeGDPRViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA622E094AB00F8B6DC /* LoopMeGDPRViewController.h */; };
		47B01D5122E094AB00F8B6DC /* LoopMeGDPRTools.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01CA722E094AB00F8B6DC /* LoopMeGDPRTools.m */; };
		47B01D5222E094AB00F8B6DC /* LoopMeInterstitial.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA822E094AB00F8B6DC /* LoopMeInterstitial.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FD6422EB4D6600836E3B /* LoopMeTargeting.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BDE22E094AB00F8B6DC /* LoopMeTargeting.h */; };
		47E9FD6522EB4D6E00836E3B /* LoopMe_AbstractAvidAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE122E094AB00F8B6DC /* LoopMe_AbstractAvidAdSession.h */; };
		47E9FD6622EB4D6E00836E3B /* LoopMe_AvidDeferredAdSessionListener.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE222E094AB00F8B6DC /* LoopMe_AvidDeferredAdSessionListener.h */; };
		47E9FD6722EB4D6E00836E3B /* LoopMe_AvidAdSessionManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE322E094AB00F8B6DC /* LoopMe_AvidAdSessionManager.h */; };
		47E9FD6822EB4D6E00836E3B /* LoopMe_Avid.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE422E094AB00F8B6DC /* LoopMe_Avid.h */; };
		47E9FD6922EB4D6E00836E3B /* LoopMe_AvidDisplayAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE522E094AB00F8B6DC /* LoopMe_AvidDisplayAdSession.h */; };
		47E9FD6A22EB4D6E00836E3B /* LoopMe_AvidVideoAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE622E094AB00F8B6DC /* LoopMe_AvidVideoAdSession.h */; };
		47E9FD6B22EB4D6E00836E3B /* LoopMe_AvidVideoPlaybackListener.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE722E094AB00F8B6DC /* LoopMe_AvidVideoPlaybackListener.h */; };
		47E9FD6C22EB4D6E00836E3B /* LoopMe_AvidManagedVideoAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE822E094AB00F8B6DC /* LoopMe_AvidManagedVideoAdSession.h */; };
		47E9FD6D22EB4D6E00836E3B /* LoopMe_ExternalAvidAdSessionContext.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BE922E094AB00F8B6DC /* LoopMe_ExternalAvidAdSessionContext.h */; };
		47E9FD6E22EB4D6E00836E3B /* LoopMe_AbstractAvidManagedAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BEA22E094AB00F8B6DC /* LoopMe_AbstractAvidManagedAdSession.h */; };
		47E9FD6F22EB4D6E00836E3B /* LoopMe_AvidManagedDisplayAdSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BEB22E094AB00F8B6DC /* LoopMe_AvidManagedDisplayAdSession.h */; };
		47E9FD7022EB4D7500836E3B /* LoopMeOMIDWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BF022E094AB00F8B6DC /* LoopMeOMIDWrapper.m */; };
		47E9FD7122EB4D7500836E3B /* LoopMeOMIDVideoEventsWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BF122E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.m */; };
		47E9FD7222EB4D7500836E3B /* LoopMeOMIDWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BF222E094AB00F8B6DC /* LoopMeOMIDWrapper.h */; };
		47E9FD7322EB4D7500836E3B /* LoopMeOMIDVideoEventsWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BF322E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.h */; };
		47E9FD7422EB4D8100836E3B /* LoopMeIASWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BED22E094AB00F8B6DC /* LoopMeIASWrapper.h */; };
		47E9FD7522EB4D8700836E3B /* libAvid-loopme-3.6.8.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 47B01BEC22E094AB00F8B6DC /* libAvid-loopme-3.6.8.a */; };
		47E9FD7622EB4D9100836E3B /* OMSDK_Loopme.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 47B01BEF22E094AB00F8B6DC /* OMSDK_Loopme.framework */; };
		47E9FD7722EB4D9800836E3B /* LoopMeViewabilityManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BF422E094AB00F8B6DC /* LoopMeViewabilityManager.m */; };
		47E9FD7822EB4D9A00836E3B /* LOOMoatMobileAppKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 47B01BF522E094AB00F8B6DC /* LOOMoatMobileAppKit.framework */; };
		47E9FD7922EB4D9D00836E3B /* LoopMeIASWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BF622E094AB00F8B6DC /* LoopMeIASWrapper.m */; };
		47E9FD7A22EB4D9D00836E3B /* LoopMeViewabilityManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BF722E094AB00F8B6DC /* LoopMeViewabilityManager.h */; };
		47E9FD7B22EB4DA000836E3B /* LoopMeAdView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BF822E094AB00F8B6DC /* LoopMeAdView.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FD7C22EB4DA400836E3B /* LoopMeSDKConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BFA22E094AB00F8B6DC /* LoopMeSDKConfiguration.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FD7D22EB4DAB00836E3B /* LoopMeVPAIDClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BFC22E094AB00F8B6DC /* LoopMeVPAIDClient.m */; };
		47E9FD7E22EB4DAB00836E3B /* LoopMeJSClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BFD22E094AB00F8B6DC /* LoopMeJSClient.m */; };
		47E9FD7F22EB4DAB00836E3B /* LoopMeVideoClientNormal.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01BFE22E094AB00F8B6DC /* LoopMeVideoClientNormal.m */; };
		47E9FD8022EB4DAB00836E3B /* LoopMeVPAIDVideoClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01BFF22E094AB00F8B6DC /* LoopMeVPAIDVideoClient.h */; };
		47E9FD8122EB4DAB00836E3B /* LoopMeMRAIDClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0022E094AB00F8B6DC /* LoopMeMRAIDClient.h */; };
		47E9FD8222EB4DAB00836E3B /* LoopMeJSClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0122E094AB00F8B6DC /* LoopMeJSClient.h */; };
		47E9FD8322EB4DAB00836E3B /* LoopMeVPAIDClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0222E094AB00F8B6DC /* LoopMeVPAIDClient.h */; };
		47E9FD8422EB4DAB00836E3B /* LoopMeMRAIDClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0322E094AB00F8B6DC /* LoopMeMRAIDClient.m */; };
		47E9FD8522EB4DAB00836E3B /* LoopMeVPAIDVideoClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0422E094AB00F8B6DC /* LoopMeVPAIDVideoClient.m */; };
		47E9FD8622EB4DAB00836E3B /* LoopMeVideoClientNormal.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0522E094AB00F8B6DC /* LoopMeVideoClientNormal.h */; };
		47E9FD8722EB4DAF00836E3B /* LoopMeVideoCommunicatorProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0722E094AB00F8B6DC /* LoopMeVideoCommunicatorProtocol.h */; };
		47E9FD8822EB4DAF00836E3B /* LoopMeJSCommunicatorProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0822E094AB00F8B6DC /* LoopMeJSCommunicatorProtocol.h */; };
		47E9FD8922EB4DAF00836E3B /* LoopMeViewabilityProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0922E094AB00F8B6DC /* LoopMeViewabilityProtocol.h */; };
		47E9FD8A22EB4DB500836E3B /* LoopMeInterstitialGeneral.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C0B22E094AB00F8B6DC /* LoopMeInterstitialGeneral.h */; };
		47E9FD8B22EB4DB500836E3B /* LoopMeInterstitial.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0C22E094AB00F8B6DC /* LoopMeInterstitial.m */; };
		47E9FD8C22EB4DB500836E3B /* LoopMeInterstitialGeneral.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0D22E094AB00F8B6DC /* LoopMeInterstitialGeneral.m */; };
		47E9FD8D22EB4DBA00836E3B /* LoopMeDiscURLCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C0F22E094AB00F8B6DC /* LoopMeDiscURLCache.m */; };
		47E9FD8E22EB4DBA00836E3B /* LoopMeDiscURLCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C1022E094AB00F8B6DC /* LoopMeDiscURLCache.h */; };
		47E9FD8F22EB4DBD00836E3B /* LoopMeTargeting.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1222E094AB00F8B6DC /* LoopMeTargeting.m */; };
		47E9FD9022EB4DC200836E3B /* LoopMeResources.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 47B01C1422E094AB00F8B6DC /* LoopMeResources.bundle */; };
		47E9FD9122EB4DC500836E3B /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 47B01C1522E094AB00F8B6DC /* Assets.xcassets */; };
		47E9FD9222EB4DCC00836E3B /* LoopMeServerCommunicator.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C1722E094AB00F8B6DC /* LoopMeServerCommunicator.h */; };
		47E9FD9322EB4DCC00836E3B /* LoopMeAdConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C1822E094AB00F8B6DC /* LoopMeAdConfiguration.h */; };
		47E9FD9422EB4DCC00836E3B /* LoopMeVideoManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1922E094AB00F8B6DC /* LoopMeVideoManager.m */; };
		47E9FD9522EB4DCC00836E3B /* LoopMeReachability.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1A22E094AB00F8B6DC /* LoopMeReachability.m */; };
		47E9FD9622EB4DCC00836E3B /* LoopMeVASTImageDownloader.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1B22E094AB00F8B6DC /* LoopMeVASTImageDownloader.m */; };
		47E9FD9722EB4DCC00836E3B /* LoopMeAdManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1C22E094AB00F8B6DC /* LoopMeAdManager.m */; };
		47E9FD9822EB4DCC00836E3B /* LoopMeURLResolver.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C1D22E094AB00F8B6DC /* LoopMeURLResolver.h */; };
		47E9FD9922EB4DCC00836E3B /* LoopMeAdConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1E22E094AB00F8B6DC /* LoopMeAdConfiguration.m */; };
		47E9FD9A22EB4DCC00836E3B /* LoopMeServerCommunicator.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C1F22E094AB00F8B6DC /* LoopMeServerCommunicator.m */; };
		47E9FD9B22EB4DCC00836E3B /* LoopMeURLResolver.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C2022E094AB00F8B6DC /* LoopMeURLResolver.m */; };
		47E9FD9C22EB4DCC00836E3B /* LoopMeVASTImageDownloader.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2122E094AB00F8B6DC /* LoopMeVASTImageDownloader.h */; };
		47E9FD9D22EB4DCC00836E3B /* LoopMeAdManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2222E094AB00F8B6DC /* LoopMeAdManager.h */; };
		47E9FD9E22EB4DCC00836E3B /* LoopMeReachability.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2322E094AB00F8B6DC /* LoopMeReachability.h */; };
		47E9FD9F22EB4DCC00836E3B /* LoopMeVideoManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2422E094AB00F8B6DC /* LoopMeVideoManager.h */; };
		47E9FDA022EB4DD000836E3B /* LoopMeVASTEventTracker.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2622E094AB00F8B6DC /* LoopMeVASTEventTracker.h */; };
		47E9FDA122EB4DD000836E3B /* LoopMeErrorEventSender.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C2722E094AB00F8B6DC /* LoopMeErrorEventSender.m */; };
		47E9FDA222EB4DD000836E3B /* LoopMeVASTEventTracker.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C2822E094AB00F8B6DC /* LoopMeVASTEventTracker.m */; };
		47E9FDA322EB4DD000836E3B /* LoopMeErrorEventSender.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2922E094AB00F8B6DC /* LoopMeErrorEventSender.h */; };
		47E9FDA422EB4DD500836E3B /* LoopMeInterstitialViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2C22E094AB00F8B6DC /* LoopMeInterstitialViewController.h */; };
		47E9FDA522EB4DD500836E3B /* LoopMeInterstitialViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C2D22E094AB00F8B6DC /* LoopMeInterstitialViewController.m */; };
		47E9FDA622EB4DD800836E3B /* LoopMeBrowserViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C2F22E094AB00F8B6DC /* LoopMeBrowserViewController.h */; };
		47E9FDA722EB4DD800836E3B /* LoopMeBrowserViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3022E094AB00F8B6DC /* LoopMeBrowserViewController.m */; };
		47E9FDA822EB4DDC00836E3B /* LoopMe360ViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3222E094AB00F8B6DC /* LoopMe360ViewController.h */; };
		47E9FDA922EB4DE000836E3B /* LoopMeGLProgram.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3422E094AB00F8B6DC /* LoopMeGLProgram.m */; };
		47E9FDAA22EB4DE000836E3B /* LoopMeGLProgram.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3522E094AB00F8B6DC /* LoopMeGLProgram.h */; };
		47E9FDAB22EB4DE200836E3B /* LoopMe360ViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3622E094AB00F8B6DC /* LoopMe360ViewController.m */; };
		47E9FDAC22EB4DE500836E3B /* LoopMeOrientationViewControllerProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3722E094AB00F8B6DC /* LoopMeOrientationViewControllerProtocol.h */; };
		47E9FDAD22EB4DE700836E3B /* LoopMeSDKConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3822E094AB00F8B6DC /* LoopMeSDKConfiguration.m */; };
		47E9FDAE22EB4DEC00836E3B /* LoopMeDestinationDisplayController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3A22E094AB00F8B6DC /* LoopMeDestinationDisplayController.h */; };
		47E9FDAF22EB4DEC00836E3B /* LoopMeVPAIDAdDisplayController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3B22E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.h */; };
		47E9FDB022EB4DEC00836E3B /* LoopMeAdDisplayController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C3C22E094AB00F8B6DC /* LoopMeAdDisplayController.h */; };
		47E9FDB122EB4DEC00836E3B /* LoopMeAdDisplayControllerNormal.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3D22E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.m */; };
		47E9FDB222EB4DEC00836E3B /* LoopMeVPAIDAdDisplayController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3E22E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.m */; };
		47E9FDB322EB4DEC00836E3B /* LoopMeDestinationDisplayController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C3F22E094AB00F8B6DC /* LoopMeDestinationDisplayController.m */; };
		47E9FDB422EB4DEC00836E3B /* LoopMeAdDisplayControllerNormal.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4022E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.h */; };
		47E9FDB522EB4DEC00836E3B /* LoopMeAdDisplayController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4122E094AB00F8B6DC /* LoopMeAdDisplayController.m */; };
		47E9FDB622EB4DF200836E3B /* LoopMeORTBTools.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4322E094AB00F8B6DC /* LoopMeORTBTools.m */; };
		47E9FDB722EB4DF200836E3B /* LoopMeServerURLBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4422E094AB00F8B6DC /* LoopMeServerURLBuilder.m */; };
		47E9FDB822EB4DF200836E3B /* LoopMeORTBTools.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4522E094AB00F8B6DC /* LoopMeORTBTools.h */; };
		47E9FDB922EB4DF200836E3B /* LoopMeServerURLBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4622E094AB00F8B6DC /* LoopMeServerURLBuilder.h */; };
		47E9FDBA22EB4DF500836E3B /* LoopMeCloseButton.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4822E094AB00F8B6DC /* LoopMeCloseButton.h */; };
		47E9FDBB22EB4DF900836E3B /* LoopMeActivityIndicatorView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4A22E094AB00F8B6DC /* LoopMeActivityIndicatorView.m */; };
		47E9FDBC22EB4DF900836E3B /* LoopMeProgressOverlayView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4B22E094AB00F8B6DC /* LoopMeProgressOverlayView.h */; };
		47E9FDBD22EB4DF900836E3B /* LoopMeActivityIndicatorView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4C22E094AB00F8B6DC /* LoopMeActivityIndicatorView.h */; };
		47E9FDBE22EB4DF900836E3B /* LoopMeProgressOverlayView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C4D22E094AB00F8B6DC /* LoopMeProgressOverlayView.m */; };
		47E9FDBF22EB4DF900836E3B /* LoopMeBackView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C4E22E094AB00F8B6DC /* LoopMeBackView.h */; };
		47E9FDC022EB4DFF00836E3B /* LoopMeAdWebView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5022E094AB00F8B6DC /* LoopMeAdWebView.h */; };
		47E9FDC122EB4DFF00836E3B /* LoopMeAdWebView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5122E094AB00F8B6DC /* LoopMeAdWebView.m */; };
		47E9FDC222EB4E0300836E3B /* LoopMeVASTPlayerUIView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5222E094AB00F8B6DC /* LoopMeVASTPlayerUIView.m */; };
		47E9FDC322EB4E0300836E3B /* LoopMeCancelView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5322E094AB00F8B6DC /* LoopMeCancelView.m */; };
		47E9FDC422EB4E0300836E3B /* LoopMeCloseButton.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5422E094AB00F8B6DC /* LoopMeCloseButton.m */; };
		47E9FDC522EB4E0300836E3B /* LoopMeBackView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5522E094AB00F8B6DC /* LoopMeBackView.m */; };
		47E9FDC622EB4E0300836E3B /* LoopMeVASTPlayerUIView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5622E094AB00F8B6DC /* LoopMeVASTPlayerUIView.h */; };
		47E9FDC722EB4E0300836E3B /* LoopMeCancelView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5722E094AB00F8B6DC /* LoopMeCancelView.h */; };
		47E9FDC822EB4E0800836E3B /* LoopMeMinimizedAdView.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5A22E094AB00F8B6DC /* LoopMeMinimizedAdView.h */; };
		47E9FDC922EB4E0800836E3B /* LoopMeMinimizedAdView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5B22E094AB00F8B6DC /* LoopMeMinimizedAdView.m */; };
		47E9FDCA22EB4E0800836E3B /* LoopMeAdView.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5C22E094AB00F8B6DC /* LoopMeAdView.m */; };
		47E9FDCB22EB4E0B00836E3B /* LoopMeMaximizedViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C5E22E094AB00F8B6DC /* LoopMeMaximizedViewController.m */; };
		47E9FDCC22EB4E0B00836E3B /* LoopMeMaximizedViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C5F22E094AB00F8B6DC /* LoopMeMaximizedViewController.h */; };
		47E9FDCD22EB4E0B00836E3B /* LoopMeSDK.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C6022E094AB00F8B6DC /* LoopMeSDK.m */; };
		47E9FDCE22EB4E1000836E3B /* LoopMeAnalyticsProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C6222E094AB00F8B6DC /* LoopMeAnalyticsProvider.m */; };
		47E9FDCF22EB4E1000836E3B /* LoopMeAudioCheck.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6322E094AB00F8B6DC /* LoopMeAudioCheck.h */; };
		47E9FDD022EB4E1000836E3B /* LoopMeError.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C6422E094AB00F8B6DC /* LoopMeError.m */; };
		47E9FDD122EB4E1000836E3B /* LoopMeAdType.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6522E094AB00F8B6DC /* LoopMeAdType.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FDD222EB4E1000836E3B /* LoopMeVPAIDDefinitions.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6622E094AB00F8B6DC /* LoopMeVPAIDDefinitions.h */; };
		47E9FDD322EB4E1000836E3B /* LoopMeGlobalSettings.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6722E094AB00F8B6DC /* LoopMeGlobalSettings.h */; };
		47E9FDD422EB4E1000836E3B /* LoopMeVPAIDError.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C6822E094AB00F8B6DC /* LoopMeVPAIDError.m */; };
		47E9FDD522EB4E1000836E3B /* LoopMeVPAIDConverter.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6922E094AB00F8B6DC /* LoopMeVPAIDConverter.h */; };
		47E9FDD622EB4E1000836E3B /* LoopMeGeoLocationProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6A22E094AB00F8B6DC /* LoopMeGeoLocationProvider.h */; };
		47E9FDD722EB4E1000836E3B /* LoopMeLogging.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6B22E094AB00F8B6DC /* LoopMeLogging.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FDD822EB4E1000836E3B /* LoopMeIdentityProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6C22E094AB00F8B6DC /* LoopMeIdentityProvider.h */; };
		47E9FDD922EB4E1000836E3B /* LoopMeDefinitions.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6D22E094AB00F8B6DC /* LoopMeDefinitions.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FDDA22EB4E1000836E3B /* LoopMeAnalyticsProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6E22E094AB00F8B6DC /* LoopMeAnalyticsProvider.h */; };
		47E9FDDB22EB4E1000836E3B /* LoopMeError.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C6F22E094AB00F8B6DC /* LoopMeError.h */; };
		47E9FDDC22EB4E1000836E3B /* LoopMeAudioCheck.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7022E094AB00F8B6DC /* LoopMeAudioCheck.m */; };
		47E9FDDD22EB4E1000836E3B /* LoopMeGlobalSettings.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7122E094AB00F8B6DC /* LoopMeGlobalSettings.m */; };
		47E9FDDE22EB4E1600836E3B /* NSDictionary+JSONPrint.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7322E094AB00F8B6DC /* NSDictionary+JSONPrint.h */; };
		47E9FDDF22EB4E1600836E3B /* NSData+LoopMeAES128.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7422E094AB00F8B6DC /* NSData+LoopMeAES128.m */; };
		47E9FDE022EB4E1600836E3B /* NSString+Encryption.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7522E094AB00F8B6DC /* NSString+Encryption.m */; };
		47E9FDE122EB4E1600836E3B /* NSURL+LoopMeAdditions.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7622E094AB00F8B6DC /* NSURL+LoopMeAdditions.m */; };
		47E9FDE222EB4E1600836E3B /* UIImage+LoopMeBinaryImage.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7722E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.h */; };
		47E9FDE322EB4E1600836E3B /* NSDictionary+JSONPrint.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7822E094AB00F8B6DC /* NSDictionary+JSONPrint.m */; };
		47E9FDE422EB4E1600836E3B /* NSString+Encryption.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7922E094AB00F8B6DC /* NSString+Encryption.h */; };
		47E9FDE522EB4E1600836E3B /* NSData+LoopMeAES128.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7A22E094AB00F8B6DC /* NSData+LoopMeAES128.h */; };
		47E9FDE622EB4E1600836E3B /* UIImage+LoopMeBinaryImage.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7B22E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.m */; };
		47E9FDE722EB4E1600836E3B /* NSURL+LoopMeAdditions.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C7C22E094AB00F8B6DC /* NSURL+LoopMeAdditions.h */; };
		47E9FDE822EB4E1600836E3B /* LoopMeIdentityProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7D22E094AB00F8B6DC /* LoopMeIdentityProvider.m */; };
		47E9FDE922EB4E1600836E3B /* LoopMeLogging.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7E22E094AB00F8B6DC /* LoopMeLogging.m */; };
		47E9FDEA22EB4E1600836E3B /* LoopMeGeoLocationProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C7F22E094AB00F8B6DC /* LoopMeGeoLocationProvider.m */; };
		47E9FDEB22EB4E1600836E3B /* LoopMeVPAIDError.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8022E094AB00F8B6DC /* LoopMeVPAIDError.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FDEC22EB4E1600836E3B /* LoopMeVPAIDConverter.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8122E094AB00F8B6DC /* LoopMeVPAIDConverter.m */; };
		47E9FDED22EB4E1A00836E3B /* LoopMeSkipOffset.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8322E094AB00F8B6DC /* LoopMeSkipOffset.h */; };
		47E9FDEE22EB4E1A00836E3B /* LoopMeVASTTrackingLinks.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8422E094AB00F8B6DC /* LoopMeVASTTrackingLinks.h */; };
		47E9FDEF22EB4E1A00836E3B /* LoopMeVASTMacroProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8522E094AB00F8B6DC /* LoopMeVASTMacroProcessor.h */; };
		47E9FDF022EB4E1A00836E3B /* LoopMeVASTProgressEvent.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8622E094AB00F8B6DC /* LoopMeVASTProgressEvent.h */; };
		47E9FDF122EB4E1A00836E3B /* LoopMeVASTXMLParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8722E094AB00F8B6DC /* LoopMeVASTXMLParser.m */; };
		47E9FDF222EB4E1A00836E3B /* LoopMeVASTAssetLinks.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8822E094AB00F8B6DC /* LoopMeVASTAssetLinks.m */; };
		47E9FDF322EB4E1A00836E3B /* LoopMeVASTProgressEvent.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8922E094AB00F8B6DC /* LoopMeVASTProgressEvent.m */; };
		47E9FDF422EB4E1A00836E3B /* LoopMeVASTMacroProcessor.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8A22E094AB00F8B6DC /* LoopMeVASTMacroProcessor.m */; };
		47E9FDF522EB4E1A00836E3B /* LoopMeSkipOffset.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8B22E094AB00F8B6DC /* LoopMeSkipOffset.m */; };
		47E9FDF622EB4E1A00836E3B /* LoopMeVASTTrackingLinks.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C8C22E094AB00F8B6DC /* LoopMeVASTTrackingLinks.m */; };
		47E9FDF722EB4E1F00836E3B /* DDXMLDocument.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8E22E094AB00F8B6DC /* DDXMLDocument.h */; };
		47E9FDF822EB4E1F00836E3B /* DDXML.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C8F22E094AB00F8B6DC /* DDXML.h */; };
		47E9FDF922EB4E1F00836E3B /* DDXMLElement.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9022E094AB00F8B6DC /* DDXMLElement.m */; };
		47E9FDFA22EB4E1F00836E3B /* KissXML.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9122E094AB00F8B6DC /* KissXML.h */; };
		47E9FDFB22EB4E2200836E3B /* DDXMLElementAdditions.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9322E094AB00F8B6DC /* DDXMLElementAdditions.h */; };
		47E9FDFC22EB4E2200836E3B /* DDXMLElementAdditions.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9422E094AB00F8B6DC /* DDXMLElementAdditions.m */; };
		47E9FDFD22EB4E2200836E3B /* DDXMLNode.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9522E094AB00F8B6DC /* DDXMLNode.m */; };
		47E9FDFE22EB4E2200836E3B /* DDXMLDocument.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9622E094AB00F8B6DC /* DDXMLDocument.m */; };
		47E9FDFF22EB4E2600836E3B /* DDXMLElement.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9922E094AB00F8B6DC /* DDXMLElement.h */; };
		47E9FE0022EB4E2800836E3B /* DDXMLPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9822E094AB00F8B6DC /* DDXMLPrivate.h */; };
		47E9FE0122EB4E2D00836E3B /* NSString+DDXML.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9B22E094AB00F8B6DC /* NSString+DDXML.h */; };
		47E9FE0222EB4E2D00836E3B /* NSString+DDXML.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01C9C22E094AB00F8B6DC /* NSString+DDXML.m */; };
		47E9FE0322EB4E2D00836E3B /* DDXMLNode.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9D22E094AB00F8B6DC /* DDXMLNode.h */; };
		47E9FE0422EB4E2D00836E3B /* LoopMeVASTXMLParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9E22E094AB00F8B6DC /* LoopMeVASTXMLParser.h */; };
		47E9FE0522EB4E2E00836E3B /* LoopMeVASTAssetLinks.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01C9F22E094AB00F8B6DC /* LoopMeVASTAssetLinks.h */; };
		47E9FE0622EB4E3000836E3B /* LoopMeSDK.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA022E094AB00F8B6DC /* LoopMeSDK.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FE0722EB4E3700836E3B /* LoopMeGDPRViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01CA222E094AB00F8B6DC /* LoopMeGDPRViewController.m */; };
		47E9FE0822EB4E3700836E3B /* LoopMeGDPRAPIService.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA322E094AB00F8B6DC /* LoopMeGDPRAPIService.h */; };
		47E9FE0922EB4E3700836E3B /* LoopMeGDPRTools.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA422E094AB00F8B6DC /* LoopMeGDPRTools.h */; settings = {ATTRIBUTES = (Public, ); }; };
		47E9FE0A22EB4E3700836E3B /* LoopMeGDPRAPIService.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01CA522E094AB00F8B6DC /* LoopMeGDPRAPIService.m */; };
		47E9FE0B22EB4E3700836E3B /* LoopMeGDPRViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA622E094AB00F8B6DC /* LoopMeGDPRViewController.h */; };
		47E9FE0C22EB4E3700836E3B /* LoopMeGDPRTools.m in Sources */ = {isa = PBXBuildFile; fileRef = 47B01CA722E094AB00F8B6DC /* LoopMeGDPRTools.m */; };
		47E9FE0D22EB4E3700836E3B /* LoopMeInterstitial.h in Headers */ = {isa = PBXBuildFile; fileRef = 47B01CA822E094AB00F8B6DC /* LoopMeInterstitial.h */; settings = {ATTRIBUTES = (Public, ); }; };
		D003B2701AFB9C3D007C7E0F /* LoopMeCompiler-Prefix.pch in Headers */ = {isa = PBXBuildFile; fileRef = D003B26E1AFB9C3D007C7E0F /* LoopMeCompiler-Prefix.pch */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		4730AD1621CA822000D0E382 /* libxml2.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libxml2.tbd; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/usr/lib/libxml2.tbd; sourceTree = DEVELOPER_DIR; };
		473CB0BE1F7E8B7B003431CD /* LoopMeUnitedSDK.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = LoopMeUnitedSDK.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		47A99B3C20FCCB4D002AF262 /* libxml2.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libxml2.tbd; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.4.sdk/usr/lib/libxml2.tbd; sourceTree = DEVELOPER_DIR; };
		47B01BDE22E094AB00F8B6DC /* LoopMeTargeting.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeTargeting.h; sourceTree = "<group>"; };
		47B01BE122E094AB00F8B6DC /* LoopMe_AbstractAvidAdSession.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AbstractAvidAdSession.h; sourceTree = "<group>"; };
		47B01BE222E094AB00F8B6DC /* LoopMe_AvidDeferredAdSessionListener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AvidDeferredAdSessionListener.h; sourceTree = "<group>"; };
		47B01BE322E094AB00F8B6DC /* LoopMe_AvidAdSessionManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AvidAdSessionManager.h; sourceTree = "<group>"; };
		47B01BE422E094AB00F8B6DC /* LoopMe_Avid.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_Avid.h; sourceTree = "<group>"; };
		47B01BE522E094AB00F8B6DC /* LoopMe_AvidDisplayAdSession.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AvidDisplayAdSession.h; sourceTree = "<group>"; };
		47B01BE622E094AB00F8B6DC /* LoopMe_AvidVideoAdSession.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AvidVideoAdSession.h; sourceTree = "<group>"; };
		47B01BE722E094AB00F8B6DC /* LoopMe_AvidVideoPlaybackListener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AvidVideoPlaybackListener.h; sourceTree = "<group>"; };
		47B01BE822E094AB00F8B6DC /* LoopMe_AvidManagedVideoAdSession.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AvidManagedVideoAdSession.h; sourceTree = "<group>"; };
		47B01BE922E094AB00F8B6DC /* LoopMe_ExternalAvidAdSessionContext.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_ExternalAvidAdSessionContext.h; sourceTree = "<group>"; };
		47B01BEA22E094AB00F8B6DC /* LoopMe_AbstractAvidManagedAdSession.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AbstractAvidManagedAdSession.h; sourceTree = "<group>"; };
		47B01BEB22E094AB00F8B6DC /* LoopMe_AvidManagedDisplayAdSession.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe_AvidManagedDisplayAdSession.h; sourceTree = "<group>"; };
		47B01BEC22E094AB00F8B6DC /* libAvid-loopme-3.6.8.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = "libAvid-loopme-3.6.8.a"; sourceTree = "<group>"; };
		47B01BED22E094AB00F8B6DC /* LoopMeIASWrapper.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeIASWrapper.h; sourceTree = "<group>"; };
		47B01BEF22E094AB00F8B6DC /* OMSDK_Loopme.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = OMSDK_Loopme.framework; sourceTree = "<group>"; };
		47B01BF022E094AB00F8B6DC /* LoopMeOMIDWrapper.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeOMIDWrapper.m; sourceTree = "<group>"; };
		47B01BF122E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeOMIDVideoEventsWrapper.m; sourceTree = "<group>"; };
		47B01BF222E094AB00F8B6DC /* LoopMeOMIDWrapper.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeOMIDWrapper.h; sourceTree = "<group>"; };
		47B01BF322E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeOMIDVideoEventsWrapper.h; sourceTree = "<group>"; };
		47B01BF422E094AB00F8B6DC /* LoopMeViewabilityManager.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeViewabilityManager.m; sourceTree = "<group>"; };
		47B01BF522E094AB00F8B6DC /* LOOMoatMobileAppKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = LOOMoatMobileAppKit.framework; sourceTree = "<group>"; };
		47B01BF622E094AB00F8B6DC /* LoopMeIASWrapper.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeIASWrapper.m; sourceTree = "<group>"; };
		47B01BF722E094AB00F8B6DC /* LoopMeViewabilityManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeViewabilityManager.h; sourceTree = "<group>"; };
		47B01BF822E094AB00F8B6DC /* LoopMeAdView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAdView.h; sourceTree = "<group>"; };
		47B01BFA22E094AB00F8B6DC /* LoopMeSDKConfiguration.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeSDKConfiguration.h; sourceTree = "<group>"; };
		47B01BFC22E094AB00F8B6DC /* LoopMeVPAIDClient.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVPAIDClient.m; sourceTree = "<group>"; };
		47B01BFD22E094AB00F8B6DC /* LoopMeJSClient.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeJSClient.m; sourceTree = "<group>"; };
		47B01BFE22E094AB00F8B6DC /* LoopMeVideoClientNormal.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVideoClientNormal.m; sourceTree = "<group>"; };
		47B01BFF22E094AB00F8B6DC /* LoopMeVPAIDVideoClient.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVPAIDVideoClient.h; sourceTree = "<group>"; };
		47B01C0022E094AB00F8B6DC /* LoopMeMRAIDClient.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeMRAIDClient.h; sourceTree = "<group>"; };
		47B01C0122E094AB00F8B6DC /* LoopMeJSClient.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeJSClient.h; sourceTree = "<group>"; };
		47B01C0222E094AB00F8B6DC /* LoopMeVPAIDClient.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVPAIDClient.h; sourceTree = "<group>"; };
		47B01C0322E094AB00F8B6DC /* LoopMeMRAIDClient.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeMRAIDClient.m; sourceTree = "<group>"; };
		47B01C0422E094AB00F8B6DC /* LoopMeVPAIDVideoClient.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVPAIDVideoClient.m; sourceTree = "<group>"; };
		47B01C0522E094AB00F8B6DC /* LoopMeVideoClientNormal.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVideoClientNormal.h; sourceTree = "<group>"; };
		47B01C0722E094AB00F8B6DC /* LoopMeVideoCommunicatorProtocol.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVideoCommunicatorProtocol.h; sourceTree = "<group>"; };
		47B01C0822E094AB00F8B6DC /* LoopMeJSCommunicatorProtocol.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeJSCommunicatorProtocol.h; sourceTree = "<group>"; };
		47B01C0922E094AB00F8B6DC /* LoopMeViewabilityProtocol.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeViewabilityProtocol.h; sourceTree = "<group>"; };
		47B01C0B22E094AB00F8B6DC /* LoopMeInterstitialGeneral.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeInterstitialGeneral.h; sourceTree = "<group>"; };
		47B01C0C22E094AB00F8B6DC /* LoopMeInterstitial.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeInterstitial.m; sourceTree = "<group>"; };
		47B01C0D22E094AB00F8B6DC /* LoopMeInterstitialGeneral.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeInterstitialGeneral.m; sourceTree = "<group>"; };
		47B01C0F22E094AB00F8B6DC /* LoopMeDiscURLCache.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeDiscURLCache.m; sourceTree = "<group>"; };
		47B01C1022E094AB00F8B6DC /* LoopMeDiscURLCache.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeDiscURLCache.h; sourceTree = "<group>"; };
		47B01C1222E094AB00F8B6DC /* LoopMeTargeting.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeTargeting.m; sourceTree = "<group>"; };
		47B01C1422E094AB00F8B6DC /* LoopMeResources.bundle */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.plug-in"; path = LoopMeResources.bundle; sourceTree = "<group>"; };
		47B01C1522E094AB00F8B6DC /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		47B01C1722E094AB00F8B6DC /* LoopMeServerCommunicator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeServerCommunicator.h; sourceTree = "<group>"; };
		47B01C1822E094AB00F8B6DC /* LoopMeAdConfiguration.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAdConfiguration.h; sourceTree = "<group>"; };
		47B01C1922E094AB00F8B6DC /* LoopMeVideoManager.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVideoManager.m; sourceTree = "<group>"; };
		47B01C1A22E094AB00F8B6DC /* LoopMeReachability.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeReachability.m; sourceTree = "<group>"; };
		47B01C1B22E094AB00F8B6DC /* LoopMeVASTImageDownloader.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVASTImageDownloader.m; sourceTree = "<group>"; };
		47B01C1C22E094AB00F8B6DC /* LoopMeAdManager.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeAdManager.m; sourceTree = "<group>"; };
		47B01C1D22E094AB00F8B6DC /* LoopMeURLResolver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeURLResolver.h; sourceTree = "<group>"; };
		47B01C1E22E094AB00F8B6DC /* LoopMeAdConfiguration.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeAdConfiguration.m; sourceTree = "<group>"; };
		47B01C1F22E094AB00F8B6DC /* LoopMeServerCommunicator.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeServerCommunicator.m; sourceTree = "<group>"; };
		47B01C2022E094AB00F8B6DC /* LoopMeURLResolver.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeURLResolver.m; sourceTree = "<group>"; };
		47B01C2122E094AB00F8B6DC /* LoopMeVASTImageDownloader.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVASTImageDownloader.h; sourceTree = "<group>"; };
		47B01C2222E094AB00F8B6DC /* LoopMeAdManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAdManager.h; sourceTree = "<group>"; };
		47B01C2322E094AB00F8B6DC /* LoopMeReachability.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeReachability.h; sourceTree = "<group>"; };
		47B01C2422E094AB00F8B6DC /* LoopMeVideoManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVideoManager.h; sourceTree = "<group>"; };
		47B01C2622E094AB00F8B6DC /* LoopMeVASTEventTracker.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVASTEventTracker.h; sourceTree = "<group>"; };
		47B01C2722E094AB00F8B6DC /* LoopMeErrorEventSender.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeErrorEventSender.m; sourceTree = "<group>"; };
		47B01C2822E094AB00F8B6DC /* LoopMeVASTEventTracker.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVASTEventTracker.m; sourceTree = "<group>"; };
		47B01C2922E094AB00F8B6DC /* LoopMeErrorEventSender.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeErrorEventSender.h; sourceTree = "<group>"; };
		47B01C2C22E094AB00F8B6DC /* LoopMeInterstitialViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeInterstitialViewController.h; sourceTree = "<group>"; };
		47B01C2D22E094AB00F8B6DC /* LoopMeInterstitialViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeInterstitialViewController.m; sourceTree = "<group>"; };
		47B01C2F22E094AB00F8B6DC /* LoopMeBrowserViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeBrowserViewController.h; sourceTree = "<group>"; };
		47B01C3022E094AB00F8B6DC /* LoopMeBrowserViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeBrowserViewController.m; sourceTree = "<group>"; };
		47B01C3222E094AB00F8B6DC /* LoopMe360ViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMe360ViewController.h; sourceTree = "<group>"; };
		47B01C3422E094AB00F8B6DC /* LoopMeGLProgram.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeGLProgram.m; sourceTree = "<group>"; };
		47B01C3522E094AB00F8B6DC /* LoopMeGLProgram.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeGLProgram.h; sourceTree = "<group>"; };
		47B01C3622E094AB00F8B6DC /* LoopMe360ViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMe360ViewController.m; sourceTree = "<group>"; };
		47B01C3722E094AB00F8B6DC /* LoopMeOrientationViewControllerProtocol.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeOrientationViewControllerProtocol.h; sourceTree = "<group>"; };
		47B01C3822E094AB00F8B6DC /* LoopMeSDKConfiguration.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeSDKConfiguration.m; sourceTree = "<group>"; };
		47B01C3A22E094AB00F8B6DC /* LoopMeDestinationDisplayController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeDestinationDisplayController.h; sourceTree = "<group>"; };
		47B01C3B22E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVPAIDAdDisplayController.h; sourceTree = "<group>"; };
		47B01C3C22E094AB00F8B6DC /* LoopMeAdDisplayController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAdDisplayController.h; sourceTree = "<group>"; };
		47B01C3D22E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeAdDisplayControllerNormal.m; sourceTree = "<group>"; };
		47B01C3E22E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVPAIDAdDisplayController.m; sourceTree = "<group>"; };
		47B01C3F22E094AB00F8B6DC /* LoopMeDestinationDisplayController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeDestinationDisplayController.m; sourceTree = "<group>"; };
		47B01C4022E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAdDisplayControllerNormal.h; sourceTree = "<group>"; };
		47B01C4122E094AB00F8B6DC /* LoopMeAdDisplayController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeAdDisplayController.m; sourceTree = "<group>"; };
		47B01C4322E094AB00F8B6DC /* LoopMeORTBTools.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeORTBTools.m; sourceTree = "<group>"; };
		47B01C4422E094AB00F8B6DC /* LoopMeServerURLBuilder.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeServerURLBuilder.m; sourceTree = "<group>"; };
		47B01C4522E094AB00F8B6DC /* LoopMeORTBTools.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeORTBTools.h; sourceTree = "<group>"; };
		47B01C4622E094AB00F8B6DC /* LoopMeServerURLBuilder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeServerURLBuilder.h; sourceTree = "<group>"; };
		47B01C4822E094AB00F8B6DC /* LoopMeCloseButton.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeCloseButton.h; sourceTree = "<group>"; };
		47B01C4A22E094AB00F8B6DC /* LoopMeActivityIndicatorView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeActivityIndicatorView.m; sourceTree = "<group>"; };
		47B01C4B22E094AB00F8B6DC /* LoopMeProgressOverlayView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeProgressOverlayView.h; sourceTree = "<group>"; };
		47B01C4C22E094AB00F8B6DC /* LoopMeActivityIndicatorView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeActivityIndicatorView.h; sourceTree = "<group>"; };
		47B01C4D22E094AB00F8B6DC /* LoopMeProgressOverlayView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeProgressOverlayView.m; sourceTree = "<group>"; };
		47B01C4E22E094AB00F8B6DC /* LoopMeBackView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeBackView.h; sourceTree = "<group>"; };
		47B01C5022E094AB00F8B6DC /* LoopMeAdWebView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAdWebView.h; sourceTree = "<group>"; };
		47B01C5122E094AB00F8B6DC /* LoopMeAdWebView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeAdWebView.m; sourceTree = "<group>"; };
		47B01C5222E094AB00F8B6DC /* LoopMeVASTPlayerUIView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVASTPlayerUIView.m; sourceTree = "<group>"; };
		47B01C5322E094AB00F8B6DC /* LoopMeCancelView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeCancelView.m; sourceTree = "<group>"; };
		47B01C5422E094AB00F8B6DC /* LoopMeCloseButton.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeCloseButton.m; sourceTree = "<group>"; };
		47B01C5522E094AB00F8B6DC /* LoopMeBackView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeBackView.m; sourceTree = "<group>"; };
		47B01C5622E094AB00F8B6DC /* LoopMeVASTPlayerUIView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVASTPlayerUIView.h; sourceTree = "<group>"; };
		47B01C5722E094AB00F8B6DC /* LoopMeCancelView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeCancelView.h; sourceTree = "<group>"; };
		47B01C5A22E094AB00F8B6DC /* LoopMeMinimizedAdView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeMinimizedAdView.h; sourceTree = "<group>"; };
		47B01C5B22E094AB00F8B6DC /* LoopMeMinimizedAdView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeMinimizedAdView.m; sourceTree = "<group>"; };
		47B01C5C22E094AB00F8B6DC /* LoopMeAdView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeAdView.m; sourceTree = "<group>"; };
		47B01C5E22E094AB00F8B6DC /* LoopMeMaximizedViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeMaximizedViewController.m; sourceTree = "<group>"; };
		47B01C5F22E094AB00F8B6DC /* LoopMeMaximizedViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeMaximizedViewController.h; sourceTree = "<group>"; };
		47B01C6022E094AB00F8B6DC /* LoopMeSDK.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeSDK.m; sourceTree = "<group>"; };
		47B01C6222E094AB00F8B6DC /* LoopMeAnalyticsProvider.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeAnalyticsProvider.m; sourceTree = "<group>"; };
		47B01C6322E094AB00F8B6DC /* LoopMeAudioCheck.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAudioCheck.h; sourceTree = "<group>"; };
		47B01C6422E094AB00F8B6DC /* LoopMeError.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeError.m; sourceTree = "<group>"; };
		47B01C6522E094AB00F8B6DC /* LoopMeAdType.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAdType.h; sourceTree = "<group>"; };
		47B01C6622E094AB00F8B6DC /* LoopMeVPAIDDefinitions.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVPAIDDefinitions.h; sourceTree = "<group>"; };
		47B01C6722E094AB00F8B6DC /* LoopMeGlobalSettings.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeGlobalSettings.h; sourceTree = "<group>"; };
		47B01C6822E094AB00F8B6DC /* LoopMeVPAIDError.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVPAIDError.m; sourceTree = "<group>"; };
		47B01C6922E094AB00F8B6DC /* LoopMeVPAIDConverter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVPAIDConverter.h; sourceTree = "<group>"; };
		47B01C6A22E094AB00F8B6DC /* LoopMeGeoLocationProvider.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeGeoLocationProvider.h; sourceTree = "<group>"; };
		47B01C6B22E094AB00F8B6DC /* LoopMeLogging.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeLogging.h; sourceTree = "<group>"; };
		47B01C6C22E094AB00F8B6DC /* LoopMeIdentityProvider.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeIdentityProvider.h; sourceTree = "<group>"; };
		47B01C6D22E094AB00F8B6DC /* LoopMeDefinitions.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeDefinitions.h; sourceTree = "<group>"; };
		47B01C6E22E094AB00F8B6DC /* LoopMeAnalyticsProvider.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeAnalyticsProvider.h; sourceTree = "<group>"; };
		47B01C6F22E094AB00F8B6DC /* LoopMeError.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeError.h; sourceTree = "<group>"; };
		47B01C7022E094AB00F8B6DC /* LoopMeAudioCheck.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeAudioCheck.m; sourceTree = "<group>"; };
		47B01C7122E094AB00F8B6DC /* LoopMeGlobalSettings.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeGlobalSettings.m; sourceTree = "<group>"; };
		47B01C7322E094AB00F8B6DC /* NSDictionary+JSONPrint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSDictionary+JSONPrint.h"; sourceTree = "<group>"; };
		47B01C7422E094AB00F8B6DC /* NSData+LoopMeAES128.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSData+LoopMeAES128.m"; sourceTree = "<group>"; };
		47B01C7522E094AB00F8B6DC /* NSString+Encryption.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSString+Encryption.m"; sourceTree = "<group>"; };
		47B01C7622E094AB00F8B6DC /* NSURL+LoopMeAdditions.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSURL+LoopMeAdditions.m"; sourceTree = "<group>"; };
		47B01C7722E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "UIImage+LoopMeBinaryImage.h"; sourceTree = "<group>"; };
		47B01C7822E094AB00F8B6DC /* NSDictionary+JSONPrint.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSDictionary+JSONPrint.m"; sourceTree = "<group>"; };
		47B01C7922E094AB00F8B6DC /* NSString+Encryption.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSString+Encryption.h"; sourceTree = "<group>"; };
		47B01C7A22E094AB00F8B6DC /* NSData+LoopMeAES128.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSData+LoopMeAES128.h"; sourceTree = "<group>"; };
		47B01C7B22E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "UIImage+LoopMeBinaryImage.m"; sourceTree = "<group>"; };
		47B01C7C22E094AB00F8B6DC /* NSURL+LoopMeAdditions.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSURL+LoopMeAdditions.h"; sourceTree = "<group>"; };
		47B01C7D22E094AB00F8B6DC /* LoopMeIdentityProvider.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeIdentityProvider.m; sourceTree = "<group>"; };
		47B01C7E22E094AB00F8B6DC /* LoopMeLogging.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeLogging.m; sourceTree = "<group>"; };
		47B01C7F22E094AB00F8B6DC /* LoopMeGeoLocationProvider.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeGeoLocationProvider.m; sourceTree = "<group>"; };
		47B01C8022E094AB00F8B6DC /* LoopMeVPAIDError.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVPAIDError.h; sourceTree = "<group>"; };
		47B01C8122E094AB00F8B6DC /* LoopMeVPAIDConverter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVPAIDConverter.m; sourceTree = "<group>"; };
		47B01C8322E094AB00F8B6DC /* LoopMeSkipOffset.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeSkipOffset.h; sourceTree = "<group>"; };
		47B01C8422E094AB00F8B6DC /* LoopMeVASTTrackingLinks.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVASTTrackingLinks.h; sourceTree = "<group>"; };
		47B01C8522E094AB00F8B6DC /* LoopMeVASTMacroProcessor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVASTMacroProcessor.h; sourceTree = "<group>"; };
		47B01C8622E094AB00F8B6DC /* LoopMeVASTProgressEvent.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVASTProgressEvent.h; sourceTree = "<group>"; };
		47B01C8722E094AB00F8B6DC /* LoopMeVASTXMLParser.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVASTXMLParser.m; sourceTree = "<group>"; };
		47B01C8822E094AB00F8B6DC /* LoopMeVASTAssetLinks.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVASTAssetLinks.m; sourceTree = "<group>"; };
		47B01C8922E094AB00F8B6DC /* LoopMeVASTProgressEvent.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVASTProgressEvent.m; sourceTree = "<group>"; };
		47B01C8A22E094AB00F8B6DC /* LoopMeVASTMacroProcessor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVASTMacroProcessor.m; sourceTree = "<group>"; };
		47B01C8B22E094AB00F8B6DC /* LoopMeSkipOffset.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeSkipOffset.m; sourceTree = "<group>"; };
		47B01C8C22E094AB00F8B6DC /* LoopMeVASTTrackingLinks.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeVASTTrackingLinks.m; sourceTree = "<group>"; };
		47B01C8E22E094AB00F8B6DC /* DDXMLDocument.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDXMLDocument.h; sourceTree = "<group>"; };
		47B01C8F22E094AB00F8B6DC /* DDXML.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDXML.h; sourceTree = "<group>"; };
		47B01C9022E094AB00F8B6DC /* DDXMLElement.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDXMLElement.m; sourceTree = "<group>"; };
		47B01C9122E094AB00F8B6DC /* KissXML.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KissXML.h; sourceTree = "<group>"; };
		47B01C9322E094AB00F8B6DC /* DDXMLElementAdditions.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDXMLElementAdditions.h; sourceTree = "<group>"; };
		47B01C9422E094AB00F8B6DC /* DDXMLElementAdditions.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDXMLElementAdditions.m; sourceTree = "<group>"; };
		47B01C9522E094AB00F8B6DC /* DDXMLNode.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDXMLNode.m; sourceTree = "<group>"; };
		47B01C9622E094AB00F8B6DC /* DDXMLDocument.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DDXMLDocument.m; sourceTree = "<group>"; };
		47B01C9822E094AB00F8B6DC /* DDXMLPrivate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDXMLPrivate.h; sourceTree = "<group>"; };
		47B01C9922E094AB00F8B6DC /* DDXMLElement.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDXMLElement.h; sourceTree = "<group>"; };
		47B01C9B22E094AB00F8B6DC /* NSString+DDXML.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSString+DDXML.h"; sourceTree = "<group>"; };
		47B01C9C22E094AB00F8B6DC /* NSString+DDXML.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSString+DDXML.m"; sourceTree = "<group>"; };
		47B01C9D22E094AB00F8B6DC /* DDXMLNode.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DDXMLNode.h; sourceTree = "<group>"; };
		47B01C9E22E094AB00F8B6DC /* LoopMeVASTXMLParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVASTXMLParser.h; sourceTree = "<group>"; };
		47B01C9F22E094AB00F8B6DC /* LoopMeVASTAssetLinks.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeVASTAssetLinks.h; sourceTree = "<group>"; };
		47B01CA022E094AB00F8B6DC /* LoopMeSDK.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeSDK.h; sourceTree = "<group>"; };
		47B01CA222E094AB00F8B6DC /* LoopMeGDPRViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeGDPRViewController.m; sourceTree = "<group>"; };
		47B01CA322E094AB00F8B6DC /* LoopMeGDPRAPIService.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeGDPRAPIService.h; sourceTree = "<group>"; };
		47B01CA422E094AB00F8B6DC /* LoopMeGDPRTools.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeGDPRTools.h; sourceTree = "<group>"; };
		47B01CA522E094AB00F8B6DC /* LoopMeGDPRAPIService.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeGDPRAPIService.m; sourceTree = "<group>"; };
		47B01CA622E094AB00F8B6DC /* LoopMeGDPRViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeGDPRViewController.h; sourceTree = "<group>"; };
		47B01CA722E094AB00F8B6DC /* LoopMeGDPRTools.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LoopMeGDPRTools.m; sourceTree = "<group>"; };
		47B01CA822E094AB00F8B6DC /* LoopMeInterstitial.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LoopMeInterstitial.h; sourceTree = "<group>"; };
		D003B26B1AFB9C2D007C7E0F /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = LoopMeCompiler/Info.plist; sourceTree = "<group>"; };
		D003B26D1AFB9C3D007C7E0F /* Info-Unity.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "Info-Unity.plist"; path = "LoopMeCompiler/Info-Unity.plist"; sourceTree = "<group>"; };
		D003B26E1AFB9C3D007C7E0F /* LoopMeCompiler-Prefix.pch */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = "LoopMeCompiler-Prefix.pch"; path = "LoopMeCompiler/LoopMeCompiler-Prefix.pch"; sourceTree = "<group>"; };
		D05C331B1A7FC23500E0E9A9 /* LoopMeUnitedSDK.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = LoopMeUnitedSDK.framework; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		473CB0881F7E8B7B003431CD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4730AD1721CA822000D0E382 /* libxml2.tbd in Frameworks */,
				47E9FD7822EB4D9A00836E3B /* LOOMoatMobileAppKit.framework in Frameworks */,
				47E9FD7622EB4D9100836E3B /* OMSDK_Loopme.framework in Frameworks */,
				47E9FD7522EB4D8700836E3B /* libAvid-loopme-3.6.8.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D05C33161A7FC23500E0E9A9 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				47A99B3D20FCCB4D002AF262 /* libxml2.tbd in Frameworks */,
				47B01CBD22E094AB00F8B6DC /* LOOMoatMobileAppKit.framework in Frameworks */,
				47B01CB722E094AB00F8B6DC /* OMSDK_Loopme.framework in Frameworks */,
				47B01CB522E094AB00F8B6DC /* libAvid-loopme-3.6.8.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		47B01BDD22E094AB00F8B6DC /* LoopMeSDK Sources */ = {
			isa = PBXGroup;
			children = (
				47B01BDE22E094AB00F8B6DC /* LoopMeTargeting.h */,
				47B01BDF22E094AB00F8B6DC /* Viewability */,
				47B01BF822E094AB00F8B6DC /* LoopMeAdView.h */,
				47B01BF922E094AB00F8B6DC /* Internal */,
				47B01CA022E094AB00F8B6DC /* LoopMeSDK.h */,
				47B01CA122E094AB00F8B6DC /* GDPR */,
				47B01CA822E094AB00F8B6DC /* LoopMeInterstitial.h */,
			);
			name = "LoopMeSDK Sources";
			path = "../LoopMeSDK Sources";
			sourceTree = "<group>";
		};
		47B01BDF22E094AB00F8B6DC /* Viewability */ = {
			isa = PBXGroup;
			children = (
				47B01BE022E094AB00F8B6DC /* IAS */,
				47B01BED22E094AB00F8B6DC /* LoopMeIASWrapper.h */,
				47B01BEE22E094AB00F8B6DC /* OMSDK */,
				47B01BF422E094AB00F8B6DC /* LoopMeViewabilityManager.m */,
				47B01BF522E094AB00F8B6DC /* LOOMoatMobileAppKit.framework */,
				47B01BF622E094AB00F8B6DC /* LoopMeIASWrapper.m */,
				47B01BF722E094AB00F8B6DC /* LoopMeViewabilityManager.h */,
			);
			path = Viewability;
			sourceTree = "<group>";
		};
		47B01BE022E094AB00F8B6DC /* IAS */ = {
			isa = PBXGroup;
			children = (
				47B01BE122E094AB00F8B6DC /* LoopMe_AbstractAvidAdSession.h */,
				47B01BE222E094AB00F8B6DC /* LoopMe_AvidDeferredAdSessionListener.h */,
				47B01BE322E094AB00F8B6DC /* LoopMe_AvidAdSessionManager.h */,
				47B01BE422E094AB00F8B6DC /* LoopMe_Avid.h */,
				47B01BE522E094AB00F8B6DC /* LoopMe_AvidDisplayAdSession.h */,
				47B01BE622E094AB00F8B6DC /* LoopMe_AvidVideoAdSession.h */,
				47B01BE722E094AB00F8B6DC /* LoopMe_AvidVideoPlaybackListener.h */,
				47B01BE822E094AB00F8B6DC /* LoopMe_AvidManagedVideoAdSession.h */,
				47B01BE922E094AB00F8B6DC /* LoopMe_ExternalAvidAdSessionContext.h */,
				47B01BEA22E094AB00F8B6DC /* LoopMe_AbstractAvidManagedAdSession.h */,
				47B01BEB22E094AB00F8B6DC /* LoopMe_AvidManagedDisplayAdSession.h */,
				47B01BEC22E094AB00F8B6DC /* libAvid-loopme-3.6.8.a */,
			);
			path = IAS;
			sourceTree = "<group>";
		};
		47B01BEE22E094AB00F8B6DC /* OMSDK */ = {
			isa = PBXGroup;
			children = (
				47B01BEF22E094AB00F8B6DC /* OMSDK_Loopme.framework */,
				47B01BF022E094AB00F8B6DC /* LoopMeOMIDWrapper.m */,
				47B01BF122E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.m */,
				47B01BF222E094AB00F8B6DC /* LoopMeOMIDWrapper.h */,
				47B01BF322E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.h */,
			);
			path = OMSDK;
			sourceTree = "<group>";
		};
		47B01BF922E094AB00F8B6DC /* Internal */ = {
			isa = PBXGroup;
			children = (
				47B01BFA22E094AB00F8B6DC /* LoopMeSDKConfiguration.h */,
				47B01BFB22E094AB00F8B6DC /* Clients */,
				47B01C0A22E094AB00F8B6DC /* Interstitial */,
				47B01C0E22E094AB00F8B6DC /* Cache */,
				47B01C1122E094AB00F8B6DC /* Targeting */,
				47B01C1322E094AB00F8B6DC /* Resources */,
				47B01C1622E094AB00F8B6DC /* Network */,
				47B01C2522E094AB00F8B6DC /* Senders */,
				47B01C2A22E094AB00F8B6DC /* ViewControllers */,
				47B01C3822E094AB00F8B6DC /* LoopMeSDKConfiguration.m */,
				47B01C3922E094AB00F8B6DC /* Controllers */,
				47B01C4222E094AB00F8B6DC /* Builder */,
				47B01C4722E094AB00F8B6DC /* Views */,
				47B01C5822E094AB00F8B6DC /* AdView */,
				47B01C6022E094AB00F8B6DC /* LoopMeSDK.m */,
				47B01C6122E094AB00F8B6DC /* Utility */,
				47B01C8222E094AB00F8B6DC /* VAST */,
			);
			path = Internal;
			sourceTree = "<group>";
		};
		47B01BFB22E094AB00F8B6DC /* Clients */ = {
			isa = PBXGroup;
			children = (
				47B01BFC22E094AB00F8B6DC /* LoopMeVPAIDClient.m */,
				47B01BFD22E094AB00F8B6DC /* LoopMeJSClient.m */,
				47B01BFE22E094AB00F8B6DC /* LoopMeVideoClientNormal.m */,
				47B01BFF22E094AB00F8B6DC /* LoopMeVPAIDVideoClient.h */,
				47B01C0022E094AB00F8B6DC /* LoopMeMRAIDClient.h */,
				47B01C0122E094AB00F8B6DC /* LoopMeJSClient.h */,
				47B01C0222E094AB00F8B6DC /* LoopMeVPAIDClient.h */,
				47B01C0322E094AB00F8B6DC /* LoopMeMRAIDClient.m */,
				47B01C0422E094AB00F8B6DC /* LoopMeVPAIDVideoClient.m */,
				47B01C0522E094AB00F8B6DC /* LoopMeVideoClientNormal.h */,
				47B01C0622E094AB00F8B6DC /* Protocols */,
			);
			path = Clients;
			sourceTree = "<group>";
		};
		47B01C0622E094AB00F8B6DC /* Protocols */ = {
			isa = PBXGroup;
			children = (
				47B01C0722E094AB00F8B6DC /* LoopMeVideoCommunicatorProtocol.h */,
				47B01C0822E094AB00F8B6DC /* LoopMeJSCommunicatorProtocol.h */,
				47B01C0922E094AB00F8B6DC /* LoopMeViewabilityProtocol.h */,
			);
			path = Protocols;
			sourceTree = "<group>";
		};
		47B01C0A22E094AB00F8B6DC /* Interstitial */ = {
			isa = PBXGroup;
			children = (
				47B01C0B22E094AB00F8B6DC /* LoopMeInterstitialGeneral.h */,
				47B01C0C22E094AB00F8B6DC /* LoopMeInterstitial.m */,
				47B01C0D22E094AB00F8B6DC /* LoopMeInterstitialGeneral.m */,
			);
			path = Interstitial;
			sourceTree = "<group>";
		};
		47B01C0E22E094AB00F8B6DC /* Cache */ = {
			isa = PBXGroup;
			children = (
				47B01C0F22E094AB00F8B6DC /* LoopMeDiscURLCache.m */,
				47B01C1022E094AB00F8B6DC /* LoopMeDiscURLCache.h */,
			);
			path = Cache;
			sourceTree = "<group>";
		};
		47B01C1122E094AB00F8B6DC /* Targeting */ = {
			isa = PBXGroup;
			children = (
				47B01C1222E094AB00F8B6DC /* LoopMeTargeting.m */,
			);
			path = Targeting;
			sourceTree = "<group>";
		};
		47B01C1322E094AB00F8B6DC /* Resources */ = {
			isa = PBXGroup;
			children = (
				47B01C1422E094AB00F8B6DC /* LoopMeResources.bundle */,
				47B01C1522E094AB00F8B6DC /* Assets.xcassets */,
			);
			path = Resources;
			sourceTree = "<group>";
		};
		47B01C1622E094AB00F8B6DC /* Network */ = {
			isa = PBXGroup;
			children = (
				47B01C1722E094AB00F8B6DC /* LoopMeServerCommunicator.h */,
				47B01C1822E094AB00F8B6DC /* LoopMeAdConfiguration.h */,
				47B01C1922E094AB00F8B6DC /* LoopMeVideoManager.m */,
				47B01C1A22E094AB00F8B6DC /* LoopMeReachability.m */,
				47B01C1B22E094AB00F8B6DC /* LoopMeVASTImageDownloader.m */,
				47B01C1C22E094AB00F8B6DC /* LoopMeAdManager.m */,
				47B01C1D22E094AB00F8B6DC /* LoopMeURLResolver.h */,
				47B01C1E22E094AB00F8B6DC /* LoopMeAdConfiguration.m */,
				47B01C1F22E094AB00F8B6DC /* LoopMeServerCommunicator.m */,
				47B01C2022E094AB00F8B6DC /* LoopMeURLResolver.m */,
				47B01C2122E094AB00F8B6DC /* LoopMeVASTImageDownloader.h */,
				47B01C2222E094AB00F8B6DC /* LoopMeAdManager.h */,
				47B01C2322E094AB00F8B6DC /* LoopMeReachability.h */,
				47B01C2422E094AB00F8B6DC /* LoopMeVideoManager.h */,
			);
			path = Network;
			sourceTree = "<group>";
		};
		47B01C2522E094AB00F8B6DC /* Senders */ = {
			isa = PBXGroup;
			children = (
				47B01C2622E094AB00F8B6DC /* LoopMeVASTEventTracker.h */,
				47B01C2722E094AB00F8B6DC /* LoopMeErrorEventSender.m */,
				47B01C2822E094AB00F8B6DC /* LoopMeVASTEventTracker.m */,
				47B01C2922E094AB00F8B6DC /* LoopMeErrorEventSender.h */,
			);
			path = Senders;
			sourceTree = "<group>";
		};
		47B01C2A22E094AB00F8B6DC /* ViewControllers */ = {
			isa = PBXGroup;
			children = (
				47B01C2B22E094AB00F8B6DC /* Ad */,
				47B01C2E22E094AB00F8B6DC /* Browser */,
				47B01C3122E094AB00F8B6DC /* 360 */,
				47B01C3722E094AB00F8B6DC /* LoopMeOrientationViewControllerProtocol.h */,
			);
			path = ViewControllers;
			sourceTree = "<group>";
		};
		47B01C2B22E094AB00F8B6DC /* Ad */ = {
			isa = PBXGroup;
			children = (
				47B01C2C22E094AB00F8B6DC /* LoopMeInterstitialViewController.h */,
				47B01C2D22E094AB00F8B6DC /* LoopMeInterstitialViewController.m */,
			);
			path = Ad;
			sourceTree = "<group>";
		};
		47B01C2E22E094AB00F8B6DC /* Browser */ = {
			isa = PBXGroup;
			children = (
				47B01C2F22E094AB00F8B6DC /* LoopMeBrowserViewController.h */,
				47B01C3022E094AB00F8B6DC /* LoopMeBrowserViewController.m */,
			);
			path = Browser;
			sourceTree = "<group>";
		};
		47B01C3122E094AB00F8B6DC /* 360 */ = {
			isa = PBXGroup;
			children = (
				47B01C3222E094AB00F8B6DC /* LoopMe360ViewController.h */,
				47B01C3322E094AB00F8B6DC /* Shaders */,
				47B01C3622E094AB00F8B6DC /* LoopMe360ViewController.m */,
			);
			path = 360;
			sourceTree = "<group>";
		};
		47B01C3322E094AB00F8B6DC /* Shaders */ = {
			isa = PBXGroup;
			children = (
				47B01C3422E094AB00F8B6DC /* LoopMeGLProgram.m */,
				47B01C3522E094AB00F8B6DC /* LoopMeGLProgram.h */,
			);
			path = Shaders;
			sourceTree = "<group>";
		};
		47B01C3922E094AB00F8B6DC /* Controllers */ = {
			isa = PBXGroup;
			children = (
				47B01C3A22E094AB00F8B6DC /* LoopMeDestinationDisplayController.h */,
				47B01C3B22E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.h */,
				47B01C3C22E094AB00F8B6DC /* LoopMeAdDisplayController.h */,
				47B01C3D22E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.m */,
				47B01C3E22E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.m */,
				47B01C3F22E094AB00F8B6DC /* LoopMeDestinationDisplayController.m */,
				47B01C4022E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.h */,
				47B01C4122E094AB00F8B6DC /* LoopMeAdDisplayController.m */,
			);
			path = Controllers;
			sourceTree = "<group>";
		};
		47B01C4222E094AB00F8B6DC /* Builder */ = {
			isa = PBXGroup;
			children = (
				47B01C4322E094AB00F8B6DC /* LoopMeORTBTools.m */,
				47B01C4422E094AB00F8B6DC /* LoopMeServerURLBuilder.m */,
				47B01C4522E094AB00F8B6DC /* LoopMeORTBTools.h */,
				47B01C4622E094AB00F8B6DC /* LoopMeServerURLBuilder.h */,
			);
			path = Builder;
			sourceTree = "<group>";
		};
		47B01C4722E094AB00F8B6DC /* Views */ = {
			isa = PBXGroup;
			children = (
				47B01C4822E094AB00F8B6DC /* LoopMeCloseButton.h */,
				47B01C4922E094AB00F8B6DC /* ProgressOvelray */,
				47B01C4E22E094AB00F8B6DC /* LoopMeBackView.h */,
				47B01C4F22E094AB00F8B6DC /* WebView */,
				47B01C5222E094AB00F8B6DC /* LoopMeVASTPlayerUIView.m */,
				47B01C5322E094AB00F8B6DC /* LoopMeCancelView.m */,
				47B01C5422E094AB00F8B6DC /* LoopMeCloseButton.m */,
				47B01C5522E094AB00F8B6DC /* LoopMeBackView.m */,
				47B01C5622E094AB00F8B6DC /* LoopMeVASTPlayerUIView.h */,
				47B01C5722E094AB00F8B6DC /* LoopMeCancelView.h */,
			);
			path = Views;
			sourceTree = "<group>";
		};
		47B01C4922E094AB00F8B6DC /* ProgressOvelray */ = {
			isa = PBXGroup;
			children = (
				47B01C4A22E094AB00F8B6DC /* LoopMeActivityIndicatorView.m */,
				47B01C4B22E094AB00F8B6DC /* LoopMeProgressOverlayView.h */,
				47B01C4C22E094AB00F8B6DC /* LoopMeActivityIndicatorView.h */,
				47B01C4D22E094AB00F8B6DC /* LoopMeProgressOverlayView.m */,
			);
			path = ProgressOvelray;
			sourceTree = "<group>";
		};
		47B01C4F22E094AB00F8B6DC /* WebView */ = {
			isa = PBXGroup;
			children = (
				47B01C5022E094AB00F8B6DC /* LoopMeAdWebView.h */,
				47B01C5122E094AB00F8B6DC /* LoopMeAdWebView.m */,
			);
			path = WebView;
			sourceTree = "<group>";
		};
		47B01C5822E094AB00F8B6DC /* AdView */ = {
			isa = PBXGroup;
			children = (
				47B01C5922E094AB00F8B6DC /* minimized */,
				47B01C5C22E094AB00F8B6DC /* LoopMeAdView.m */,
				47B01C5D22E094AB00F8B6DC /* maximized */,
			);
			path = AdView;
			sourceTree = "<group>";
		};
		47B01C5922E094AB00F8B6DC /* minimized */ = {
			isa = PBXGroup;
			children = (
				47B01C5A22E094AB00F8B6DC /* LoopMeMinimizedAdView.h */,
				47B01C5B22E094AB00F8B6DC /* LoopMeMinimizedAdView.m */,
			);
			path = minimized;
			sourceTree = "<group>";
		};
		47B01C5D22E094AB00F8B6DC /* maximized */ = {
			isa = PBXGroup;
			children = (
				47B01C5E22E094AB00F8B6DC /* LoopMeMaximizedViewController.m */,
				47B01C5F22E094AB00F8B6DC /* LoopMeMaximizedViewController.h */,
			);
			path = maximized;
			sourceTree = "<group>";
		};
		47B01C6122E094AB00F8B6DC /* Utility */ = {
			isa = PBXGroup;
			children = (
				47B01C6222E094AB00F8B6DC /* LoopMeAnalyticsProvider.m */,
				47B01C6322E094AB00F8B6DC /* LoopMeAudioCheck.h */,
				47B01C6422E094AB00F8B6DC /* LoopMeError.m */,
				47B01C6522E094AB00F8B6DC /* LoopMeAdType.h */,
				47B01C6622E094AB00F8B6DC /* LoopMeVPAIDDefinitions.h */,
				47B01C6722E094AB00F8B6DC /* LoopMeGlobalSettings.h */,
				47B01C6822E094AB00F8B6DC /* LoopMeVPAIDError.m */,
				47B01C6922E094AB00F8B6DC /* LoopMeVPAIDConverter.h */,
				47B01C6A22E094AB00F8B6DC /* LoopMeGeoLocationProvider.h */,
				47B01C6B22E094AB00F8B6DC /* LoopMeLogging.h */,
				47B01C6C22E094AB00F8B6DC /* LoopMeIdentityProvider.h */,
				47B01C6D22E094AB00F8B6DC /* LoopMeDefinitions.h */,
				47B01C6E22E094AB00F8B6DC /* LoopMeAnalyticsProvider.h */,
				47B01C6F22E094AB00F8B6DC /* LoopMeError.h */,
				47B01C7022E094AB00F8B6DC /* LoopMeAudioCheck.m */,
				47B01C7122E094AB00F8B6DC /* LoopMeGlobalSettings.m */,
				47B01C7222E094AB00F8B6DC /* Categories */,
				47B01C7D22E094AB00F8B6DC /* LoopMeIdentityProvider.m */,
				47B01C7E22E094AB00F8B6DC /* LoopMeLogging.m */,
				47B01C7F22E094AB00F8B6DC /* LoopMeGeoLocationProvider.m */,
				47B01C8022E094AB00F8B6DC /* LoopMeVPAIDError.h */,
				47B01C8122E094AB00F8B6DC /* LoopMeVPAIDConverter.m */,
			);
			path = Utility;
			sourceTree = "<group>";
		};
		47B01C7222E094AB00F8B6DC /* Categories */ = {
			isa = PBXGroup;
			children = (
				47B01C7322E094AB00F8B6DC /* NSDictionary+JSONPrint.h */,
				47B01C7422E094AB00F8B6DC /* NSData+LoopMeAES128.m */,
				47B01C7522E094AB00F8B6DC /* NSString+Encryption.m */,
				47B01C7622E094AB00F8B6DC /* NSURL+LoopMeAdditions.m */,
				47B01C7722E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.h */,
				47B01C7822E094AB00F8B6DC /* NSDictionary+JSONPrint.m */,
				47B01C7922E094AB00F8B6DC /* NSString+Encryption.h */,
				47B01C7A22E094AB00F8B6DC /* NSData+LoopMeAES128.h */,
				47B01C7B22E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.m */,
				47B01C7C22E094AB00F8B6DC /* NSURL+LoopMeAdditions.h */,
			);
			path = Categories;
			sourceTree = "<group>";
		};
		47B01C8222E094AB00F8B6DC /* VAST */ = {
			isa = PBXGroup;
			children = (
				47B01C8322E094AB00F8B6DC /* LoopMeSkipOffset.h */,
				47B01C8422E094AB00F8B6DC /* LoopMeVASTTrackingLinks.h */,
				47B01C8522E094AB00F8B6DC /* LoopMeVASTMacroProcessor.h */,
				47B01C8622E094AB00F8B6DC /* LoopMeVASTProgressEvent.h */,
				47B01C8722E094AB00F8B6DC /* LoopMeVASTXMLParser.m */,
				47B01C8822E094AB00F8B6DC /* LoopMeVASTAssetLinks.m */,
				47B01C8922E094AB00F8B6DC /* LoopMeVASTProgressEvent.m */,
				47B01C8A22E094AB00F8B6DC /* LoopMeVASTMacroProcessor.m */,
				47B01C8B22E094AB00F8B6DC /* LoopMeSkipOffset.m */,
				47B01C8C22E094AB00F8B6DC /* LoopMeVASTTrackingLinks.m */,
				47B01C8D22E094AB00F8B6DC /* KissXML */,
				47B01C9E22E094AB00F8B6DC /* LoopMeVASTXMLParser.h */,
				47B01C9F22E094AB00F8B6DC /* LoopMeVASTAssetLinks.h */,
			);
			path = VAST;
			sourceTree = "<group>";
		};
		47B01C8D22E094AB00F8B6DC /* KissXML */ = {
			isa = PBXGroup;
			children = (
				47B01C8E22E094AB00F8B6DC /* DDXMLDocument.h */,
				47B01C8F22E094AB00F8B6DC /* DDXML.h */,
				47B01C9022E094AB00F8B6DC /* DDXMLElement.m */,
				47B01C9122E094AB00F8B6DC /* KissXML.h */,
				47B01C9222E094AB00F8B6DC /* Additions */,
				47B01C9522E094AB00F8B6DC /* DDXMLNode.m */,
				47B01C9622E094AB00F8B6DC /* DDXMLDocument.m */,
				47B01C9722E094AB00F8B6DC /* Private */,
				47B01C9922E094AB00F8B6DC /* DDXMLElement.h */,
				47B01C9A22E094AB00F8B6DC /* Categories */,
				47B01C9D22E094AB00F8B6DC /* DDXMLNode.h */,
			);
			path = KissXML;
			sourceTree = "<group>";
		};
		47B01C9222E094AB00F8B6DC /* Additions */ = {
			isa = PBXGroup;
			children = (
				47B01C9322E094AB00F8B6DC /* DDXMLElementAdditions.h */,
				47B01C9422E094AB00F8B6DC /* DDXMLElementAdditions.m */,
			);
			path = Additions;
			sourceTree = "<group>";
		};
		47B01C9722E094AB00F8B6DC /* Private */ = {
			isa = PBXGroup;
			children = (
				47B01C9822E094AB00F8B6DC /* DDXMLPrivate.h */,
			);
			path = Private;
			sourceTree = "<group>";
		};
		47B01C9A22E094AB00F8B6DC /* Categories */ = {
			isa = PBXGroup;
			children = (
				47B01C9B22E094AB00F8B6DC /* NSString+DDXML.h */,
				47B01C9C22E094AB00F8B6DC /* NSString+DDXML.m */,
			);
			path = Categories;
			sourceTree = "<group>";
		};
		47B01CA122E094AB00F8B6DC /* GDPR */ = {
			isa = PBXGroup;
			children = (
				47B01CA222E094AB00F8B6DC /* LoopMeGDPRViewController.m */,
				47B01CA322E094AB00F8B6DC /* LoopMeGDPRAPIService.h */,
				47B01CA422E094AB00F8B6DC /* LoopMeGDPRTools.h */,
				47B01CA522E094AB00F8B6DC /* LoopMeGDPRAPIService.m */,
				47B01CA622E094AB00F8B6DC /* LoopMeGDPRViewController.h */,
				47B01CA722E094AB00F8B6DC /* LoopMeGDPRTools.m */,
			);
			path = GDPR;
			sourceTree = "<group>";
		};
		47CBA60A1FCEC6970058D220 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				4730AD1621CA822000D0E382 /* libxml2.tbd */,
				47A99B3C20FCCB4D002AF262 /* libxml2.tbd */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		D003B25B1AFB9BDC007C7E0F /* LoopMeCompiler */ = {
			isa = PBXGroup;
			children = (
				47B01BDD22E094AB00F8B6DC /* LoopMeSDK Sources */,
				D003B26A1AFB9C11007C7E0F /* Supporting Files */,
			);
			name = LoopMeCompiler;
			sourceTree = "<group>";
		};
		D003B26A1AFB9C11007C7E0F /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				D003B26E1AFB9C3D007C7E0F /* LoopMeCompiler-Prefix.pch */,
				D003B26D1AFB9C3D007C7E0F /* Info-Unity.plist */,
				D003B26B1AFB9C2D007C7E0F /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		D05C33101A7FC23500E0E9A9 = {
			isa = PBXGroup;
			children = (
				D003B25B1AFB9BDC007C7E0F /* LoopMeCompiler */,
				D05C331C1A7FC23500E0E9A9 /* Products */,
				47CBA60A1FCEC6970058D220 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		D05C331C1A7FC23500E0E9A9 /* Products */ = {
			isa = PBXGroup;
			children = (
				D05C331B1A7FC23500E0E9A9 /* LoopMeUnitedSDK.framework */,
				473CB0BE1F7E8B7B003431CD /* LoopMeUnitedSDK.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		473CB08A1F7E8B7B003431CD /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				47E9FDD722EB4E1000836E3B /* LoopMeLogging.h in Headers */,
				47E9FDD122EB4E1000836E3B /* LoopMeAdType.h in Headers */,
				47E9FDEB22EB4E1600836E3B /* LoopMeVPAIDError.h in Headers */,
				47E9FD7B22EB4DA000836E3B /* LoopMeAdView.h in Headers */,
				47E9FDD922EB4E1000836E3B /* LoopMeDefinitions.h in Headers */,
				47E9FD8222EB4DAB00836E3B /* LoopMeJSClient.h in Headers */,
				47E9FDE422EB4E1600836E3B /* NSString+Encryption.h in Headers */,
				47E9FDC022EB4DFF00836E3B /* LoopMeAdWebView.h in Headers */,
				47E9FDDA22EB4E1000836E3B /* LoopMeAnalyticsProvider.h in Headers */,
				47E9FDA822EB4DDC00836E3B /* LoopMe360ViewController.h in Headers */,
				47E9FD7C22EB4DA400836E3B /* LoopMeSDKConfiguration.h in Headers */,
				47E9FDC622EB4E0300836E3B /* LoopMeVASTPlayerUIView.h in Headers */,
				47E9FDE722EB4E1600836E3B /* NSURL+LoopMeAdditions.h in Headers */,
				47E9FDEF22EB4E1A00836E3B /* LoopMeVASTMacroProcessor.h in Headers */,
				47E9FDAC22EB4DE500836E3B /* LoopMeOrientationViewControllerProtocol.h in Headers */,
				47E9FDFA22EB4E1F00836E3B /* KissXML.h in Headers */,
				47E9FDFB22EB4E2200836E3B /* DDXMLElementAdditions.h in Headers */,
				47E9FDDB22EB4E1000836E3B /* LoopMeError.h in Headers */,
				47E9FDBD22EB4DF900836E3B /* LoopMeActivityIndicatorView.h in Headers */,
				47E9FE0022EB4E2800836E3B /* DDXMLPrivate.h in Headers */,
				47E9FD6E22EB4D6E00836E3B /* LoopMe_AbstractAvidManagedAdSession.h in Headers */,
				47E9FD6A22EB4D6E00836E3B /* LoopMe_AvidVideoAdSession.h in Headers */,
				47E9FD8122EB4DAB00836E3B /* LoopMeMRAIDClient.h in Headers */,
				47E9FD7422EB4D8100836E3B /* LoopMeIASWrapper.h in Headers */,
				47E9FD6422EB4D6600836E3B /* LoopMeTargeting.h in Headers */,
				47E9FDCC22EB4E0B00836E3B /* LoopMeMaximizedViewController.h in Headers */,
				47E9FDCF22EB4E1000836E3B /* LoopMeAudioCheck.h in Headers */,
				47E9FDD322EB4E1000836E3B /* LoopMeGlobalSettings.h in Headers */,
				47E9FD6F22EB4D6E00836E3B /* LoopMe_AvidManagedDisplayAdSession.h in Headers */,
				47E9FDB022EB4DEC00836E3B /* LoopMeAdDisplayController.h in Headers */,
				47E9FDB822EB4DF200836E3B /* LoopMeORTBTools.h in Headers */,
				473CB0AC1F7E8B7B003431CD /* LoopMeCompiler-Prefix.pch in Headers */,
				47E9FE0522EB4E2E00836E3B /* LoopMeVASTAssetLinks.h in Headers */,
				47E9FDD822EB4E1000836E3B /* LoopMeIdentityProvider.h in Headers */,
				47E9FDA322EB4DD000836E3B /* LoopMeErrorEventSender.h in Headers */,
				47E9FD7222EB4D7500836E3B /* LoopMeOMIDWrapper.h in Headers */,
				47E9FD9322EB4DCC00836E3B /* LoopMeAdConfiguration.h in Headers */,
				47E9FDE222EB4E1600836E3B /* UIImage+LoopMeBinaryImage.h in Headers */,
				47E9FDF822EB4E1F00836E3B /* DDXML.h in Headers */,
				47E9FD8022EB4DAB00836E3B /* LoopMeVPAIDVideoClient.h in Headers */,
				47E9FE0D22EB4E3700836E3B /* LoopMeInterstitial.h in Headers */,
				47E9FE0B22EB4E3700836E3B /* LoopMeGDPRViewController.h in Headers */,
				47E9FDDE22EB4E1600836E3B /* NSDictionary+JSONPrint.h in Headers */,
				47E9FD9F22EB4DCC00836E3B /* LoopMeVideoManager.h in Headers */,
				47E9FDC722EB4E0300836E3B /* LoopMeCancelView.h in Headers */,
				47E9FD6522EB4D6E00836E3B /* LoopMe_AbstractAvidAdSession.h in Headers */,
				47E9FE0322EB4E2D00836E3B /* DDXMLNode.h in Headers */,
				47E9FD8822EB4DAF00836E3B /* LoopMeJSCommunicatorProtocol.h in Headers */,
				47E9FDD622EB4E1000836E3B /* LoopMeGeoLocationProvider.h in Headers */,
				47E9FDD222EB4E1000836E3B /* LoopMeVPAIDDefinitions.h in Headers */,
				47E9FD6622EB4D6E00836E3B /* LoopMe_AvidDeferredAdSessionListener.h in Headers */,
				47E9FDA622EB4DD800836E3B /* LoopMeBrowserViewController.h in Headers */,
				47E9FD7A22EB4D9D00836E3B /* LoopMeViewabilityManager.h in Headers */,
				47E9FE0122EB4E2D00836E3B /* NSString+DDXML.h in Headers */,
				47E9FD6822EB4D6E00836E3B /* LoopMe_Avid.h in Headers */,
				47E9FDBA22EB4DF500836E3B /* LoopMeCloseButton.h in Headers */,
				47E9FDA422EB4DD500836E3B /* LoopMeInterstitialViewController.h in Headers */,
				47E9FD8322EB4DAB00836E3B /* LoopMeVPAIDClient.h in Headers */,
				47E9FD9222EB4DCC00836E3B /* LoopMeServerCommunicator.h in Headers */,
				47E9FD6C22EB4D6E00836E3B /* LoopMe_AvidManagedVideoAdSession.h in Headers */,
				47E9FD8622EB4DAB00836E3B /* LoopMeVideoClientNormal.h in Headers */,
				47E9FDAF22EB4DEC00836E3B /* LoopMeVPAIDAdDisplayController.h in Headers */,
				47E9FDE522EB4E1600836E3B /* NSData+LoopMeAES128.h in Headers */,
				47E9FD9E22EB4DCC00836E3B /* LoopMeReachability.h in Headers */,
				47E9FDEE22EB4E1A00836E3B /* LoopMeVASTTrackingLinks.h in Headers */,
				47E9FDF022EB4E1A00836E3B /* LoopMeVASTProgressEvent.h in Headers */,
				47E9FDBC22EB4DF900836E3B /* LoopMeProgressOverlayView.h in Headers */,
				47E9FD6722EB4D6E00836E3B /* LoopMe_AvidAdSessionManager.h in Headers */,
				47E9FD6B22EB4D6E00836E3B /* LoopMe_AvidVideoPlaybackListener.h in Headers */,
				47E9FD6D22EB4D6E00836E3B /* LoopMe_ExternalAvidAdSessionContext.h in Headers */,
				47E9FD8E22EB4DBA00836E3B /* LoopMeDiscURLCache.h in Headers */,
				47E9FDAA22EB4DE000836E3B /* LoopMeGLProgram.h in Headers */,
				47E9FE0422EB4E2D00836E3B /* LoopMeVASTXMLParser.h in Headers */,
				47E9FDF722EB4E1F00836E3B /* DDXMLDocument.h in Headers */,
				47E9FDAE22EB4DEC00836E3B /* LoopMeDestinationDisplayController.h in Headers */,
				47E9FD9822EB4DCC00836E3B /* LoopMeURLResolver.h in Headers */,
				47E9FDFF22EB4E2600836E3B /* DDXMLElement.h in Headers */,
				47E9FD9D22EB4DCC00836E3B /* LoopMeAdManager.h in Headers */,
				47E9FDD522EB4E1000836E3B /* LoopMeVPAIDConverter.h in Headers */,
				47E9FD8A22EB4DB500836E3B /* LoopMeInterstitialGeneral.h in Headers */,
				47E9FD8922EB4DAF00836E3B /* LoopMeViewabilityProtocol.h in Headers */,
				47E9FD6922EB4D6E00836E3B /* LoopMe_AvidDisplayAdSession.h in Headers */,
				47E9FD9C22EB4DCC00836E3B /* LoopMeVASTImageDownloader.h in Headers */,
				47E9FD7322EB4D7500836E3B /* LoopMeOMIDVideoEventsWrapper.h in Headers */,
				47E9FE0622EB4E3000836E3B /* LoopMeSDK.h in Headers */,
				47E9FD8722EB4DAF00836E3B /* LoopMeVideoCommunicatorProtocol.h in Headers */,
				47E9FDB422EB4DEC00836E3B /* LoopMeAdDisplayControllerNormal.h in Headers */,
				47E9FDED22EB4E1A00836E3B /* LoopMeSkipOffset.h in Headers */,
				47E9FE0922EB4E3700836E3B /* LoopMeGDPRTools.h in Headers */,
				47E9FE0822EB4E3700836E3B /* LoopMeGDPRAPIService.h in Headers */,
				47E9FDB922EB4DF200836E3B /* LoopMeServerURLBuilder.h in Headers */,
				47E9FDBF22EB4DF900836E3B /* LoopMeBackView.h in Headers */,
				47E9FDC822EB4E0800836E3B /* LoopMeMinimizedAdView.h in Headers */,
				47E9FDA022EB4DD000836E3B /* LoopMeVASTEventTracker.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D05C33171A7FC23500E0E9A9 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				47B01D1E22E094AB00F8B6DC /* LoopMeDefinitions.h in Headers */,
				47B01CC022E094AB00F8B6DC /* LoopMeAdView.h in Headers */,
				47B01D4E22E094AB00F8B6DC /* LoopMeGDPRTools.h in Headers */,
				47B01D3022E094AB00F8B6DC /* LoopMeVPAIDError.h in Headers */,
				47B01D1622E094AB00F8B6DC /* LoopMeAdType.h in Headers */,
				47B01CC122E094AB00F8B6DC /* LoopMeSDKConfiguration.h in Headers */,
				47B01D1C22E094AB00F8B6DC /* LoopMeLogging.h in Headers */,
				47B01D2022E094AB00F8B6DC /* LoopMeError.h in Headers */,
				47B01D5222E094AB00F8B6DC /* LoopMeInterstitial.h in Headers */,
				47B01D4B22E094AB00F8B6DC /* LoopMeSDK.h in Headers */,
				47B01D0522E094AB00F8B6DC /* LoopMeAdWebView.h in Headers */,
				47B01CC722E094AB00F8B6DC /* LoopMeJSClient.h in Headers */,
				47B01D2922E094AB00F8B6DC /* NSString+Encryption.h in Headers */,
				47B01D4522E094AB00F8B6DC /* DDXMLElement.h in Headers */,
				47B01D1F22E094AB00F8B6DC /* LoopMeAnalyticsProvider.h in Headers */,
				47B01CED22E094AB00F8B6DC /* LoopMe360ViewController.h in Headers */,
				47B01D0B22E094AB00F8B6DC /* LoopMeVASTPlayerUIView.h in Headers */,
				47B01D2C22E094AB00F8B6DC /* NSURL+LoopMeAdditions.h in Headers */,
				47B01D3422E094AB00F8B6DC /* LoopMeVASTMacroProcessor.h in Headers */,
				47B01CF122E094AB00F8B6DC /* LoopMeOrientationViewControllerProtocol.h in Headers */,
				47B01D3F22E094AB00F8B6DC /* KissXML.h in Headers */,
				47B01D4022E094AB00F8B6DC /* DDXMLElementAdditions.h in Headers */,
				47B01D0222E094AB00F8B6DC /* LoopMeActivityIndicatorView.h in Headers */,
				47B01CB322E094AB00F8B6DC /* LoopMe_AbstractAvidManagedAdSession.h in Headers */,
				47B01CAF22E094AB00F8B6DC /* LoopMe_AvidVideoAdSession.h in Headers */,
				47B01CC622E094AB00F8B6DC /* LoopMeMRAIDClient.h in Headers */,
				47B01CA922E094AB00F8B6DC /* LoopMeTargeting.h in Headers */,
				47B01CB422E094AB00F8B6DC /* LoopMe_AvidManagedDisplayAdSession.h in Headers */,
				47B01D1122E094AB00F8B6DC /* LoopMeMaximizedViewController.h in Headers */,
				47B01D1422E094AB00F8B6DC /* LoopMeAudioCheck.h in Headers */,
				47B01D1822E094AB00F8B6DC /* LoopMeGlobalSettings.h in Headers */,
				47B01CBA22E094AB00F8B6DC /* LoopMeOMIDWrapper.h in Headers */,
				47B01CF522E094AB00F8B6DC /* LoopMeAdDisplayController.h in Headers */,
				47B01CFD22E094AB00F8B6DC /* LoopMeORTBTools.h in Headers */,
				D003B2701AFB9C3D007C7E0F /* LoopMeCompiler-Prefix.pch in Headers */,
				47B01D4A22E094AB00F8B6DC /* LoopMeVASTAssetLinks.h in Headers */,
				47B01D1D22E094AB00F8B6DC /* LoopMeIdentityProvider.h in Headers */,
				47B01CE822E094AB00F8B6DC /* LoopMeErrorEventSender.h in Headers */,
				47B01CBB22E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.h in Headers */,
				47B01CD822E094AB00F8B6DC /* LoopMeAdConfiguration.h in Headers */,
				47B01D2722E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.h in Headers */,
				47B01D4422E094AB00F8B6DC /* DDXMLPrivate.h in Headers */,
				47B01D3D22E094AB00F8B6DC /* DDXML.h in Headers */,
				47B01D5022E094AB00F8B6DC /* LoopMeGDPRViewController.h in Headers */,
				47B01CC522E094AB00F8B6DC /* LoopMeVPAIDVideoClient.h in Headers */,
				47B01D2322E094AB00F8B6DC /* NSDictionary+JSONPrint.h in Headers */,
				47B01CE422E094AB00F8B6DC /* LoopMeVideoManager.h in Headers */,
				47B01D0C22E094AB00F8B6DC /* LoopMeCancelView.h in Headers */,
				47B01D4822E094AB00F8B6DC /* DDXMLNode.h in Headers */,
				47B01CAA22E094AB00F8B6DC /* LoopMe_AbstractAvidAdSession.h in Headers */,
				47B01CCD22E094AB00F8B6DC /* LoopMeJSCommunicatorProtocol.h in Headers */,
				47B01D1B22E094AB00F8B6DC /* LoopMeGeoLocationProvider.h in Headers */,
				47B01D1722E094AB00F8B6DC /* LoopMeVPAIDDefinitions.h in Headers */,
				47B01CAB22E094AB00F8B6DC /* LoopMe_AvidDeferredAdSessionListener.h in Headers */,
				47B01CEB22E094AB00F8B6DC /* LoopMeBrowserViewController.h in Headers */,
				47B01D4622E094AB00F8B6DC /* NSString+DDXML.h in Headers */,
				47B01CBF22E094AB00F8B6DC /* LoopMeViewabilityManager.h in Headers */,
				47B01CAD22E094AB00F8B6DC /* LoopMe_Avid.h in Headers */,
				47B01CFF22E094AB00F8B6DC /* LoopMeCloseButton.h in Headers */,
				47B01CE922E094AB00F8B6DC /* LoopMeInterstitialViewController.h in Headers */,
				47B01CC822E094AB00F8B6DC /* LoopMeVPAIDClient.h in Headers */,
				47B01CD722E094AB00F8B6DC /* LoopMeServerCommunicator.h in Headers */,
				47B01CB622E094AB00F8B6DC /* LoopMeIASWrapper.h in Headers */,
				47B01CCB22E094AB00F8B6DC /* LoopMeVideoClientNormal.h in Headers */,
				47B01CF422E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.h in Headers */,
				47B01D2A22E094AB00F8B6DC /* NSData+LoopMeAES128.h in Headers */,
				47B01CE322E094AB00F8B6DC /* LoopMeReachability.h in Headers */,
				47B01D3322E094AB00F8B6DC /* LoopMeVASTTrackingLinks.h in Headers */,
				47B01D3522E094AB00F8B6DC /* LoopMeVASTProgressEvent.h in Headers */,
				47B01D0122E094AB00F8B6DC /* LoopMeProgressOverlayView.h in Headers */,
				47B01CB122E094AB00F8B6DC /* LoopMe_AvidManagedVideoAdSession.h in Headers */,
				47B01CAC22E094AB00F8B6DC /* LoopMe_AvidAdSessionManager.h in Headers */,
				47B01CB022E094AB00F8B6DC /* LoopMe_AvidVideoPlaybackListener.h in Headers */,
				47B01CD322E094AB00F8B6DC /* LoopMeDiscURLCache.h in Headers */,
				47B01D4922E094AB00F8B6DC /* LoopMeVASTXMLParser.h in Headers */,
				47B01CEF22E094AB00F8B6DC /* LoopMeGLProgram.h in Headers */,
				47B01D3C22E094AB00F8B6DC /* DDXMLDocument.h in Headers */,
				47B01CF322E094AB00F8B6DC /* LoopMeDestinationDisplayController.h in Headers */,
				47B01CDD22E094AB00F8B6DC /* LoopMeURLResolver.h in Headers */,
				47B01CE222E094AB00F8B6DC /* LoopMeAdManager.h in Headers */,
				47B01D1A22E094AB00F8B6DC /* LoopMeVPAIDConverter.h in Headers */,
				47B01CCF22E094AB00F8B6DC /* LoopMeInterstitialGeneral.h in Headers */,
				47B01CCE22E094AB00F8B6DC /* LoopMeViewabilityProtocol.h in Headers */,
				47B01CB222E094AB00F8B6DC /* LoopMe_ExternalAvidAdSessionContext.h in Headers */,
				47B01CE122E094AB00F8B6DC /* LoopMeVASTImageDownloader.h in Headers */,
				47B01CAE22E094AB00F8B6DC /* LoopMe_AvidDisplayAdSession.h in Headers */,
				47B01CCC22E094AB00F8B6DC /* LoopMeVideoCommunicatorProtocol.h in Headers */,
				47B01CF922E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.h in Headers */,
				47B01D3222E094AB00F8B6DC /* LoopMeSkipOffset.h in Headers */,
				47B01D4D22E094AB00F8B6DC /* LoopMeGDPRAPIService.h in Headers */,
				47B01CFE22E094AB00F8B6DC /* LoopMeServerURLBuilder.h in Headers */,
				47B01D0422E094AB00F8B6DC /* LoopMeBackView.h in Headers */,
				47B01D0D22E094AB00F8B6DC /* LoopMeMinimizedAdView.h in Headers */,
				47B01CE522E094AB00F8B6DC /* LoopMeVASTEventTracker.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		473CB05F1F7E8B7B003431CD /* LoopMeCompilerUnity */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 473CB0BB1F7E8B7B003431CD /* Build configuration list for PBXNativeTarget "LoopMeCompilerUnity" */;
			buildPhases = (
				473CB0601F7E8B7B003431CD /* Sources */,
				473CB0881F7E8B7B003431CD /* Frameworks */,
				473CB08A1F7E8B7B003431CD /* Headers */,
				473CB0B71F7E8B7B003431CD /* Resources */,
				473CB0B91F7E8B7B003431CD /* ShellScript */,
				473CB0BA1F7E8B7B003431CD /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LoopMeCompilerUnity;
			productName = UnityAdsCompiler;
			productReference = 473CB0BE1F7E8B7B003431CD /* LoopMeUnitedSDK.framework */;
			productType = "com.apple.product-type.bundle";
		};
		D05C331A1A7FC23500E0E9A9 /* LoopMeCompiler */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D05C332A1A7FC23500E0E9A9 /* Build configuration list for PBXNativeTarget "LoopMeCompiler" */;
			buildPhases = (
				D05C33151A7FC23500E0E9A9 /* Sources */,
				D05C33161A7FC23500E0E9A9 /* Frameworks */,
				D05C33171A7FC23500E0E9A9 /* Headers */,
				D05C33181A7FC23500E0E9A9 /* Resources */,
				D05C33191A7FC23500E0E9A9 /* ShellScript */,
				3F8F525A1E840C4000A84765 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LoopMeCompiler;
			productName = UnityAdsCompiler;
			productReference = D05C331B1A7FC23500E0E9A9 /* LoopMeUnitedSDK.framework */;
			productType = "com.apple.product-type.bundle";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		D05C33111A7FC23500E0E9A9 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0930;
				ORGANIZATIONNAME = LoopMe;
				TargetAttributes = {
					473CB05F1F7E8B7B003431CD = {
						DevelopmentTeam = Q876VLK88R;
						ProvisioningStyle = Automatic;
					};
					D05C331A1A7FC23500E0E9A9 = {
						CreatedOnToolsVersion = 6.1.1;
						DevelopmentTeam = Q876VLK88R;
						ProvisioningStyle = Automatic;
					};
				};
			};
			buildConfigurationList = D05C33141A7FC23500E0E9A9 /* Build configuration list for PBXProject "LoopMeCompiler" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = D05C33101A7FC23500E0E9A9;
			productRefGroup = D05C331C1A7FC23500E0E9A9 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				D05C331A1A7FC23500E0E9A9 /* LoopMeCompiler */,
				473CB05F1F7E8B7B003431CD /* LoopMeCompilerUnity */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		473CB0B71F7E8B7B003431CD /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4730AD1921CA83B100D0E382 /* Info-Unity.plist in Resources */,
				47E9FD9122EB4DC500836E3B /* Assets.xcassets in Resources */,
				47E9FD9022EB4DC200836E3B /* LoopMeResources.bundle in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D05C33181A7FC23500E0E9A9 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4730AD0F21CA817500D0E382 /* Info.plist in Resources */,
				47B01CD622E094AB00F8B6DC /* Assets.xcassets in Resources */,
				47B01CD522E094AB00F8B6DC /* LoopMeResources.bundle in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		3F8F525A1E840C4000A84765 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "/usr/bin/python $SRCROOT/Build-phases/safe_unity.py";
			showEnvVarsInLog = 0;
		};
		473CB0B91F7E8B7B003431CD /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /usr/bin/python;
			shellScript = "# TAG: BUILD SCRIPT (do not remove this comment)\n# Build script generated using https://github.com/kstenerud/iOS-Universal-Framework Mk 8 (beta 2012-06-16)\nimport logging\n\n\n##############################################################################\n#\n# Configuration\n#\n##############################################################################\n\n# Select which kind of framework to build.\n#\n# Note: Due to issues with Xcode's build process, if you select\n#       'embeddedframework', it will still show the regular framework\n#       (as a symlink) along side of the embedded framework. Be sure to\n#       instruct your users to copy/move the embedded framework in this case!\n#\n# If your framework contains resources such as images, nibs, momds, plists,\n# zipfiles and such, choose 'embeddedframework'.\n#\n# If your framework contains no resources, choose 'framework'.\n#\n#config_framework_type = 'framework'\nconfig_framework_type = 'embeddedframework'\n\n# Open the build directory in Finder when the universal framework is\n# successfully built.\n#\n# This value can be overridden by setting the UFW_OPEN_BUILD_DIR env variable\n# to True or False.\n#\n# Recommended setting: True\n#\nconfig_open_build_dir = True\n\n# If true, ensures that all public headers are stored in the framework under\n# the same directory hierarchy as they were in the source tree.\n#\n# Xcode by default places all headers at the same top level, but every other\n# build tool in the known universe preserves directory structure. For simple\n# libraries it doesn't really matter much, but for ports of existing software\n# packages or for bigger libraries, it makes sense to have more structure.\n#\n# The default is set to \"False\" since that's what most Xcode users are used to.\n#\n# Recommended setting: True for deep hierarchy projects, False otherwise.\n#\nconfig_deep_header_hierarchy = False\n\n# Specify where the top of the public header hierarchy is. This path is\n# relative to the project's dir (PROJECT_DIR). You can reference environment\n# variables using templating syntax (e.g. \"${TARGET_NAME}/Some/Subdir\")\n#\n# NOTE: Only used if config_deep_header_hierarchy is True.\n#\n# If this is set to None, the script will attempt to figure out for itself\n# where the top of the header hierarchy is by looking for common path prefixes\n# in the public header files. This process can fail if:\n# - You only have one public header file.\n# - Your source header files don't all have a common root.\n#\n# A common approach is to use \"${TARGET_NAME}\", working under the assumption\n# that all of your header files share the common root of a directory under\n# your project with the same name as your target (which is the Xcode default).\n#\n# Recommended setting: \"${TARGET_NAME}\"\n#\nconfig_deep_header_top = \"${TARGET_NAME}\"\n\n# Warn when \"DerivedData\" is detected in any of the header, library, or\n# framework search paths. In almost all cases, references to directories under\n# DerivedData are added as a result of an Xcode bug and must be manually\n# removed.\n#\n# Recommended setting: True\n#\nconfig_warn_derived_data = True\n\n# Warn if no headers were marked public in this framework.\n#\n# Recommended setting: True\n#\nconfig_warn_no_public_headers = False\n\n# Cause the build to fail if any warnings are issued.\n#\n# Recommended setting: True\n#\nconfig_fail_on_warnings = True\n\n# Minimum log level\n#\n# Recommended setting: logging.INFO\n#\nconfig_log_level = logging.INFO\n\n\n##############################################################################\n#\n# Don't touch anything below here unless you know what you're doing.\n#\n##############################################################################\n\nimport collections\nimport json\nimport os\nimport re\nimport shlex\nimport shutil\nimport string\nimport subprocess\nimport sys\nimport time\nimport traceback\n\n\n##############################################################################\n#\n# Globals\n#\n##############################################################################\n\nlog = logging.getLogger('UFW')\n\nissued_warnings = False\n\n\n##############################################################################\n#\n# Classes\n#\n##############################################################################\n\n# Allows the slave build to communicate with the master build.\n#\nclass BuildState:\n\n    def __init__(self):\n        self.reload()\n\n    def reset(self):\n        self.slave_platform = None\n        self.slave_architectures = []\n        self.slave_linked_archive_paths = []\n        self.slave_built_fw_path = None\n        self.slave_built_embedded_fw_path = None\n\n    def set_slave_properties(self, architectures,\n                             linked_archive_paths,\n                             built_fw_path,\n                             built_embedded_fw_path):\n        self.slave_platform = os.environ['PLATFORM_NAME']\n        self.slave_architectures = architectures\n        self.slave_linked_archive_paths = linked_archive_paths\n        self.slave_built_fw_path = built_fw_path\n        self.slave_built_embedded_fw_path = built_embedded_fw_path\n\n    def get_save_path(self):\n        return os.path.join(os.environ['PROJECT_TEMP_DIR'], \"ufw_build_state.json\")\n\n    def persist(self):\n        filename = self.get_save_path()\n        parent = os.path.dirname(filename)\n        if not os.path.isdir(parent):\n            os.makedirs(parent)\n        with open(filename, \"w\") as f:\n            f.write(json.dumps(self.__dict__))\n\n    def reload(self):\n        self.reset()\n        filename = self.get_save_path()\n        if os.path.exists(filename):\n            with open(filename, \"r\") as f:\n                new_dict = json.loads(f.read())\n                if new_dict is not None:\n                    self.__dict__ = dict(self.__dict__.items() + new_dict.items())\n\n\n# Holds information about the current project and build environment.\n#\nclass Project:\n\n    def __init__(self, filename):\n        sourcecode_types = ['sourcecode.c.c',\n                            'sourcecode.c.objc',\n                            'sourcecode.cpp.cpp',\n                            'sourcecode.cpp.objcpp',\n                            'sourcecode.asm.asm',\n                            'sourcecode.asm.llvm',\n                            'sourcecode.nasm']\n\n        self.build_state = BuildState()\n        self.project_data = self.load_from_file(filename)\n        self.target = filter(lambda x: x['name'] == os.environ['TARGET_NAME'], self.project_data['targets'])[0]\n        self.public_headers = self.get_build_phase_files('PBXHeadersBuildPhase', lambda x: x.get('settings', False) and x['settings'].get('ATTRIBUTES', False) and 'Public' in x['settings']['ATTRIBUTES'])\n        self.static_libraries = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'archive.ar' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.static_frameworks = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'wrapper.framework' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.compilable_sources = self.get_build_phase_files('PBXSourcesBuildPhase', lambda x: x['fileRef']['fileType'] in sourcecode_types)\n        self.header_paths = [os.path.join(*x['pathComponents']) for x in self.public_headers]\n\n        self.headers_dir = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['CONTENTS_FOLDER_PATH'], 'Headers')\n        self.libtool_path = os.path.join(os.environ['DT_TOOLCHAIN_DIR'], 'usr', 'bin', 'libtool')\n        self.project_filename = os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\")\n        self.local_exe_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])\n        self.local_architectures = os.environ['ARCHS'].split(' ')\n        self.local_built_fw_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['WRAPPER_NAME'])\n        self.local_built_embedded_fw_path = os.path.splitext(self.local_built_fw_path)[0] + \".embeddedframework\"\n        self.local_linked_archive_paths = [self.get_linked_ufw_archive_path(arch) for arch in self.local_architectures]\n        self.local_platform = os.environ['PLATFORM_NAME']\n        other_platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n        other_platforms.remove(self.local_platform)\n        self.other_platform = other_platforms[0]\n\n        sdk_name = os.environ['SDK_NAME']\n        if not sdk_name.startswith(self.local_platform):\n            raise Exception(\"%s didn't start with %s\" % (sdk_name, self.local_platform))\n        self.sdk_version = sdk_name[len(self.local_platform):]\n\n    # Load an Xcode project file.\n    #\n    def load_from_file(self, filename):\n        project_file = json.loads(subprocess.check_output([\"plutil\", \"-convert\", \"json\", \"-o\", \"-\", filename]))\n        all_objects = project_file['objects']\n        del project_file['objects']\n        for obj in all_objects.values():\n            self.fix_keys(obj)\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, project_file))\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, all_objects.values()))\n        project_data = project_file['rootObject']\n        self.build_full_paths(project_data, splitpath(os.environ['SOURCE_ROOT']))\n        return project_data\n\n    def is_key(self, obj):        \n        return isinstance(obj, basestring) and len(obj) == 24 and re.search('^[0-9a-fA-F]+$', obj) is not None\n    \n    def build_dereference_list(self, all_objects, parent, key, obj):\n        deref_list = []\n        if self.is_key(obj):\n            dereferenced = all_objects.get(obj, obj)\n            if dereferenced is not obj:\n                deref_list.append((parent, key, obj, dereferenced))\n        elif isinstance(obj, collections.Mapping):\n            for k, v in obj.iteritems():\n                deref_list += self.build_dereference_list(all_objects, obj, k, v)\n        elif isinstance(obj, collections.Iterable) and not isinstance(obj, basestring):\n            for item in obj:\n                deref_list += self.build_dereference_list(all_objects, obj, None, item)\n        return deref_list\n    \n    def unpack_objects(self, deref_list):\n        for parent, key, orig, obj in deref_list:\n            if key is None:\n                parent.remove(orig)\n                parent.append(obj)\n            else:\n                parent[key] = obj\n\n    # Store the full path, separated into components, to a node inside the node\n    # as \"pathComponents\". Also recurse into that node if it's a group.\n    #\n    def build_full_paths(self, node, base_path):\n        # Some nodes are relative to a different source tree, specified as an\n        # env variable.\n        if node.get('sourceTree', '<group>') != '<group>':\n            new_base_path = os.environ.get(node['sourceTree'], None)\n            if new_base_path:\n                base_path = splitpath(new_base_path)\n        # Add the current node's path, if any.\n        if node.get('path', False):\n            base_path = base_path + splitpath(node['path'])\n        node['pathComponents'] = base_path\n        # Recurse if this is a group.\n        if node['isa'] == 'PBXGroup':\n            for child in node['children']:\n                self.build_full_paths(child, base_path)\n        elif node['isa'] == 'PBXProject':\n            self.build_full_paths(node['mainGroup'], base_path)\n            self.build_full_paths(node['productRefGroup'], base_path)\n            for child in node['targets']:\n                self.build_full_paths(child, base_path)\n            projectRefs = node.get('projectReferences', None)\n            if projectRefs is not None:\n                for child in projectRefs[0].values():\n                    self.build_full_paths(child, base_path)\n\n    # Fix up any inconvenient keys.\n    #\n    def fix_keys(self, obj):\n        key_remappings = {'lastKnownFileType': 'fileType', 'explicitFileType': 'fileType'}\n        for key in list(set(key_remappings.keys()) & set(obj.keys())):\n            obj[key_remappings[key]] = obj[key]\n            del obj[key]\n\n    # Get the files from a build phase.\n    #\n    def get_build_phase_files(self, build_phase_name, filter_func):\n        build_phase = filter(lambda x: x['isa'] == build_phase_name, self.target['buildPhases'])[0]\n        build_files = filter(filter_func, build_phase['files'])\n        return [x['fileRef'] for x in build_files]\n\n    # Get the truncated paths of all headers that start with the specified\n    # relative path. Paths are read and returned as fully separated lists.\n    # e.g. ['Some', 'Path', 'To', 'A', 'Header'] with relative_path of\n    # ['Some', 'Path'] gets truncated to ['To', 'A', 'Header']\n    #\n    def movable_headers_relative_to(self, relative_path):\n        rel_path_length = len(relative_path)\n        result = filter(lambda path: len(path) >= rel_path_length and\n                                     path[:rel_path_length] == relative_path, self.header_paths)\n        return [path[rel_path_length:] for path in result]\n\n    # Get the full path to where a linkable archive (library or framework)\n    # is supposed to be.\n    #\n    def get_linked_archive_path(self, architecture):\n        return os.path.join(os.environ['OBJECT_FILE_DIR_%s' % os.environ['CURRENT_VARIANT']],\n                            architecture,\n                            os.environ['EXECUTABLE_NAME'])\n\n    # Get the full path to our custom linked archive of the project.\n    #\n    def get_linked_ufw_archive_path(self, architecture):\n        return self.get_linked_archive_path(architecture) + \".ufwbuild\"\n\n    # Get the full path to the executable of an archive.\n    #\n    def get_exe_path(self, node):\n        path = os.path.join(*node['pathComponents'])\n        if node['fileType'] == 'wrapper.framework':\n            # Frameworks are directories, so go one deeper\n            path = os.path.join(path, os.path.splitext(node['pathComponents'][-1])[0])\n        return path\n\n    # Get the path to the directory containing the archive.\n    #\n    def get_containing_path(self, node):\n        return os.path.join(*node['pathComponents'])\n    \n    def get_archive_search_paths(self):\n        log.info(\"Search paths = %s\" % set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries]))\n        return set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries])\n\n    # Command to link all objects of a single architecture.\n    #\n    def get_single_arch_link_command(self, architecture):\n        cmd = [self.libtool_path,\n               \"-static\",\n               \"-arch_only\", architecture,\n               \"-syslibroot\", os.environ['SDKROOT'],\n               \"-L%s\" % os.environ['TARGET_BUILD_DIR'],\n               \"-filelist\", os.environ['LINK_FILE_LIST_%s_%s' % (os.environ['CURRENT_VARIANT'], architecture)]]\n        if os.environ.get('OTHER_LDFLAGS', False):\n            cmd += [os.environ['OTHER_LDFLAGS']]\n        if os.environ.get('WARNING_LDFLAGS', False):\n            cmd += [os.environ['WARNING_LDFLAGS']]\n#        cmd += [\"-L%s\" % libpath for libpath in self.get_archive_search_paths()]\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", self.get_linked_ufw_archive_path(architecture)]\n        return cmd\n\n    # Command to link all local architectures for the current configuration\n    # into an archive. This reads all libraries + the UFW-built archives and\n    # overwrites the final product.\n    #\n    def get_local_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Command to link all architectures into a universal archive.\n    # This reads all UFW-built archives and overwrites the final product.\n    #\n    def get_all_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths + self.build_state.slave_linked_archive_paths\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Build up an environment for the slave process. This uses BUILD_ROOT\n    # and TEMP_ROOT to convert all environment variables to values suitable\n    # for the slave build environment so that xcodebuild doesn't try to build\n    # in the project directory under \"build\".\n    #\n    def get_slave_environment(self):\n        ignored = ['LD_MAP_FILE_PATH',\n        'HEADER_SEARCH_PATHS',\n        'LIBRARY_SEARCH_PATHS',\n        'FRAMEWORK_SEARCH_PATHS']\n        build_root = os.environ['BUILD_ROOT']\n        temp_root = os.environ['TEMP_ROOT']\n        newenv = {}\n        for key, value in os.environ.items():\n            if key not in ignored and not key.startswith('LINK_FILE_LIST_') and not key.startswith('LD_DEPENDENCY_'):\n                if build_root in value or temp_root in value:\n                    newenv[key] = value.replace(self.local_platform, self.other_platform)\n        return newenv\n\n    # Command to invoke xcodebuild on the slave platform.\n    #\n    def get_slave_project_build_command(self):\n        cmd = [\"xcodebuild\",\n               \"-project\",\n               os.environ['PROJECT_FILE_PATH'],\n               \"-target\",\n               os.environ['TARGET_NAME'],\n               \"-configuration\",\n               os.environ['CONFIGURATION'],\n               \"-sdk\",\n               self.other_platform + self.sdk_version]\n        cmd += [\"%s=%s\" % (key, value) for key, value in self.get_slave_environment().items()]\n        cmd += [\"UFW_MASTER_PLATFORM=\" + os.environ['PLATFORM_NAME']]\n        cmd += [os.environ['ACTION']]\n        return cmd\n\n\n\n##############################################################################\n#\n# Utility Functions\n#\n##############################################################################\n\n# Split a path into a list of path components.\n#\ndef splitpath(path, maxdepth=20):\n     (head, tail) = os.path.split(path)\n     return splitpath(head, maxdepth - 1) + [tail] if maxdepth and head and head != path else [ head or tail ]\n\n# Remove all subdirectories under a path.\n#\ndef remove_subdirs(path, ignore_files):\n    if os.path.exists(path):\n        for filename in filter(lambda x: x not in ignore_files, os.listdir(path)):\n            fullpath = os.path.join(path, filename)\n            if os.path.isdir(fullpath):\n                log.info(\"Remove %s\" % fullpath)\n                shutil.rmtree(fullpath)\n\n# Make whatever parent paths are necessary for a path to exist.\n#\ndef ensure_path_exists(path):\n    if not os.path.isdir(path):\n        os.makedirs(path)\n\n# Make whatever parent paths are necessary for a path's parent to exist.\n#\ndef ensure_parent_exists(path):\n    parent = os.path.dirname(path)\n    if not os.path.isdir(parent):\n        os.makedirs(parent)\n\n# Remove a file or dir if it exists.\n#\ndef remove_path(path):\n    if os.path.exists(path):\n        if os.path.isdir(path) and not os.path.islink(path):\n            shutil.rmtree(path)\n        else:\n            os.remove(path)\n\n# Move a file or dir, replacing the destination if it exists.\n#\ndef move_file(src, dst):\n    if src == dst or not os.path.isfile(src):\n        return\n    log.info(\"Move %s to %s\" % (src, dst))\n    ensure_parent_exists(dst)\n    remove_path(dst)\n    shutil.move(src, dst)\n\n# Copy a file or dir, replacing the destination if it exists already.\n#\ndef copy_overwrite(src, dst):\n    if src != dst:\n        remove_path(dst)\n        ensure_parent_exists(dst)\n        shutil.copytree(src, dst, symlinks=True)\n\n# Attempt to symlink link_path -> link_to.\n# link_to must be a path relative to link_path's parent and must exist.\n# If link_path already exists, do nothing.\n#\ndef attempt_symlink(link_path, link_to):\n    # Only allow linking to an existing file\n    os.stat(os.path.abspath(os.path.join(link_path, \"..\", link_to)))\n\n    # Only make the link if it hasn't already been made\n    if not os.path.exists(link_path):\n        log.info(\"Symlink %s -> %s\" % (link_path, link_to))\n        os.symlink(link_to, link_path)\n\n# Takes the last entry in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef top_level_file_path(base_path, path_list):\n    return os.path.join(base_path, os.path.split(path_list[-1])[-1])\n\n# Takes all entries in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef full_file_path(base_path, path_list):\n    return os.path.join(*([base_path] + path_list))\n\n# Print a command before executing it.\n# Also print out all output from the command to STDOUT.\n#\ndef print_and_call(cmd):\n    log.info(\"Cmd \" + \" \".join(cmd))\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0]\n    if len(result) > 0:\n        log.info(result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Special print-and-call command for the slave build that strips out\n# xcodebuild's spammy list of environment variables.\n#\ndef print_and_call_slave_build(cmd, other_platform):\n    separator = '=== BUILD NATIVE TARGET '\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0].split(separator)\n    if len(result) == 1:\n        result = result[0]\n    else:\n        result = separator + result[1]\n    log.info(\"Cmd \" + \" \".join(cmd) + \"\\n\" + result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Issue a warning and record that a warning has been issued.\n#\ndef issue_warning(msg, *args, **kwargs):\n    global issued_warnings\n    issued_warnings = True\n    log.warn(msg, *args, **kwargs)\n\n\n\n##############################################################################\n#\n# Main Application\n#\n##############################################################################\n\n# Check if we are running as master.\n#\ndef is_master():\n    return os.environ.get('UFW_MASTER_PLATFORM', os.environ['PLATFORM_NAME']) == os.environ['PLATFORM_NAME']\n\n# DerivedData should almost never appear in any framework, library, or header\n# search paths. However, Xcode will sometimes add them in, so we check to make\n# sure.\n#\ndef check_for_derived_data_in_search_paths(project):\n    search_path_keys = [\"FRAMEWORK_SEARCH_PATHS\", \"LIBRARY_SEARCH_PATHS\", \"HEADER_SEARCH_PATHS\"]\n    build_configs = project.target['buildConfigurationList']['buildConfigurations']\n    build_settings = filter(lambda x: x['name'] == os.environ['CONFIGURATION'], build_configs)[0]['buildSettings']\n    \n    found_something = False\n    for path_key in filter(lambda x: x in build_settings, search_path_keys):\n        path = build_settings[path_key]\n        if \"DerivedData\" in path:\n            found_something = True\n            log.warn(\"Derived data in %s\" % path)\n            issue_warning(\"'%s' contains reference to 'DerivedData'.\" % path_key)\n    if found_something:\n        log.warn(\"Check your build settings and remove any entries that contain paths inside the DerivedData folder.\")\n        log.warn(\"Otherwise you can disable this warning by changing 'config_warn_derived_data' in this script.\")\n\n# Link local architectures into their respective archives.\n#\ndef link_local_archs(project):\n    for arch in project.local_architectures:\n        print_and_call(project.get_single_arch_link_command(arch))\n\n# Link only the local architectures into the final product, not the slave\n# architectures. For iphoneos, this will be armv6, armv7. For simulator, this\n# will be i386.\n#\ndef link_combine_local_archs(project):\n    print_and_call(project.get_local_archs_link_command())\n\n# Link all architectures into the final product.\n#\ndef link_combine_all_archs(project):\n    print_and_call(project.get_all_archs_link_command())\n\n# Check if we should open the build directory after a successful build.\n#\ndef should_open_build_dir():\n    env_setting = os.environ.get('UFW_OPEN_BUILD_DIR', None) == 'False'\n\n    if env_setting:\n        return False\n    return config_open_build_dir\n\n# Open the build dir in Finder.\n#\ndef open_build_dir():\n    print_and_call(['open', os.environ['TARGET_BUILD_DIR']])\n\n# Check if the build was started by selecting \"Archive\" under \"Product\" in\n# Xcode.\n#\ndef is_archive_build():\n    if (os.environ.get('UFW_ACTION', None) == 'archive'):\n        return True\n\n    # ACTION is always 'build', but perhaps Apple will fix this someday?\n    archive_build = os.environ['ACTION'] == 'archive'\n\n    if not archive_build:\n        # This can be passed in as an env variable when building from command line.\n        archive_build = os.environ.get('UFW_ACTION', None) == 'archive'\n\n    build_dir = splitpath(os.environ['BUILD_DIR'])\n    if not archive_build:\n        # This partial path is used when you select \"archive\" from within Xcode.\n        archive_build = 'ArchiveIntermediates' in build_dir\n\n    # It only counts as a full archive build if this target is being built into\n    # its own build dir (not being built as a dependency of another target)\n    if archive_build:\n        archive_build = os.environ['TARGET_NAME'] in build_dir\n    \n    return archive_build\n\n# Xcode by default throws all public headers into the top level directory.\n# This function moves them to their expected deep hierarchy.\n#\ndef build_deep_header_hierarchy(project):\n    header_path_top = config_deep_header_top\n    if not header_path_top:\n        header_path_top = os.path.commonprefix(project.header_paths)\n    else:\n        header_path_top = splitpath(header_path_top)\n\n    built_headers_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['PUBLIC_HEADERS_FOLDER_PATH'])\n    movable_headers = project.movable_headers_relative_to(header_path_top)\n\n    # Remove subdirs if they only contain files that have been rebuilt\n    ignore_headers = filter(lambda x: not os.path.isfile(top_level_file_path(built_headers_path, x)), movable_headers)\n    remove_subdirs(built_headers_path, [file[0] for file in ignore_headers])\n\n    # Move rebuilt headers into their proper subdirs\n    for header in movable_headers:\n        move_file(top_level_file_path(built_headers_path, header), full_file_path(built_headers_path, header))\n\n# Add all symlinks needed to make a full framework structure:\n#\n# MyFramework.framework\n# |-- MyFramework -> Versions/Current/MyFramework\n# |-- Headers -> Versions/Current/Headers\n# |-- Resources -> Versions/Current/Resources\n# `-- Versions\n#     |-- A\n#     |   |-- MyFramework\n#     |   |-- Headers\n#     |   |   `-- MyFramework.h\n#     |   `-- Resources\n#     |       |-- Info.plist\n#     |       |-- MyViewController.nib\n#     |       `-- en.lproj\n#     |           `-- InfoPlist.strings\n#     `-- Current -> A\n#\ndef add_symlinks_to_framework(project):\n    base_dir = project.local_built_fw_path\n    attempt_symlink(os.path.join(base_dir, \"Versions\", \"Current\"), os.environ['FRAMEWORK_VERSION'])\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Headers\")):\n        attempt_symlink(os.path.join(base_dir, \"Headers\"), os.path.join(\"Versions\", \"Current\", \"Headers\"))\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Resources\")):\n        attempt_symlink(os.path.join(base_dir, \"Resources\"), os.path.join(\"Versions\", \"Current\", \"Resources\"))\n    attempt_symlink(os.path.join(base_dir, os.environ['EXECUTABLE_NAME']), os.path.join(\"Versions\", \"Current\", os.environ['EXECUTABLE_NAME']))\n\n# Build an embedded framework structure.\n# An embedded framework contains the actual framework, plus a \"Resources\"\n# directory containing symlinks to all resources found in the actual framework,\n# with the exception of \"Info.plist\" and anything ending in \".lproj\":\n#\n# MyFramework.embeddedframework\n# |-- MyFramework.framework\n# |   |-- MyFramework -> Versions/Current/MyFramework\n# |   |-- Headers -> Versions/Current/Headers\n# |   |-- Resources -> Versions/Current/Resources\n# |   `-- Versions\n# |       |-- A\n# |       |   |-- MyFramework\n# |       |   |-- Headers\n# |       |   |   `-- MyFramework.h\n# |       |   `-- Resources\n# |       |       |-- Info.plist\n# |       |       |-- MyViewController.nib\n# |       |       `-- en.lproj\n# |       |           `-- InfoPlist.strings\n# |       `-- Current -> A\n# `-- Resources\n#     `-- MyViewController.nib -> ../MyFramework.framework/Resources/MyViewController.nib\n#\ndef build_embedded_framework(project):\n    fw_path = project.local_built_fw_path\n    embedded_path = project.local_built_embedded_fw_path\n    fw_name = os.environ['WRAPPER_NAME']\n\n    if (os.path.islink(fw_path)):\n        # If the framework path is a link, the build result already in embeddedframework.\n        # Just recreate embeddedframework's Resources\n        remove_path(os.path.join(embedded_path, \"Resources\"))\n    else:\n        remove_path(embedded_path)\n        ensure_path_exists(embedded_path)\n        copy_overwrite(fw_path, os.path.join(embedded_path, fw_name))\n\n    # Create embeddedframework's Resources        \n    ensure_path_exists(os.path.join(embedded_path, \"Resources\"))\n    symlink_source = os.path.join(\"..\", fw_name, \"Resources\")\n    symlink_path = os.path.join(embedded_path, \"Resources\")\n    if os.path.isdir(os.path.join(fw_path, \"Resources\")):\n        for file in filter(lambda x: x != \"Info.plist\" and not x.endswith(\".lproj\"), os.listdir(os.path.join(fw_path, \"Resources\"))):\n            attempt_symlink(os.path.join(symlink_path, file), os.path.join(symlink_source, file))\n\n    # Remove the normal framework and replace it with a symlink to the copy\n    # in the embedded framework. This is needed because Xcode runs its strip\n    # phase AFTER the script runs.\n    embed_fw_wrapper = os.path.splitext(os.environ['WRAPPER_NAME'])[0] + \".embeddedframework\"\n    remove_path(fw_path)\n    attempt_symlink(fw_path, os.path.join(embed_fw_wrapper, os.environ['WRAPPER_NAME']))\n\n\n# Run the build process in slave mode to build the other configuration\n# (device/simulator).\n#\ndef run_slave_build(project):\n    print_and_call_slave_build(project.get_slave_project_build_command(), project.other_platform)\n\n# Run the build process.\n#\ndef run_build():\n    project = Project(os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\"))\n\n    # Issue warnings only if we're master.\n    if is_master():\n        if len(project.compilable_sources) == 0:\n            raise Exception(\"No compilable sources found. Please add at least one source file to build target %s.\" % os.environ['TARGET_NAME'])\n\n        if config_warn_derived_data:\n            check_for_derived_data_in_search_paths(project)\n        if config_warn_no_public_headers and len(project.public_headers) == 0:\n            issue_warning('No headers in build target %s were marked public. Please move at least one header to \"Public\" in the \"Copy Headers\" build phase.' % os.environ['TARGET_NAME'])\n\n    # Only build slave if this is an archive build.\n    if is_archive_build():\n        if is_master():\n            log.debug(\"Building as MASTER\")\n            # The slave-side linker tries to include this (nonexistent) path as\n            # a library path.\n            ensure_path_exists(project.get_slave_environment()['BUILT_PRODUCTS_DIR'])\n            project.build_state.persist()\n            run_slave_build(project)\n            project.build_state.reload()\n        else:\n            log.debug(\"Building as SLAVE\")\n            project.build_state.reload()\n            project.build_state.set_slave_properties(project.local_architectures,\n                                                     project.local_linked_archive_paths,\n                                                     project.local_built_fw_path,\n                                                     project.local_built_embedded_fw_path)\n            project.build_state.persist()\n\n    link_local_archs(project)\n    \n    # Only do a universal binary when building an archive.\n    if is_archive_build() and is_master():\n        link_combine_all_archs(project)\n    else:\n        link_combine_local_archs(project)\n\n    if config_deep_header_hierarchy:\n        build_deep_header_hierarchy(project)\n\n    add_symlinks_to_framework(project)\n    \n    if is_master():\n        if config_framework_type == 'embeddedframework':\n            build_embedded_framework(project)\n        elif config_framework_type != 'framework':\n            raise Exception(\"%s: Unknown framework type for config_framework_type\" % config_framework_type)\n\n\nif __name__ == \"__main__\":\n    log_handler = logging.StreamHandler()\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n    log.addHandler(log_handler)\n    log.setLevel(config_log_level)\n\n    error_code = 0\n    prefix = \"M\" if is_master() else \"S\"\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + prefix + \" \" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n\n    log.debug(\"Begin build process\")\n\n    if config_deep_header_top:\n        config_deep_header_top = string.Template(config_deep_header_top).substitute(os.environ)\n\n    try:\n        run_build()\n        if issued_warnings:\n            if config_fail_on_warnings:\n                error_code = 1\n            log.warn(\"Build completed with warnings\")\n        else:\n            log.info(\"Build completed\")\n        if not is_archive_build():\n            log.info(\"Note: This is *NOT* a universal framework build. To build as a universal framework, do an archive build.\")\n            log.info(\"To do an archive build from command line, use \\\"xcodebuild -configuration Release UFW_ACTION=archive clean build\\\"\")\n    except Exception:\n        traceback.print_exc(file=sys.stdout)\n        error_code = 1\n        log.error(\"Build failed\")\n    finally:\n        if error_code == 0 and is_archive_build() and is_master():\n            log.info(\"Built framework is in \" + os.environ['TARGET_BUILD_DIR'])\n            if should_open_build_dir():\n                open_build_dir()\n        sys.exit(error_code)\n";
			showEnvVarsInLog = 0;
		};
		473CB0BA1F7E8B7B003431CD /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "/usr/bin/python $SRCROOT/Build-phases/safe_unity.py";
			showEnvVarsInLog = 0;
		};
		D05C33191A7FC23500E0E9A9 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /usr/bin/python;
			shellScript = "# TAG: BUILD SCRIPT (do not remove this comment)\n# Build script generated using https://github.com/kstenerud/iOS-Universal-Framework Mk 8 (beta 2012-06-16)\nimport logging\n\n\n##############################################################################\n#\n# Configuration\n#\n##############################################################################\n\n# Select which kind of framework to build.\n#\n# Note: Due to issues with Xcode's build process, if you select\n#       'embeddedframework', it will still show the regular framework\n#       (as a symlink) along side of the embedded framework. Be sure to\n#       instruct your users to copy/move the embedded framework in this case!\n#\n# If your framework contains resources such as images, nibs, momds, plists,\n# zipfiles and such, choose 'embeddedframework'.\n#\n# If your framework contains no resources, choose 'framework'.\n#\n#config_framework_type = 'framework'\nconfig_framework_type = 'embeddedframework'\n\n# Open the build directory in Finder when the universal framework is\n# successfully built.\n#\n# This value can be overridden by setting the UFW_OPEN_BUILD_DIR env variable\n# to True or False.\n#\n# Recommended setting: True\n#\nconfig_open_build_dir = True\n\n# If true, ensures that all public headers are stored in the framework under\n# the same directory hierarchy as they were in the source tree.\n#\n# Xcode by default places all headers at the same top level, but every other\n# build tool in the known universe preserves directory structure. For simple\n# libraries it doesn't really matter much, but for ports of existing software\n# packages or for bigger libraries, it makes sense to have more structure.\n#\n# The default is set to \"False\" since that's what most Xcode users are used to.\n#\n# Recommended setting: True for deep hierarchy projects, False otherwise.\n#\nconfig_deep_header_hierarchy = False\n\n# Specify where the top of the public header hierarchy is. This path is\n# relative to the project's dir (PROJECT_DIR). You can reference environment\n# variables using templating syntax (e.g. \"${TARGET_NAME}/Some/Subdir\")\n#\n# NOTE: Only used if config_deep_header_hierarchy is True.\n#\n# If this is set to None, the script will attempt to figure out for itself\n# where the top of the header hierarchy is by looking for common path prefixes\n# in the public header files. This process can fail if:\n# - You only have one public header file.\n# - Your source header files don't all have a common root.\n#\n# A common approach is to use \"${TARGET_NAME}\", working under the assumption\n# that all of your header files share the common root of a directory under\n# your project with the same name as your target (which is the Xcode default).\n#\n# Recommended setting: \"${TARGET_NAME}\"\n#\nconfig_deep_header_top = \"${TARGET_NAME}\"\n\n# Warn when \"DerivedData\" is detected in any of the header, library, or\n# framework search paths. In almost all cases, references to directories under\n# DerivedData are added as a result of an Xcode bug and must be manually\n# removed.\n#\n# Recommended setting: True\n#\nconfig_warn_derived_data = True\n\n# Warn if no headers were marked public in this framework.\n#\n# Recommended setting: True\n#\nconfig_warn_no_public_headers = False\n\n# Cause the build to fail if any warnings are issued.\n#\n# Recommended setting: True\n#\nconfig_fail_on_warnings = True\n\n# Minimum log level\n#\n# Recommended setting: logging.INFO\n#\nconfig_log_level = logging.INFO\n\n\n##############################################################################\n#\n# Don't touch anything below here unless you know what you're doing.\n#\n##############################################################################\n\nimport collections\nimport json\nimport os\nimport re\nimport shlex\nimport shutil\nimport string\nimport subprocess\nimport sys\nimport time\nimport traceback\n\n\n##############################################################################\n#\n# Globals\n#\n##############################################################################\n\nlog = logging.getLogger('UFW')\n\nissued_warnings = False\n\n\n##############################################################################\n#\n# Classes\n#\n##############################################################################\n\n# Allows the slave build to communicate with the master build.\n#\nclass BuildState:\n\n    def __init__(self):\n        self.reload()\n\n    def reset(self):\n        self.slave_platform = None\n        self.slave_architectures = []\n        self.slave_linked_archive_paths = []\n        self.slave_built_fw_path = None\n        self.slave_built_embedded_fw_path = None\n\n    def set_slave_properties(self, architectures,\n                             linked_archive_paths,\n                             built_fw_path,\n                             built_embedded_fw_path):\n        self.slave_platform = os.environ['PLATFORM_NAME']\n        self.slave_architectures = architectures\n        self.slave_linked_archive_paths = linked_archive_paths\n        self.slave_built_fw_path = built_fw_path\n        self.slave_built_embedded_fw_path = built_embedded_fw_path\n\n    def get_save_path(self):\n        return os.path.join(os.environ['PROJECT_TEMP_DIR'], \"ufw_build_state.json\")\n\n    def persist(self):\n        filename = self.get_save_path()\n        parent = os.path.dirname(filename)\n        if not os.path.isdir(parent):\n            os.makedirs(parent)\n        with open(filename, \"w\") as f:\n            f.write(json.dumps(self.__dict__))\n\n    def reload(self):\n        self.reset()\n        filename = self.get_save_path()\n        if os.path.exists(filename):\n            with open(filename, \"r\") as f:\n                new_dict = json.loads(f.read())\n                if new_dict is not None:\n                    self.__dict__ = dict(self.__dict__.items() + new_dict.items())\n\n\n# Holds information about the current project and build environment.\n#\nclass Project:\n\n    def __init__(self, filename):\n        sourcecode_types = ['sourcecode.c.c',\n                            'sourcecode.c.objc',\n                            'sourcecode.cpp.cpp',\n                            'sourcecode.cpp.objcpp',\n                            'sourcecode.asm.asm',\n                            'sourcecode.asm.llvm',\n                            'sourcecode.nasm']\n\n        self.build_state = BuildState()\n        self.project_data = self.load_from_file(filename)\n        self.target = filter(lambda x: x['name'] == os.environ['TARGET_NAME'], self.project_data['targets'])[0]\n        self.public_headers = self.get_build_phase_files('PBXHeadersBuildPhase', lambda x: x.get('settings', False) and x['settings'].get('ATTRIBUTES', False) and 'Public' in x['settings']['ATTRIBUTES'])\n        self.static_libraries = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'archive.ar' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.static_frameworks = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'wrapper.framework' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.compilable_sources = self.get_build_phase_files('PBXSourcesBuildPhase', lambda x: x['fileRef']['fileType'] in sourcecode_types)\n        self.header_paths = [os.path.join(*x['pathComponents']) for x in self.public_headers]\n\n        self.headers_dir = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['CONTENTS_FOLDER_PATH'], 'Headers')\n        self.libtool_path = os.path.join(os.environ['DT_TOOLCHAIN_DIR'], 'usr', 'bin', 'libtool')\n        self.project_filename = os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\")\n        self.local_exe_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])\n        self.local_architectures = os.environ['ARCHS'].split(' ')\n        self.local_built_fw_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['WRAPPER_NAME'])\n        self.local_built_embedded_fw_path = os.path.splitext(self.local_built_fw_path)[0] + \".embeddedframework\"\n        self.local_linked_archive_paths = [self.get_linked_ufw_archive_path(arch) for arch in self.local_architectures]\n        self.local_platform = os.environ['PLATFORM_NAME']\n        other_platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n        other_platforms.remove(self.local_platform)\n        self.other_platform = other_platforms[0]\n\n        sdk_name = os.environ['SDK_NAME']\n        if not sdk_name.startswith(self.local_platform):\n            raise Exception(\"%s didn't start with %s\" % (sdk_name, self.local_platform))\n        self.sdk_version = sdk_name[len(self.local_platform):]\n\n    # Load an Xcode project file.\n    #\n    def load_from_file(self, filename):\n        project_file = json.loads(subprocess.check_output([\"plutil\", \"-convert\", \"json\", \"-o\", \"-\", filename]))\n        all_objects = project_file['objects']\n        del project_file['objects']\n        for obj in all_objects.values():\n            self.fix_keys(obj)\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, project_file))\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, all_objects.values()))\n        project_data = project_file['rootObject']\n        self.build_full_paths(project_data, splitpath(os.environ['SOURCE_ROOT']))\n        return project_data\n\n    def is_key(self, obj):        \n        return isinstance(obj, basestring) and len(obj) == 24 and re.search('^[0-9a-fA-F]+$', obj) is not None\n    \n    def build_dereference_list(self, all_objects, parent, key, obj):\n        deref_list = []\n        if self.is_key(obj):\n            dereferenced = all_objects.get(obj, obj)\n            if dereferenced is not obj:\n                deref_list.append((parent, key, obj, dereferenced))\n        elif isinstance(obj, collections.Mapping):\n            for k, v in obj.iteritems():\n                deref_list += self.build_dereference_list(all_objects, obj, k, v)\n        elif isinstance(obj, collections.Iterable) and not isinstance(obj, basestring):\n            for item in obj:\n                deref_list += self.build_dereference_list(all_objects, obj, None, item)\n        return deref_list\n    \n    def unpack_objects(self, deref_list):\n        for parent, key, orig, obj in deref_list:\n            if key is None:\n                parent.remove(orig)\n                parent.append(obj)\n            else:\n                parent[key] = obj\n\n    # Store the full path, separated into components, to a node inside the node\n    # as \"pathComponents\". Also recurse into that node if it's a group.\n    #\n    def build_full_paths(self, node, base_path):\n        # Some nodes are relative to a different source tree, specified as an\n        # env variable.\n        if node.get('sourceTree', '<group>') != '<group>':\n            new_base_path = os.environ.get(node['sourceTree'], None)\n            if new_base_path:\n                base_path = splitpath(new_base_path)\n        # Add the current node's path, if any.\n        if node.get('path', False):\n            base_path = base_path + splitpath(node['path'])\n        node['pathComponents'] = base_path\n        # Recurse if this is a group.\n        if node['isa'] == 'PBXGroup':\n            for child in node['children']:\n                self.build_full_paths(child, base_path)\n        elif node['isa'] == 'PBXProject':\n            self.build_full_paths(node['mainGroup'], base_path)\n            self.build_full_paths(node['productRefGroup'], base_path)\n            for child in node['targets']:\n                self.build_full_paths(child, base_path)\n            projectRefs = node.get('projectReferences', None)\n            if projectRefs is not None:\n                for child in projectRefs[0].values():\n                    self.build_full_paths(child, base_path)\n\n    # Fix up any inconvenient keys.\n    #\n    def fix_keys(self, obj):\n        key_remappings = {'lastKnownFileType': 'fileType', 'explicitFileType': 'fileType'}\n        for key in list(set(key_remappings.keys()) & set(obj.keys())):\n            obj[key_remappings[key]] = obj[key]\n            del obj[key]\n\n    # Get the files from a build phase.\n    #\n    def get_build_phase_files(self, build_phase_name, filter_func):\n        build_phase = filter(lambda x: x['isa'] == build_phase_name, self.target['buildPhases'])[0]\n        build_files = filter(filter_func, build_phase['files'])\n        return [x['fileRef'] for x in build_files]\n\n    # Get the truncated paths of all headers that start with the specified\n    # relative path. Paths are read and returned as fully separated lists.\n    # e.g. ['Some', 'Path', 'To', 'A', 'Header'] with relative_path of\n    # ['Some', 'Path'] gets truncated to ['To', 'A', 'Header']\n    #\n    def movable_headers_relative_to(self, relative_path):\n        rel_path_length = len(relative_path)\n        result = filter(lambda path: len(path) >= rel_path_length and\n                                     path[:rel_path_length] == relative_path, self.header_paths)\n        return [path[rel_path_length:] for path in result]\n\n    # Get the full path to where a linkable archive (library or framework)\n    # is supposed to be.\n    #\n    def get_linked_archive_path(self, architecture):\n        return os.path.join(os.environ['OBJECT_FILE_DIR_%s' % os.environ['CURRENT_VARIANT']],\n                            architecture,\n                            os.environ['EXECUTABLE_NAME'])\n\n    # Get the full path to our custom linked archive of the project.\n    #\n    def get_linked_ufw_archive_path(self, architecture):\n        return self.get_linked_archive_path(architecture) + \".ufwbuild\"\n\n    # Get the full path to the executable of an archive.\n    #\n    def get_exe_path(self, node):\n        path = os.path.join(*node['pathComponents'])\n        if node['fileType'] == 'wrapper.framework':\n            # Frameworks are directories, so go one deeper\n            path = os.path.join(path, os.path.splitext(node['pathComponents'][-1])[0])\n        return path\n\n    # Get the path to the directory containing the archive.\n    #\n    def get_containing_path(self, node):\n        return os.path.join(*node['pathComponents'])\n    \n    def get_archive_search_paths(self):\n        log.info(\"Search paths = %s\" % set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries]))\n        return set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries])\n\n    # Command to link all objects of a single architecture.\n    #\n    def get_single_arch_link_command(self, architecture):\n        cmd = [self.libtool_path,\n               \"-static\",\n               \"-arch_only\", architecture,\n               \"-syslibroot\", os.environ['SDKROOT'],\n               \"-L%s\" % os.environ['TARGET_BUILD_DIR'],\n               \"-filelist\", os.environ['LINK_FILE_LIST_%s_%s' % (os.environ['CURRENT_VARIANT'], architecture)]]\n        if os.environ.get('OTHER_LDFLAGS', False):\n            cmd += [os.environ['OTHER_LDFLAGS']]\n        if os.environ.get('WARNING_LDFLAGS', False):\n            cmd += [os.environ['WARNING_LDFLAGS']]\n#        cmd += [\"-L%s\" % libpath for libpath in self.get_archive_search_paths()]\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", self.get_linked_ufw_archive_path(architecture)]\n        return cmd\n\n    # Command to link all local architectures for the current configuration\n    # into an archive. This reads all libraries + the UFW-built archives and\n    # overwrites the final product.\n    #\n    def get_local_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Command to link all architectures into a universal archive.\n    # This reads all UFW-built archives and overwrites the final product.\n    #\n    def get_all_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths + self.build_state.slave_linked_archive_paths\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Build up an environment for the slave process. This uses BUILD_ROOT\n    # and TEMP_ROOT to convert all environment variables to values suitable\n    # for the slave build environment so that xcodebuild doesn't try to build\n    # in the project directory under \"build\".\n    #\n    def get_slave_environment(self):\n        ignored = ['LD_MAP_FILE_PATH',\n        'HEADER_SEARCH_PATHS',\n        'LIBRARY_SEARCH_PATHS',\n        'FRAMEWORK_SEARCH_PATHS']\n        build_root = os.environ['BUILD_ROOT']\n        temp_root = os.environ['TEMP_ROOT']\n        newenv = {}\n        for key, value in os.environ.items():\n            if key not in ignored and not key.startswith('LINK_FILE_LIST_') and not key.startswith('LD_DEPENDENCY_'):\n                if build_root in value or temp_root in value:\n                    newenv[key] = value.replace(self.local_platform, self.other_platform)\n        return newenv\n\n    # Command to invoke xcodebuild on the slave platform.\n    #\n    def get_slave_project_build_command(self):\n        cmd = [\"xcodebuild\",\n               \"-project\",\n               os.environ['PROJECT_FILE_PATH'],\n               \"-target\",\n               os.environ['TARGET_NAME'],\n               \"-configuration\",\n               os.environ['CONFIGURATION'],\n               \"-sdk\",\n               self.other_platform + self.sdk_version]\n        cmd += [\"%s=%s\" % (key, value) for key, value in self.get_slave_environment().items()]\n        cmd += [\"UFW_MASTER_PLATFORM=\" + os.environ['PLATFORM_NAME']]\n        cmd += [os.environ['ACTION']]\n        return cmd\n\n\n\n##############################################################################\n#\n# Utility Functions\n#\n##############################################################################\n\n# Split a path into a list of path components.\n#\ndef splitpath(path, maxdepth=20):\n     (head, tail) = os.path.split(path)\n     return splitpath(head, maxdepth - 1) + [tail] if maxdepth and head and head != path else [ head or tail ]\n\n# Remove all subdirectories under a path.\n#\ndef remove_subdirs(path, ignore_files):\n    if os.path.exists(path):\n        for filename in filter(lambda x: x not in ignore_files, os.listdir(path)):\n            fullpath = os.path.join(path, filename)\n            if os.path.isdir(fullpath):\n                log.info(\"Remove %s\" % fullpath)\n                shutil.rmtree(fullpath)\n\n# Make whatever parent paths are necessary for a path to exist.\n#\ndef ensure_path_exists(path):\n    if not os.path.isdir(path):\n        os.makedirs(path)\n\n# Make whatever parent paths are necessary for a path's parent to exist.\n#\ndef ensure_parent_exists(path):\n    parent = os.path.dirname(path)\n    if not os.path.isdir(parent):\n        os.makedirs(parent)\n\n# Remove a file or dir if it exists.\n#\ndef remove_path(path):\n    if os.path.exists(path):\n        if os.path.isdir(path) and not os.path.islink(path):\n            shutil.rmtree(path)\n        else:\n            os.remove(path)\n\n# Move a file or dir, replacing the destination if it exists.\n#\ndef move_file(src, dst):\n    if src == dst or not os.path.isfile(src):\n        return\n    log.info(\"Move %s to %s\" % (src, dst))\n    ensure_parent_exists(dst)\n    remove_path(dst)\n    shutil.move(src, dst)\n\n# Copy a file or dir, replacing the destination if it exists already.\n#\ndef copy_overwrite(src, dst):\n    if src != dst:\n        remove_path(dst)\n        ensure_parent_exists(dst)\n        shutil.copytree(src, dst, symlinks=True)\n\n# Attempt to symlink link_path -> link_to.\n# link_to must be a path relative to link_path's parent and must exist.\n# If link_path already exists, do nothing.\n#\ndef attempt_symlink(link_path, link_to):\n    # Only allow linking to an existing file\n    os.stat(os.path.abspath(os.path.join(link_path, \"..\", link_to)))\n\n    # Only make the link if it hasn't already been made\n    if not os.path.exists(link_path):\n        log.info(\"Symlink %s -> %s\" % (link_path, link_to))\n        os.symlink(link_to, link_path)\n\n# Takes the last entry in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef top_level_file_path(base_path, path_list):\n    return os.path.join(base_path, os.path.split(path_list[-1])[-1])\n\n# Takes all entries in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef full_file_path(base_path, path_list):\n    return os.path.join(*([base_path] + path_list))\n\n# Print a command before executing it.\n# Also print out all output from the command to STDOUT.\n#\ndef print_and_call(cmd):\n    log.info(\"Cmd \" + \" \".join(cmd))\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0]\n    if len(result) > 0:\n        log.info(result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Special print-and-call command for the slave build that strips out\n# xcodebuild's spammy list of environment variables.\n#\ndef print_and_call_slave_build(cmd, other_platform):\n    separator = '=== BUILD NATIVE TARGET '\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0].split(separator)\n    if len(result) == 1:\n        result = result[0]\n    else:\n        result = separator + result[1]\n    log.info(\"Cmd \" + \" \".join(cmd) + \"\\n\" + result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Issue a warning and record that a warning has been issued.\n#\ndef issue_warning(msg, *args, **kwargs):\n    global issued_warnings\n    issued_warnings = True\n    log.warn(msg, *args, **kwargs)\n\n\n\n##############################################################################\n#\n# Main Application\n#\n##############################################################################\n\n# Check if we are running as master.\n#\ndef is_master():\n    return os.environ.get('UFW_MASTER_PLATFORM', os.environ['PLATFORM_NAME']) == os.environ['PLATFORM_NAME']\n\n# DerivedData should almost never appear in any framework, library, or header\n# search paths. However, Xcode will sometimes add them in, so we check to make\n# sure.\n#\ndef check_for_derived_data_in_search_paths(project):\n    search_path_keys = [\"FRAMEWORK_SEARCH_PATHS\", \"LIBRARY_SEARCH_PATHS\", \"HEADER_SEARCH_PATHS\"]\n    build_configs = project.target['buildConfigurationList']['buildConfigurations']\n    build_settings = filter(lambda x: x['name'] == os.environ['CONFIGURATION'], build_configs)[0]['buildSettings']\n    \n    found_something = False\n    for path_key in filter(lambda x: x in build_settings, search_path_keys):\n        path = build_settings[path_key]\n        if \"DerivedData\" in path:\n            found_something = True\n            log.warn(\"Derived data in %s\" % path)\n            issue_warning(\"'%s' contains reference to 'DerivedData'.\" % path_key)\n    if found_something:\n        log.warn(\"Check your build settings and remove any entries that contain paths inside the DerivedData folder.\")\n        log.warn(\"Otherwise you can disable this warning by changing 'config_warn_derived_data' in this script.\")\n\n# Link local architectures into their respective archives.\n#\ndef link_local_archs(project):\n    for arch in project.local_architectures:\n        print_and_call(project.get_single_arch_link_command(arch))\n\n# Link only the local architectures into the final product, not the slave\n# architectures. For iphoneos, this will be armv6, armv7. For simulator, this\n# will be i386.\n#\ndef link_combine_local_archs(project):\n    print_and_call(project.get_local_archs_link_command())\n\n# Link all architectures into the final product.\n#\ndef link_combine_all_archs(project):\n    print_and_call(project.get_all_archs_link_command())\n\n# Check if we should open the build directory after a successful build.\n#\ndef should_open_build_dir():\n    env_setting = os.environ.get('UFW_OPEN_BUILD_DIR', None) == 'False'\n\n    if env_setting:\n        return False\n    return config_open_build_dir\n\n# Open the build dir in Finder.\n#\ndef open_build_dir():\n    print_and_call(['open', os.environ['TARGET_BUILD_DIR']])\n\n# Check if the build was started by selecting \"Archive\" under \"Product\" in\n# Xcode.\n#\ndef is_archive_build():\n    if (os.environ.get('UFW_ACTION', None) == 'archive'):\n        return True\n\n    # ACTION is always 'build', but perhaps Apple will fix this someday?\n    archive_build = os.environ['ACTION'] == 'archive'\n\n    if not archive_build:\n        # This can be passed in as an env variable when building from command line.\n        archive_build = os.environ.get('UFW_ACTION', None) == 'archive'\n\n    build_dir = splitpath(os.environ['BUILD_DIR'])\n    if not archive_build:\n        # This partial path is used when you select \"archive\" from within Xcode.\n        archive_build = 'ArchiveIntermediates' in build_dir\n\n    # It only counts as a full archive build if this target is being built into\n    # its own build dir (not being built as a dependency of another target)\n    if archive_build:\n        archive_build = os.environ['TARGET_NAME'] in build_dir\n    \n    return archive_build\n\n# Xcode by default throws all public headers into the top level directory.\n# This function moves them to their expected deep hierarchy.\n#\ndef build_deep_header_hierarchy(project):\n    header_path_top = config_deep_header_top\n    if not header_path_top:\n        header_path_top = os.path.commonprefix(project.header_paths)\n    else:\n        header_path_top = splitpath(header_path_top)\n\n    built_headers_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['PUBLIC_HEADERS_FOLDER_PATH'])\n    movable_headers = project.movable_headers_relative_to(header_path_top)\n\n    # Remove subdirs if they only contain files that have been rebuilt\n    ignore_headers = filter(lambda x: not os.path.isfile(top_level_file_path(built_headers_path, x)), movable_headers)\n    remove_subdirs(built_headers_path, [file[0] for file in ignore_headers])\n\n    # Move rebuilt headers into their proper subdirs\n    for header in movable_headers:\n        move_file(top_level_file_path(built_headers_path, header), full_file_path(built_headers_path, header))\n\n# Add all symlinks needed to make a full framework structure:\n#\n# MyFramework.framework\n# |-- MyFramework -> Versions/Current/MyFramework\n# |-- Headers -> Versions/Current/Headers\n# |-- Resources -> Versions/Current/Resources\n# `-- Versions\n#     |-- A\n#     |   |-- MyFramework\n#     |   |-- Headers\n#     |   |   `-- MyFramework.h\n#     |   `-- Resources\n#     |       |-- Info.plist\n#     |       |-- MyViewController.nib\n#     |       `-- en.lproj\n#     |           `-- InfoPlist.strings\n#     `-- Current -> A\n#\ndef add_symlinks_to_framework(project):\n    base_dir = project.local_built_fw_path\n    attempt_symlink(os.path.join(base_dir, \"Versions\", \"Current\"), os.environ['FRAMEWORK_VERSION'])\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Headers\")):\n        attempt_symlink(os.path.join(base_dir, \"Headers\"), os.path.join(\"Versions\", \"Current\", \"Headers\"))\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Resources\")):\n        attempt_symlink(os.path.join(base_dir, \"Resources\"), os.path.join(\"Versions\", \"Current\", \"Resources\"))\n    attempt_symlink(os.path.join(base_dir, os.environ['EXECUTABLE_NAME']), os.path.join(\"Versions\", \"Current\", os.environ['EXECUTABLE_NAME']))\n\n# Build an embedded framework structure.\n# An embedded framework contains the actual framework, plus a \"Resources\"\n# directory containing symlinks to all resources found in the actual framework,\n# with the exception of \"Info.plist\" and anything ending in \".lproj\":\n#\n# MyFramework.embeddedframework\n# |-- MyFramework.framework\n# |   |-- MyFramework -> Versions/Current/MyFramework\n# |   |-- Headers -> Versions/Current/Headers\n# |   |-- Resources -> Versions/Current/Resources\n# |   `-- Versions\n# |       |-- A\n# |       |   |-- MyFramework\n# |       |   |-- Headers\n# |       |   |   `-- MyFramework.h\n# |       |   `-- Resources\n# |       |       |-- Info.plist\n# |       |       |-- MyViewController.nib\n# |       |       `-- en.lproj\n# |       |           `-- InfoPlist.strings\n# |       `-- Current -> A\n# `-- Resources\n#     `-- MyViewController.nib -> ../MyFramework.framework/Resources/MyViewController.nib\n#\ndef build_embedded_framework(project):\n    fw_path = project.local_built_fw_path\n    embedded_path = project.local_built_embedded_fw_path\n    fw_name = os.environ['WRAPPER_NAME']\n\n    if (os.path.islink(fw_path)):\n        # If the framework path is a link, the build result already in embeddedframework.\n        # Just recreate embeddedframework's Resources\n        remove_path(os.path.join(embedded_path, \"Resources\"))\n    else:\n        remove_path(embedded_path)\n        ensure_path_exists(embedded_path)\n        copy_overwrite(fw_path, os.path.join(embedded_path, fw_name))\n\n    # Create embeddedframework's Resources        \n    ensure_path_exists(os.path.join(embedded_path, \"Resources\"))\n    symlink_source = os.path.join(\"..\", fw_name, \"Resources\")\n    symlink_path = os.path.join(embedded_path, \"Resources\")\n    if os.path.isdir(os.path.join(fw_path, \"Resources\")):\n        for file in filter(lambda x: x != \"Info.plist\" and not x.endswith(\".lproj\"), os.listdir(os.path.join(fw_path, \"Resources\"))):\n            attempt_symlink(os.path.join(symlink_path, file), os.path.join(symlink_source, file))\n\n    # Remove the normal framework and replace it with a symlink to the copy\n    # in the embedded framework. This is needed because Xcode runs its strip\n    # phase AFTER the script runs.\n    embed_fw_wrapper = os.path.splitext(os.environ['WRAPPER_NAME'])[0] + \".embeddedframework\"\n    remove_path(fw_path)\n    attempt_symlink(fw_path, os.path.join(embed_fw_wrapper, os.environ['WRAPPER_NAME']))\n\n\n# Run the build process in slave mode to build the other configuration\n# (device/simulator).\n#\ndef run_slave_build(project):\n    print_and_call_slave_build(project.get_slave_project_build_command(), project.other_platform)\n\n# Run the build process.\n#\ndef run_build():\n    project = Project(os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\"))\n\n    # Issue warnings only if we're master.\n    if is_master():\n        if len(project.compilable_sources) == 0:\n            raise Exception(\"No compilable sources found. Please add at least one source file to build target %s.\" % os.environ['TARGET_NAME'])\n\n        if config_warn_derived_data:\n            check_for_derived_data_in_search_paths(project)\n        if config_warn_no_public_headers and len(project.public_headers) == 0:\n            issue_warning('No headers in build target %s were marked public. Please move at least one header to \"Public\" in the \"Copy Headers\" build phase.' % os.environ['TARGET_NAME'])\n\n    # Only build slave if this is an archive build.\n    if is_archive_build():\n        if is_master():\n            log.debug(\"Building as MASTER\")\n            # The slave-side linker tries to include this (nonexistent) path as\n            # a library path.\n            ensure_path_exists(project.get_slave_environment()['BUILT_PRODUCTS_DIR'])\n            project.build_state.persist()\n            run_slave_build(project)\n            project.build_state.reload()\n        else:\n            log.debug(\"Building as SLAVE\")\n            project.build_state.reload()\n            project.build_state.set_slave_properties(project.local_architectures,\n                                                     project.local_linked_archive_paths,\n                                                     project.local_built_fw_path,\n                                                     project.local_built_embedded_fw_path)\n            project.build_state.persist()\n\n    link_local_archs(project)\n    \n    # Only do a universal binary when building an archive.\n    if is_archive_build() and is_master():\n        link_combine_all_archs(project)\n    else:\n        link_combine_local_archs(project)\n\n    if config_deep_header_hierarchy:\n        build_deep_header_hierarchy(project)\n\n    add_symlinks_to_framework(project)\n    \n    if is_master():\n        if config_framework_type == 'embeddedframework':\n            build_embedded_framework(project)\n        elif config_framework_type != 'framework':\n            raise Exception(\"%s: Unknown framework type for config_framework_type\" % config_framework_type)\n\n\nif __name__ == \"__main__\":\n    log_handler = logging.StreamHandler()\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n    log.addHandler(log_handler)\n    log.setLevel(config_log_level)\n\n    error_code = 0\n    prefix = \"M\" if is_master() else \"S\"\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + prefix + \" \" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n\n    log.debug(\"Begin build process\")\n\n    if config_deep_header_top:\n        config_deep_header_top = string.Template(config_deep_header_top).substitute(os.environ)\n\n    try:\n        run_build()\n        if issued_warnings:\n            if config_fail_on_warnings:\n                error_code = 1\n            log.warn(\"Build completed with warnings\")\n        else:\n            log.info(\"Build completed\")\n        if not is_archive_build():\n            log.info(\"Note: This is *NOT* a universal framework build. To build as a universal framework, do an archive build.\")\n            log.info(\"To do an archive build from command line, use \\\"xcodebuild -configuration Release UFW_ACTION=archive clean build\\\"\")\n    except Exception:\n        traceback.print_exc(file=sys.stdout)\n        error_code = 1\n        log.error(\"Build failed\")\n    finally:\n        if error_code == 0 and is_archive_build() and is_master():\n            log.info(\"Built framework is in \" + os.environ['TARGET_BUILD_DIR'])\n            if should_open_build_dir():\n                open_build_dir()\n        sys.exit(error_code)\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		473CB0601F7E8B7B003431CD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				47E9FDB622EB4DF200836E3B /* LoopMeORTBTools.m in Sources */,
				47E9FD7D22EB4DAB00836E3B /* LoopMeVPAIDClient.m in Sources */,
				47E9FDC322EB4E0300836E3B /* LoopMeCancelView.m in Sources */,
				47E9FDCA22EB4E0800836E3B /* LoopMeAdView.m in Sources */,
				47E9FDC522EB4E0300836E3B /* LoopMeBackView.m in Sources */,
				47E9FD9A22EB4DCC00836E3B /* LoopMeServerCommunicator.m in Sources */,
				47E9FE0C22EB4E3700836E3B /* LoopMeGDPRTools.m in Sources */,
				47E9FDBE22EB4DF900836E3B /* LoopMeProgressOverlayView.m in Sources */,
				47E9FDAD22EB4DE700836E3B /* LoopMeSDKConfiguration.m in Sources */,
				47E9FDC922EB4E0800836E3B /* LoopMeMinimizedAdView.m in Sources */,
				47E9FD7E22EB4DAB00836E3B /* LoopMeJSClient.m in Sources */,
				47E9FD9622EB4DCC00836E3B /* LoopMeVASTImageDownloader.m in Sources */,
				47E9FDD422EB4E1000836E3B /* LoopMeVPAIDError.m in Sources */,
				47E9FDE122EB4E1600836E3B /* NSURL+LoopMeAdditions.m in Sources */,
				47E9FDF922EB4E1F00836E3B /* DDXMLElement.m in Sources */,
				47E9FDC222EB4E0300836E3B /* LoopMeVASTPlayerUIView.m in Sources */,
				47E9FD8C22EB4DB500836E3B /* LoopMeInterstitialGeneral.m in Sources */,
				47E9FD7022EB4D7500836E3B /* LoopMeOMIDWrapper.m in Sources */,
				47E9FD7F22EB4DAB00836E3B /* LoopMeVideoClientNormal.m in Sources */,
				47E9FD9422EB4DCC00836E3B /* LoopMeVideoManager.m in Sources */,
				47E9FD8D22EB4DBA00836E3B /* LoopMeDiscURLCache.m in Sources */,
				47E9FDB222EB4DEC00836E3B /* LoopMeVPAIDAdDisplayController.m in Sources */,
				47E9FD9722EB4DCC00836E3B /* LoopMeAdManager.m in Sources */,
				47E9FDA122EB4DD000836E3B /* LoopMeErrorEventSender.m in Sources */,
				47E9FDDD22EB4E1000836E3B /* LoopMeGlobalSettings.m in Sources */,
				47E9FDF322EB4E1A00836E3B /* LoopMeVASTProgressEvent.m in Sources */,
				47E9FDE022EB4E1600836E3B /* NSString+Encryption.m in Sources */,
				47E9FDF222EB4E1A00836E3B /* LoopMeVASTAssetLinks.m in Sources */,
				47E9FD7122EB4D7500836E3B /* LoopMeOMIDVideoEventsWrapper.m in Sources */,
				47E9FDC422EB4E0300836E3B /* LoopMeCloseButton.m in Sources */,
				47E9FD7722EB4D9800836E3B /* LoopMeViewabilityManager.m in Sources */,
				47E9FDA222EB4DD000836E3B /* LoopMeVASTEventTracker.m in Sources */,
				47E9FDCD22EB4E0B00836E3B /* LoopMeSDK.m in Sources */,
				47E9FDEA22EB4E1600836E3B /* LoopMeGeoLocationProvider.m in Sources */,
				47E9FDE922EB4E1600836E3B /* LoopMeLogging.m in Sources */,
				47E9FD8F22EB4DBD00836E3B /* LoopMeTargeting.m in Sources */,
				47E9FDB122EB4DEC00836E3B /* LoopMeAdDisplayControllerNormal.m in Sources */,
				47E9FDF422EB4E1A00836E3B /* LoopMeVASTMacroProcessor.m in Sources */,
				47E9FDCE22EB4E1000836E3B /* LoopMeAnalyticsProvider.m in Sources */,
				47E9FDFE22EB4E2200836E3B /* DDXMLDocument.m in Sources */,
				47E9FDCB22EB4E0B00836E3B /* LoopMeMaximizedViewController.m in Sources */,
				47E9FDA722EB4DD800836E3B /* LoopMeBrowserViewController.m in Sources */,
				47E9FDA522EB4DD500836E3B /* LoopMeInterstitialViewController.m in Sources */,
				47E9FDEC22EB4E1600836E3B /* LoopMeVPAIDConverter.m in Sources */,
				47E9FDC122EB4DFF00836E3B /* LoopMeAdWebView.m in Sources */,
				47E9FDD022EB4E1000836E3B /* LoopMeError.m in Sources */,
				47E9FDBB22EB4DF900836E3B /* LoopMeActivityIndicatorView.m in Sources */,
				47E9FDE822EB4E1600836E3B /* LoopMeIdentityProvider.m in Sources */,
				47E9FDF122EB4E1A00836E3B /* LoopMeVASTXMLParser.m in Sources */,
				47E9FDDF22EB4E1600836E3B /* NSData+LoopMeAES128.m in Sources */,
				47E9FDF522EB4E1A00836E3B /* LoopMeSkipOffset.m in Sources */,
				47E9FD8522EB4DAB00836E3B /* LoopMeVPAIDVideoClient.m in Sources */,
				47E9FDE622EB4E1600836E3B /* UIImage+LoopMeBinaryImage.m in Sources */,
				47E9FDF622EB4E1A00836E3B /* LoopMeVASTTrackingLinks.m in Sources */,
				47E9FD8422EB4DAB00836E3B /* LoopMeMRAIDClient.m in Sources */,
				47E9FDE322EB4E1600836E3B /* NSDictionary+JSONPrint.m in Sources */,
				47E9FE0A22EB4E3700836E3B /* LoopMeGDPRAPIService.m in Sources */,
				47E9FD9B22EB4DCC00836E3B /* LoopMeURLResolver.m in Sources */,
				47E9FDAB22EB4DE200836E3B /* LoopMe360ViewController.m in Sources */,
				47E9FDB522EB4DEC00836E3B /* LoopMeAdDisplayController.m in Sources */,
				47E9FDFD22EB4E2200836E3B /* DDXMLNode.m in Sources */,
				47E9FE0722EB4E3700836E3B /* LoopMeGDPRViewController.m in Sources */,
				47E9FDA922EB4DE000836E3B /* LoopMeGLProgram.m in Sources */,
				47E9FDDC22EB4E1000836E3B /* LoopMeAudioCheck.m in Sources */,
				47E9FD9522EB4DCC00836E3B /* LoopMeReachability.m in Sources */,
				47E9FD9922EB4DCC00836E3B /* LoopMeAdConfiguration.m in Sources */,
				47E9FD7922EB4D9D00836E3B /* LoopMeIASWrapper.m in Sources */,
				47E9FDFC22EB4E2200836E3B /* DDXMLElementAdditions.m in Sources */,
				47E9FD8B22EB4DB500836E3B /* LoopMeInterstitial.m in Sources */,
				47E9FE0222EB4E2D00836E3B /* NSString+DDXML.m in Sources */,
				47E9FDB322EB4DEC00836E3B /* LoopMeDestinationDisplayController.m in Sources */,
				47E9FDB722EB4DF200836E3B /* LoopMeServerURLBuilder.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D05C33151A7FC23500E0E9A9 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				47B01CFB22E094AB00F8B6DC /* LoopMeORTBTools.m in Sources */,
				47B01CC222E094AB00F8B6DC /* LoopMeVPAIDClient.m in Sources */,
				47B01D0822E094AB00F8B6DC /* LoopMeCancelView.m in Sources */,
				47B01D0F22E094AB00F8B6DC /* LoopMeAdView.m in Sources */,
				47B01D0A22E094AB00F8B6DC /* LoopMeBackView.m in Sources */,
				47B01CDF22E094AB00F8B6DC /* LoopMeServerCommunicator.m in Sources */,
				47B01D5122E094AB00F8B6DC /* LoopMeGDPRTools.m in Sources */,
				47B01D0322E094AB00F8B6DC /* LoopMeProgressOverlayView.m in Sources */,
				47B01CF222E094AB00F8B6DC /* LoopMeSDKConfiguration.m in Sources */,
				47B01D0E22E094AB00F8B6DC /* LoopMeMinimizedAdView.m in Sources */,
				47B01CC322E094AB00F8B6DC /* LoopMeJSClient.m in Sources */,
				47B01CDB22E094AB00F8B6DC /* LoopMeVASTImageDownloader.m in Sources */,
				47B01D1922E094AB00F8B6DC /* LoopMeVPAIDError.m in Sources */,
				47B01D2622E094AB00F8B6DC /* NSURL+LoopMeAdditions.m in Sources */,
				47B01D3E22E094AB00F8B6DC /* DDXMLElement.m in Sources */,
				47B01D0722E094AB00F8B6DC /* LoopMeVASTPlayerUIView.m in Sources */,
				47B01CD122E094AB00F8B6DC /* LoopMeInterstitialGeneral.m in Sources */,
				47B01CB822E094AB00F8B6DC /* LoopMeOMIDWrapper.m in Sources */,
				47B01CC422E094AB00F8B6DC /* LoopMeVideoClientNormal.m in Sources */,
				47B01CD922E094AB00F8B6DC /* LoopMeVideoManager.m in Sources */,
				47B01CD222E094AB00F8B6DC /* LoopMeDiscURLCache.m in Sources */,
				47B01CF722E094AB00F8B6DC /* LoopMeVPAIDAdDisplayController.m in Sources */,
				47B01CDC22E094AB00F8B6DC /* LoopMeAdManager.m in Sources */,
				47B01CE622E094AB00F8B6DC /* LoopMeErrorEventSender.m in Sources */,
				47B01D2222E094AB00F8B6DC /* LoopMeGlobalSettings.m in Sources */,
				47B01D3822E094AB00F8B6DC /* LoopMeVASTProgressEvent.m in Sources */,
				47B01D2522E094AB00F8B6DC /* NSString+Encryption.m in Sources */,
				47B01D3722E094AB00F8B6DC /* LoopMeVASTAssetLinks.m in Sources */,
				47B01CB922E094AB00F8B6DC /* LoopMeOMIDVideoEventsWrapper.m in Sources */,
				47B01D0922E094AB00F8B6DC /* LoopMeCloseButton.m in Sources */,
				47B01CBC22E094AB00F8B6DC /* LoopMeViewabilityManager.m in Sources */,
				47B01CE722E094AB00F8B6DC /* LoopMeVASTEventTracker.m in Sources */,
				47B01D1222E094AB00F8B6DC /* LoopMeSDK.m in Sources */,
				47B01D2F22E094AB00F8B6DC /* LoopMeGeoLocationProvider.m in Sources */,
				47B01D2E22E094AB00F8B6DC /* LoopMeLogging.m in Sources */,
				47B01CD422E094AB00F8B6DC /* LoopMeTargeting.m in Sources */,
				47B01CF622E094AB00F8B6DC /* LoopMeAdDisplayControllerNormal.m in Sources */,
				47B01D3922E094AB00F8B6DC /* LoopMeVASTMacroProcessor.m in Sources */,
				47B01D1322E094AB00F8B6DC /* LoopMeAnalyticsProvider.m in Sources */,
				47B01D4322E094AB00F8B6DC /* DDXMLDocument.m in Sources */,
				47B01D1022E094AB00F8B6DC /* LoopMeMaximizedViewController.m in Sources */,
				47B01CEC22E094AB00F8B6DC /* LoopMeBrowserViewController.m in Sources */,
				47B01CEA22E094AB00F8B6DC /* LoopMeInterstitialViewController.m in Sources */,
				47B01D3122E094AB00F8B6DC /* LoopMeVPAIDConverter.m in Sources */,
				47B01D0622E094AB00F8B6DC /* LoopMeAdWebView.m in Sources */,
				47B01D1522E094AB00F8B6DC /* LoopMeError.m in Sources */,
				47B01D0022E094AB00F8B6DC /* LoopMeActivityIndicatorView.m in Sources */,
				47B01D2D22E094AB00F8B6DC /* LoopMeIdentityProvider.m in Sources */,
				47B01D3622E094AB00F8B6DC /* LoopMeVASTXMLParser.m in Sources */,
				47B01D2422E094AB00F8B6DC /* NSData+LoopMeAES128.m in Sources */,
				47B01D3A22E094AB00F8B6DC /* LoopMeSkipOffset.m in Sources */,
				47B01CCA22E094AB00F8B6DC /* LoopMeVPAIDVideoClient.m in Sources */,
				47B01D2B22E094AB00F8B6DC /* UIImage+LoopMeBinaryImage.m in Sources */,
				47B01D3B22E094AB00F8B6DC /* LoopMeVASTTrackingLinks.m in Sources */,
				47B01CC922E094AB00F8B6DC /* LoopMeMRAIDClient.m in Sources */,
				47B01D2822E094AB00F8B6DC /* NSDictionary+JSONPrint.m in Sources */,
				47B01D4F22E094AB00F8B6DC /* LoopMeGDPRAPIService.m in Sources */,
				47B01CE022E094AB00F8B6DC /* LoopMeURLResolver.m in Sources */,
				47B01CF022E094AB00F8B6DC /* LoopMe360ViewController.m in Sources */,
				47B01CFA22E094AB00F8B6DC /* LoopMeAdDisplayController.m in Sources */,
				47B01D4222E094AB00F8B6DC /* DDXMLNode.m in Sources */,
				47B01D4C22E094AB00F8B6DC /* LoopMeGDPRViewController.m in Sources */,
				47B01CEE22E094AB00F8B6DC /* LoopMeGLProgram.m in Sources */,
				47B01D2122E094AB00F8B6DC /* LoopMeAudioCheck.m in Sources */,
				47B01CDA22E094AB00F8B6DC /* LoopMeReachability.m in Sources */,
				47B01CDE22E094AB00F8B6DC /* LoopMeAdConfiguration.m in Sources */,
				47B01CBE22E094AB00F8B6DC /* LoopMeIASWrapper.m in Sources */,
				47B01D4122E094AB00F8B6DC /* DDXMLElementAdditions.m in Sources */,
				47B01CD022E094AB00F8B6DC /* LoopMeInterstitial.m in Sources */,
				47B01D4722E094AB00F8B6DC /* NSString+DDXML.m in Sources */,
				47B01CF822E094AB00F8B6DC /* LoopMeDestinationDisplayController.m in Sources */,
				47B01CFC22E094AB00F8B6DC /* LoopMeServerURLBuilder.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		473CB0BC1F7E8B7B003431CD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				CODE_SIGN_STYLE = Automatic;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = Q876VLK88R;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				ENABLE_BITCODE = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability\"",
					"\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability/OMSDK\"",
				);
				FRAMEWORK_VERSION = A;
				HEADER_SEARCH_PATHS = "$(SDKROOT)/usr/include/libxml2";
				INFOPLIST_FILE = "LoopMeCompilerUnity-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LIBRARY_SEARCH_PATHS = "\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability/IAS\"";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = "";
				PRODUCT_BUNDLE_IDENTIFIER = com.loopme.LoopMeSDK;
				PRODUCT_NAME = LoopMeUnitedSDK;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SYMROOT = build;
				TARGETED_DEVICE_FAMILY = 2;
				UNITY_BUILD = YES;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				USER_HEADER_SEARCH_PATHS = "";
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		473CB0BD1F7E8B7B003431CD /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				CODE_SIGN_STYLE = Automatic;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = Q876VLK88R;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				ENABLE_BITCODE = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability\"",
					"\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability/OMSDK\"",
				);
				FRAMEWORK_VERSION = A;
				HEADER_SEARCH_PATHS = "$(SDKROOT)/usr/include/libxml2";
				INFOPLIST_FILE = "LoopMeCompilerUnity-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LIBRARY_SEARCH_PATHS = "\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability/IAS\"";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				OTHER_LDFLAGS = "";
				PRODUCT_BUNDLE_IDENTIFIER = com.loopme.LoopMeSDK;
				PRODUCT_NAME = LoopMeUnitedSDK;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SYMROOT = build;
				TARGETED_DEVICE_FAMILY = 2;
				UNITY_BUILD = YES;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				USER_HEADER_SEARCH_PATHS = "";
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		D05C33281A7FC23500E0E9A9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "";
			};
			name = Debug;
		};
		D05C33291A7FC23500E0E9A9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				PRODUCT_NAME = "";
				SWIFT_COMPILATION_MODE = wholemodule;
			};
			name = Release;
		};
		D05C332B1A7FC23500E0E9A9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "iPhone Developer";
				CODE_SIGN_STYLE = Automatic;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = Q876VLK88R;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				ENABLE_BITCODE = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability\"",
					"\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability/OMSDK\"",
				);
				FRAMEWORK_VERSION = A;
				HEADER_SEARCH_PATHS = "$(SDKROOT)/usr/include/libxml2";
				INFOPLIST_FILE = LoopMeCompiler/Info.plist;
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LIBRARY_SEARCH_PATHS = "\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability/IAS\"";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_BUNDLE_IDENTIFIER = com.loopme.LoopMeUnitedSDK;
				PRODUCT_NAME = LoopMeUnitedSDK;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				SYMROOT = build;
				UNITY_BUILD = NO;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				USER_HEADER_SEARCH_PATHS = "";
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		D05C332C1A7FC23500E0E9A9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "iPhone Developer";
				CODE_SIGN_STYLE = Automatic;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DEVELOPMENT_TEAM = Q876VLK88R;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				ENABLE_BITCODE = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability\"",
					"\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability/OMSDK\"",
				);
				FRAMEWORK_VERSION = A;
				HEADER_SEARCH_PATHS = "$(SDKROOT)/usr/include/libxml2";
				INFOPLIST_FILE = LoopMeCompiler/Info.plist;
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LIBRARY_SEARCH_PATHS = "\"$(PROJECT_DIR)/../LoopMeSDK Sources/Viewability/IAS\"";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_BUNDLE_IDENTIFIER = com.loopme.LoopMeUnitedSDK;
				PRODUCT_NAME = LoopMeUnitedSDK;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				SYMROOT = build;
				UNITY_BUILD = NO;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				USER_HEADER_SEARCH_PATHS = "";
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		473CB0BB1F7E8B7B003431CD /* Build configuration list for PBXNativeTarget "LoopMeCompilerUnity" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				473CB0BC1F7E8B7B003431CD /* Debug */,
				473CB0BD1F7E8B7B003431CD /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D05C33141A7FC23500E0E9A9 /* Build configuration list for PBXProject "LoopMeCompiler" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D05C33281A7FC23500E0E9A9 /* Debug */,
				D05C33291A7FC23500E0E9A9 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D05C332A1A7FC23500E0E9A9 /* Build configuration list for PBXNativeTarget "LoopMeCompiler" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D05C332B1A7FC23500E0E9A9 /* Debug */,
				D05C332C1A7FC23500E0E9A9 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = D05C33111A7FC23500E0E9A9 /* Project object */;
}
